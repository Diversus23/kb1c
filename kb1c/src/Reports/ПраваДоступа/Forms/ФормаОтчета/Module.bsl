////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Пользователь)
	 ИЛИ (   НЕ Пользователи.ЭтоПолноправныйПользователь()
	       И Параметры.Пользователь <> Пользователи.АвторизованныйПользователь() ) Тогда
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ПодробныеСведенияОПравахДоступа.Видимость =
		НЕ УправлениеДоступомПереопределяемый.УпрощенныйИнтерфейсНастройкиПравДоступа();
	
	ВывестиОтчет(Параметры.Пользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Строка")
	   И Лев(Расшифровка, СтрДлина("Открыть форму списка: ")) = "Открыть форму списка: " Тогда
		//
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму(Сред(Расшифровка, СтрДлина("Открыть форму списка: ") + 1) + ".ФормаСписка");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сформировать(Команда)
	
	ВывестиОтчет(Параметры.Пользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВывестиОтчет(Ссылка)
	
	ВыводПравГруппы = ТипЗнч(Параметры.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей")
	              ИЛИ ТипЗнч(Параметры.Пользователь) = Тип("СправочникСсылка.ГруппыВнешнихПользователей");
	
	УпрощенныйИнтерфейс = УправлениеДоступомПереопределяемый.УпрощенныйИнтерфейсНастройкиПравДоступа();
	
	Документ = Новый ТабличныйДокумент;
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
	Свойства = Новый Структура;
	Свойства.Вставить("Ссылка", Ссылка);
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
		Свойства.Вставить("ЗаголовокОтчета",             НСтр("ru = 'Отчет по правам пользователя'"));
		Свойства.Вставить("РолиПоПрофилямГруппировка",   НСтр("ru = 'Роли пользователя по профилям'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Пользователь: %1'"));
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		Свойства.Вставить("ЗаголовокОтчета",             НСтр("ru = 'Отчет по правам внешнего пользователя'"));
		Свойства.Вставить("РолиПоПрофилямГруппировка",   НСтр("ru = 'Роли внешнего пользователя по профилям'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Внешний пользователь: %1'"));
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Свойства.Вставить("ЗаголовокОтчета",             НСтр("ru = 'Отчет по правам группы пользователей'"));
		Свойства.Вставить("РолиПоПрофилямГруппировка",   НСтр("ru = 'Роли группы пользователей по профилям'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Группа пользователей: %1'"));
	Иначе
		Свойства.Вставить("ЗаголовокОтчета",             НСтр("ru = 'Отчет по правам группы внешних пользователей'"));
		Свойства.Вставить("РолиПоПрофилямГруппировка",   НСтр("ru = 'Роли группы внешних пользователей по профилям'"));
		Свойства.Вставить("ПредставлениеОбъекта",        НСтр("ru = 'Группа внешних пользователей: %1'"));
	КонецЕсли;
	
	Свойства.ПредставлениеОбъекта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Свойства.ПредставлениеОбъекта, Строка(Ссылка));
	
	// Вывод заголовка.
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Заполнить(Свойства);
	Документ.Вывести(Область);
	
	// Вывод свойств пользователя ИБ для пользователя и внешнего пользователя
	Если НЕ ВыводПравГруппы Тогда
		
		Документ.НачатьАвтогруппировкуСтрок();
		Документ.Вывести(Макет.ПолучитьОбласть("СвойстваПользователяИБГруппировка"), 1,, Истина);
		Область = Макет.ПолучитьОбласть("СвойстваПользователяИБДетали1");
		
		СвойстваПользователяИБ = Неопределено;
		
		УстановитьПривилегированныйРежим(Истина);
		
		ПользовательИБПрочитан = Пользователи.ПрочитатьПользователяИБ(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ИдентификаторПользователяИБ"),
			СвойстваПользователяИБ);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ПользовательИБПрочитан Тогда
			Область.Параметры.ДоступКИнформационнойБазеРазрешен = Истина;
			Документ.Вывести(Область, 2);
			
			Область = Макет.ПолучитьОбласть("СвойстваПользователяИБДетали2");
			Область.Параметры.Заполнить(СвойстваПользователяИБ);
			
			Область.Параметры.ЯзыкПредставление =
				ПредставлениеЯзыка(СвойстваПользователяИБ.Язык);
			
			Область.Параметры.РежимЗапускаПредставление =
				ПредставлениеРежимаЗапуска(СвойстваПользователяИБ.РежимЗапуска);
			
			Если НЕ ЗначениеЗаполнено(СвойстваПользователяИБ.ПользовательОС) Тогда
				Область.Параметры.ПользовательОС = НСтр("ru = 'Не указан'");
			КонецЕсли;
			Документ.Вывести(Область, 2);
		Иначе
			Область.Параметры.ДоступКИнформационнойБазеРазрешен = Ложь;
			Документ.Вывести(Область, 2);
		КонецЕсли;
		Документ.ЗакончитьАвтогруппировкуСтрок();
	КонецЕсли;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи")
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ИдентификаторПользователяИБ"));
		УстановитьПривилегированныйРежим(Ложь);
		
		Если Пользователи.ЭтоПолноправныйПользователь(ПользовательИБ, Истина) Тогда
			
			Область = Макет.ПолучитьОбласть("ПолноправныйПользователь");
			Документ.Вывести(Область, 1);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Вывод групп доступа.
	УстановитьПривилегированныйРежим(Истина);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь",        Ссылка);
	Запрос.УстановитьПараметр("ВыводПравГруппы",     ВыводПравГруппы);
	Запрос.УстановитьПараметр("ВидыОграниченийПрав", ВидыОграниченийПравОбъектовМетаданных());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	ГруппыДоступа.Профиль,
	|	ГруппыДоступаПользователи.Пользователь,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ГруппыДоступаПользователи.Пользователь) <> ТИП(Справочник.Пользователи)
	|				И ТИПЗНАЧЕНИЯ(ГруппыДоступаПользователи.Пользователь) <> ТИП(Справочник.ВнешниеПользователи)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрупповоеУчастие
	|ПОМЕСТИТЬ ГруппыДоступаПользователя
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|		ПО ГруппыДоступа.Ссылка = ГруппыДоступаПользователи.Ссылка
	|			И (НЕ ГруппыДоступа.ПометкаУдаления)
	|			И (НЕ ГруппыДоступа.Профиль.ПометкаУдаления)
	|			И (ВЫБОР
	|				КОГДА &ВыводПравГруппы
	|					ТОГДА ГруппыДоступаПользователи.Пользователь = &Пользователь
	|				ИНАЧЕ ИСТИНА В
	|						(ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|						ГДЕ
	|							СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
	|							И СоставыГруппПользователей.Пользователь = &Пользователь)
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ГруппыДоступаПользователя.ГруппаДоступа) КАК ПредставлениеГруппыДоступа,
	|	ГруппыДоступаПользователя.Пользователь КАК Участник,
	|	ГруппыДоступаПользователя.Пользователь.Наименование КАК ПредставлениеУчастника,
	|	ГруппыДоступаПользователя.ГрупповоеУчастие,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Ответственный КАК Ответственный,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Ответственный.Наименование КАК ПредставлениеОтветственного,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Описание КАК Описание,
	|	ГруппыДоступаПользователя.ГруппаДоступа.Профиль КАК Профиль,
	|	ПРЕДСТАВЛЕНИЕ(ГруппыДоступаПользователя.ГруппаДоступа.Профиль) КАК ПредставлениеПрофиля
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|ИТОГИ
	|	МАКСИМУМ(Участник)
	|ПО
	|	ГруппаДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступаПользователя.Профиль
	|ПОМЕСТИТЬ ПрофилиПользователя
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрофилиПользователя.Профиль КАК Профиль,
	|	ПРЕДСТАВЛЕНИЕ(ПрофилиПользователя.Профиль) КАК ПредставлениеПрофиля,
	|	РолиПрофилей.Роль.Имя КАК Роль,
	|	РолиПрофилей.Роль.Синоним КАК ПредставлениеРоли
	|ИЗ
	|	ПрофилиПользователя КАК ПрофилиПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|		ПО ПрофилиПользователя.Профиль = РолиПрофилей.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(Профиль),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(Роль),
	|	МАКСИМУМ(ПредставлениеРоли)
	|ПО
	|	Профиль,
	|	Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.ЗначениеДоступа) КАК ТипЗначений,
	|	ПраваПоЗначениямДоступа.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПраваПоЗначениямДоступа.Пользователь КАК Пользователь,
	|	ПраваПоЗначениямДоступа.Пользователь.Наименование КАК ПользовательНаименование,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.Пользователь) <> ТИП(Справочник.Пользователи)
	|				И ТИПЗНАЧЕНИЯ(ПраваПоЗначениямДоступа.Пользователь) <> ТИП(Справочник.ВнешниеПользователи)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрупповоеУчастие,
	|	ПраваПоЗначениямДоступа.Право,
	|	ПраваПоЗначениямДоступа.Запрещено КАК Запрещено,
	|	ПраваПоЗначениямДоступа.РаспространяетсяВИерархии КАК РаспространяетсяВИерархии
	|ИЗ
	|	РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениямДоступа
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ВыводПравГруппы
	|				ТОГДА ПраваПоЗначениямДоступа.Пользователь = &Пользователь
	|			ИНАЧЕ ИСТИНА В
	|					(ВЫБРАТЬ ПЕРВЫЕ 1
	|						ИСТИНА
	|					ИЗ
	|						РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|					ГДЕ
	|						СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениямДоступа.Пользователь
	|						И СоставыГруппПользователей.Пользователь = &Пользователь)
	|		КОНЕЦ
	|ИТОГИ
	|	МАКСИМУМ(Пользователь),
	|	МАКСИМУМ(ПользовательНаименование),
	|	МАКСИМУМ(ГрупповоеУчастие),
	|	МАКСИМУМ(Запрещено),
	|	МАКСИМУМ(РаспространяетсяВИерархии)
	|ПО
	|	ТипЗначений,
	|	ЗначениеДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОграниченийПрав.Таблица,
	|	ВидыОграниченийПрав.Право,
	|	ВидыОграниченийПрав.ВидДоступа
	|ПОМЕСТИТЬ ВидыОграниченийПрав
	|ИЗ
	|	&ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователя.Профиль КАК Профиль,
	|	ГруппыДоступаПользователя.ГруппаДоступа КАК ГруппаДоступа,
	|	ЕСТЬNULL(ГруппыДоступаВидыДоступа.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)) КАК ВидДоступа,
	|	ЕСТЬNULL(ГруппыДоступаВидыДоступа.ДоступРазрешен, ЛОЖЬ) КАК ДоступРазрешен,
	|	ЕСТЬNULL(ГруппыДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
	|ПОМЕСТИТЬ ВидыИЗначенияДоступа
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ВидыДоступа КАК ГруппыДоступаВидыДоступа
	|		ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.ГруппаДоступа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ЗначенияДоступа КАК ГруппыДоступаЗначенияДоступа
	|		ПО (ГруппыДоступаВидыДоступа.Ссылка = ГруппыДоступаЗначенияДоступа.Ссылка)
	|			И (ГруппыДоступаВидыДоступа.ВидДоступа = ГруппыДоступаЗначенияДоступа.ВидДоступа)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователя.Профиль,
	|	ГруппыДоступаПользователя.ГруппаДоступа,
	|	ПрофилиГруппДоступаВидыДоступа.ВидДоступа,
	|	ПрофилиГруппДоступаВидыДоступа.ДоступРазрешен,
	|	ЕСТЬNULL(ПрофилиГруппДоступаЗначенияДоступа.ЗначениеДоступа, НЕОПРЕДЕЛЕНО)
	|ИЗ
	|	ГруппыДоступаПользователя КАК ГруппыДоступаПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ПрофилиГруппДоступаВидыДоступа
	|		ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ГруппыДоступаПользователя.Профиль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ЗначенияДоступа КАК ПрофилиГруппДоступаЗначенияДоступа
	|		ПО (ПрофилиГруппДоступаВидыДоступа.Ссылка = ПрофилиГруппДоступаЗначенияДоступа.Ссылка)
	|			И (ПрофилиГруппДоступаВидыДоступа.ВидДоступа = ПрофилиГруппДоступаЗначенияДоступа.ВидДоступа)
	|ГДЕ
	|	ПрофилиГруппДоступаВидыДоступа.Предустановленный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПраваРолейПрофилей.Таблица.Родитель.Имя КАК ВидОбъектов,
	|	ПраваРолейПрофилей.Таблица.Родитель.Синоним КАК ПредставлениеВидаОбъектов,
	|	ПраваРолейПрофилей.Таблица.Родитель.ПорядокКоллекции КАК ПорядокВидаОбъектов,
	|	ПраваРолейПрофилей.Таблица.ПолноеИмя КАК Таблица,
	|	ПраваРолейПрофилей.Таблица.Имя КАК Объект,
	|	ПраваРолейПрофилей.Таблица.Синоним КАК ПредставлениеОбъекта,
	|	ПраваРолейПрофилей.Профиль КАК Профиль,
	|	ПраваРолейПрофилей.Профиль.Наименование КАК ПредставлениеПрофиля,
	|	ПраваРолейПрофилей.Роль.Имя КАК Роль,
	|	ПраваРолейПрофилей.Роль.Синоним КАК ПредставлениеРоли,
	|	ПраваРолейПрофилей.ВидРолей КАК ВидРолей,
	|	ПраваРолейПрофилей.ЧтениеБезОграничения КАК ЧтениеБезОграничения,
	|	ПраваРолейПрофилей.Просмотр КАК Просмотр,
	|	ПраваРолейПрофилей.ГруппаДоступа КАК ГруппаДоступа,
	|	ПраваРолейПрофилей.ГруппаДоступа.Наименование КАК ПредставлениеГруппыДоступа,
	|	ПраваРолейПрофилей.ВидДоступа КАК ВидДоступа,
	|	ПраваРолейПрофилей.ВидДоступа.Наименование КАК ПредставлениеВидаДоступа,
	|	ПраваРолейПрофилей.ДоступРазрешен КАК ДоступРазрешен,
	|	ПраваРолейПрофилей.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ПраваРолейПрофилей.ЗначениеДоступа) КАК ПредставлениеЗначенияДоступа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПраваРолей.ОбъектМетаданных КАК Таблица,
	|		РолиПрофилей.Ссылка КАК Профиль,
	|		ВЫБОР
	|			КОГДА ПраваРолей.Просмотр
	|					И ПраваРолей.ЧтениеБезОграничения
	|				ТОГДА 0
	|			КОГДА НЕ ПраваРолей.Просмотр
	|					И ПраваРолей.ЧтениеБезОграничения
	|				ТОГДА 1
	|			КОГДА ПраваРолей.Просмотр
	|					И НЕ ПраваРолей.ЧтениеБезОграничения
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ КАК ВидРолей,
	|		ПраваРолей.Роль КАК Роль,
	|		ПраваРолей.ЧтениеБезОграничения КАК ЧтениеБезОграничения,
	|		ПраваРолей.Просмотр КАК Просмотр,
	|		НЕОПРЕДЕЛЕНО КАК ГруппаДоступа,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка) КАК ВидДоступа,
	|		НЕОПРЕДЕЛЕНО КАК ДоступРазрешен,
	|		НЕОПРЕДЕЛЕНО КАК ЗначениеДоступа
	|	ИЗ
	|		РегистрСведений.ПраваРолей КАК ПраваРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваРолей.Роль = РолиПрофилей.Роль
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваРолей.ОбъектМетаданных,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		РегистрСведений.ПраваРолей КАК ПраваРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваРолей.Роль = РолиПрофилей.Роль
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыИЗначенияДоступа КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваРолей.ОбъектМетаданных)
	|				И (ВидыОграниченийПрав.Право = ""Чтение"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)) КАК ПраваРолейПрофилей
	|ИТОГИ
	|	МАКСИМУМ(ПредставлениеВидаОбъектов),
	|	МАКСИМУМ(ПорядокВидаОбъектов),
	|	МАКСИМУМ(Таблица),
	|	МАКСИМУМ(ПредставлениеОбъекта),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(ПредставлениеРоли),
	|	МАКСИМУМ(ЧтениеБезОграничения),
	|	МАКСИМУМ(Просмотр),
	|	МАКСИМУМ(ПредставлениеГруппыДоступа),
	|	МАКСИМУМ(ПредставлениеВидаДоступа),
	|	МАКСИМУМ(ДоступРазрешен)
	|ПО
	|	ВидОбъектов,
	|	Объект,
	|	Профиль,
	|	ВидРолей,
	|	Роль,
	|	ГруппаДоступа,
	|	ВидДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПраваРолейПрофилей.Таблица.Родитель.Имя КАК ВидОбъектов,
	|	ПраваРолейПрофилей.Таблица.Родитель.Синоним КАК ПредставлениеВидаОбъектов,
	|	ПраваРолейПрофилей.Таблица.Родитель.ПорядокКоллекции КАК ПорядокВидаОбъектов,
	|	ПраваРолейПрофилей.Таблица.ПолноеИмя КАК Таблица,
	|	ПраваРолейПрофилей.Таблица.Имя КАК Объект,
	|	ПраваРолейПрофилей.Таблица.Синоним КАК ПредставлениеОбъекта,
	|	ПраваРолейПрофилей.Профиль КАК Профиль,
	|	ПраваРолейПрофилей.Профиль.Наименование КАК ПредставлениеПрофиля,
	|	ПраваРолейПрофилей.Роль.Имя КАК Роль,
	|	ПраваРолейПрофилей.Роль.Синоним КАК ПредставлениеРоли,
	|	ПраваРолейПрофилей.ВидРолей КАК ВидРолей,
	|	ПраваРолейПрофилей.Добавление КАК Добавление,
	|	ПраваРолейПрофилей.Изменение КАК Изменение,
	|	ПраваРолейПрофилей.ДобавлениеБезОграничения КАК ДобавлениеБезОграничения,
	|	ПраваРолейПрофилей.ИзменениеБезОграничения КАК ИзменениеБезОграничения,
	|	ПраваРолейПрофилей.ИнтерактивноеДобавление КАК ИнтерактивноеДобавление,
	|	ПраваРолейПрофилей.Редактирование КАК Редактирование,
	|	ПраваРолейПрофилей.ГруппаДоступа КАК ГруппаДоступа,
	|	ПраваРолейПрофилей.ГруппаДоступа.Наименование КАК ПредставлениеГруппыДоступа,
	|	ПраваРолейПрофилей.ВидДоступа КАК ВидДоступа,
	|	ПраваРолейПрофилей.ВидДоступа.Наименование КАК ПредставлениеВидаДоступа,
	|	ПраваРолейПрофилей.ДоступРазрешен КАК ДоступРазрешен,
	|	ПраваРолейПрофилей.ЗначениеДоступа КАК ЗначениеДоступа,
	|	ПРЕДСТАВЛЕНИЕ(ПраваРолейПрофилей.ЗначениеДоступа) КАК ПредставлениеЗначенияДоступа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПраваРолей.ОбъектМетаданных КАК Таблица,
	|		РолиПрофилей.Ссылка КАК Профиль,
	|		ВЫБОР
	|			КОГДА ПраваРолей.ДобавлениеБезОграничения
	|					И ПраваРолей.ИзменениеБезОграничения
	|				ТОГДА 0
	|			КОГДА НЕ ПраваРолей.ДобавлениеБезОграничения
	|					И ПраваРолей.ИзменениеБезОграничения
	|				ТОГДА 100
	|			КОГДА ПраваРолей.ДобавлениеБезОграничения
	|					И НЕ ПраваРолей.ИзменениеБезОграничения
	|				ТОГДА 200
	|			ИНАЧЕ 300
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПраваРолей.Добавление
	|					И ПраваРолей.Изменение
	|				ТОГДА 0
	|			КОГДА НЕ ПраваРолей.Добавление
	|					И ПраваРолей.Изменение
	|				ТОГДА 10
	|			КОГДА ПраваРолей.Добавление
	|					И НЕ ПраваРолей.Изменение
	|				ТОГДА 20
	|			ИНАЧЕ 30
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПраваРолей.ИнтерактивноеДобавление
	|					И ПраваРолей.Редактирование
	|				ТОГДА 0
	|			КОГДА НЕ ПраваРолей.ИнтерактивноеДобавление
	|					И ПраваРолей.Редактирование
	|				ТОГДА 1
	|			КОГДА ПраваРолей.ИнтерактивноеДобавление
	|					И НЕ ПраваРолей.Редактирование
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ КАК ВидРолей,
	|		ПраваРолей.Роль КАК Роль,
	|		ПраваРолей.Добавление КАК Добавление,
	|		ПраваРолей.Изменение КАК Изменение,
	|		ПраваРолей.ДобавлениеБезОграничения КАК ДобавлениеБезОграничения,
	|		ПраваРолей.ИзменениеБезОграничения КАК ИзменениеБезОграничения,
	|		ПраваРолей.ИнтерактивноеДобавление КАК ИнтерактивноеДобавление,
	|		ПраваРолей.Редактирование КАК Редактирование,
	|		НЕОПРЕДЕЛЕНО КАК ГруппаДоступа,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка) КАК ВидДоступа,
	|		НЕОПРЕДЕЛЕНО КАК ДоступРазрешен,
	|		НЕОПРЕДЕЛЕНО КАК ЗначениеДоступа
	|	ИЗ
	|		РегистрСведений.ПраваРолей КАК ПраваРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваРолей.Добавление
	|					ИЛИ ПраваРолей.Изменение)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваРолей.ОбъектМетаданных,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		РегистрСведений.ПраваРолей КАК ПраваРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваРолей.Добавление)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыИЗначенияДоступа КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваРолей.ОбъектМетаданных)
	|				И (ВидыОграниченийПрав.Право = ""Добавление"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПраваРолей.ОбъектМетаданных,
	|		ПрофилиПользователя.Профиль,
	|		1000,
	|		"""",
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ВидыИЗначенияДоступа.ГруппаДоступа,
	|		ЕСТЬNULL(ВидыОграниченийПрав.ВидДоступа, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)),
	|		ВидыИЗначенияДоступа.ДоступРазрешен,
	|		ВидыИЗначенияДоступа.ЗначениеДоступа
	|	ИЗ
	|		РегистрСведений.ПраваРолей КАК ПраваРолей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофилей
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрофилиПользователя КАК ПрофилиПользователя
	|				ПО РолиПрофилей.Ссылка = ПрофилиПользователя.Профиль
	|			ПО ПраваРолей.Роль = РолиПрофилей.Роль
	|				И (ПраваРолей.Изменение)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыИЗначенияДоступа КАК ВидыИЗначенияДоступа
	|			ПО (ПрофилиПользователя.Профиль = ВидыИЗначенияДоступа.Профиль)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыОграниченийПрав КАК ВидыОграниченийПрав
	|			ПО (ВидыОграниченийПрав.Таблица = ПраваРолей.ОбъектМетаданных)
	|				И (ВидыОграниченийПрав.Право = ""Изменение"")
	|				И (ВидыОграниченийПрав.ВидДоступа = ВидыИЗначенияДоступа.ВидДоступа)) КАК ПраваРолейПрофилей
	|ИТОГИ
	|	МАКСИМУМ(ПредставлениеВидаОбъектов),
	|	МАКСИМУМ(ПорядокВидаОбъектов),
	|	МАКСИМУМ(Таблица),
	|	МАКСИМУМ(ПредставлениеОбъекта),
	|	МАКСИМУМ(ПредставлениеПрофиля),
	|	МАКСИМУМ(ПредставлениеРоли),
	|	МАКСИМУМ(Добавление),
	|	МАКСИМУМ(Изменение),
	|	МАКСИМУМ(ДобавлениеБезОграничения),
	|	МАКСИМУМ(ИзменениеБезОграничения),
	|	МАКСИМУМ(ИнтерактивноеДобавление),
	|	МАКСИМУМ(Редактирование),
	|	МАКСИМУМ(ПредставлениеГруппыДоступа),
	|	МАКСИМУМ(ПредставлениеВидаДоступа),
	|	МАКСИМУМ(ДоступРазрешен)
	|ПО
	|	ВидОбъектов,
	|	Объект,
	|	Профиль,
	|	ВидРолей,
	|	Роль,
	|	ГруппаДоступа,
	|	ВидДоступа";
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Документ.НачатьАвтогруппировкуСтрок();
	
	Если ПодробныеСведенияОПравахДоступа Тогда
		// Вывод групп доступа.
		ОписанияГруппДоступа = РезультатыЗапроса[1].Выгрузить(
			ОбходРезультатаЗапроса.ПоГруппировкам).Строки;
		
		ОднаПерсональнаяГруппа
			= ОписанияГруппДоступа.Количество() = 1
			И ЗначениеЗаполнено(ОписанияГруппДоступа[0].Участник);
		
		Область = Макет.ПолучитьОбласть("ВсеГруппыДоступаГруппировка");
		Область.Параметры.Заполнить(Свойства);
		
		Если ОднаПерсональнаяГруппа Тогда
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Ограничения доступа пользователя'");
				
			ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Ограничения доступа внешнего пользователя'");
				
			ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Ограничения доступа группы пользователей'");
			Иначе
				ПредставлениеДоступа = НСтр("ru = 'Ограничения доступа группы внешних пользователей'");
			КонецЕсли;
		Иначе
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Группы доступа пользователя'");
				
			ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Группы доступа внешнего пользователя'");
				
			ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ПредставлениеДоступа = НСтр("ru = 'Группы доступа группы пользователей'");
			Иначе
				ПредставлениеДоступа = НСтр("ru = 'Группы доступа группы внешних пользователей'");
			КонецЕсли;
		КонецЕсли;
		
		Область.Параметры.ПредставлениеДоступа = ПредставлениеДоступа;
		
		Документ.Вывести(Область, 1);
		Документ.Вывести(ОбластьОтступ, 2);
		
		Для каждого ОписаниеГруппыДоступа Из ОписанияГруппДоступа Цикл
			Если НЕ ОднаПерсональнаяГруппа Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаГруппировка");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 2);
			КонецЕсли;
			// Вывод случаев участия в группе.
			Если ОписаниеГруппыДоступа.Строки.Количество() = 1
			   И ОписаниеГруппыДоступа.Строки[0].Участник = Ссылка Тогда
				// Пользователь входит в группу доступа только явно
				// поэтому вывод не требуется.
			Иначе
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПользовательВходитВГруппу");
				Документ.Вывести(Область, 3);
				Если ОписаниеГруппыДоступа.Строки.Найти(Ссылка, "Участник") <> Неопределено Тогда
					Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПользовательВходитВГруппуЯвно");
					Документ.Вывести(Область, 3);
				КонецЕсли;
				Отбор = Новый Структура("ГрупповоеУчастие", Истина);
				ОписанияГруппПользователей = ОписаниеГруппыДоступа.Строки.НайтиСтроки(Отбор);
				Если ОписанияГруппПользователей.Количество() > 0 Тогда
					
					Область = Макет.ПолучитьОбласть(
						"ГруппаДоступаДеталиПользовательВходитВГруппуКакУчастникГруппПользователей");
					
					Документ.Вывести(Область, 3);
					Для каждого ОписаниеГруппыПользователя ИЗ ОписанияГруппПользователей Цикл
						
						Область = Макет.ПолучитьОбласть(
							"ГруппаДоступаДеталиПользовательВходитВГруппаКакПредставлениеУчастника");
						
						Область.Параметры.Заполнить(ОписаниеГруппыПользователя);
						Документ.Вывести(Область, 3);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ОднаПерсональнаяГруппа Тогда
				// Вывод профиля.
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиПрофиль");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			// Вывод ответственного за состав участников.
			Если НЕ ОднаПерсональнаяГруппа И ЗначениеЗаполнено(ОписаниеГруппыДоступа.Ответственный) Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиОтветственный");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			// Вывод описания.
			Если НЕ ОднаПерсональнаяГруппа И ЗначениеЗаполнено(ОписаниеГруппыДоступа.Описание) Тогда
				Область = Макет.ПолучитьОбласть("ГруппаДоступаДеталиОписание");
				Область.Параметры.Заполнить(ОписаниеГруппыДоступа);
				Документ.Вывести(Область, 3);
			КонецЕсли;
			
			Документ.Вывести(ОбластьОтступ, 3);
			Документ.Вывести(ОбластьОтступ, 3);
		КонецЦикла;
		
		// Вывод ролей по профилям.
		РолиПоПрофилям = РезультатыЗапроса[3].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		РолиПоПрофилям.Строки.Сортировать("ПредставлениеПрофиля Возр, ПредставлениеРоли Возр");
		
		Если РолиПоПрофилям.Строки.Количество() > 0 Тогда
			Область = Макет.ПолучитьОбласть("РолиПоПрофилямГруппировка");
			Область.Параметры.Заполнить(Свойства);
			Документ.Вывести(Область, 1);
			Документ.Вывести(ОбластьОтступ, 2);
			
			Для каждого ОписаниеПрофиля Из РолиПоПрофилям.Строки Цикл
				Область = Макет.ПолучитьОбласть("РолиПоПрофилямПрофильПредставление");
				Область.Параметры.Заполнить(ОписаниеПрофиля);
				Документ.Вывести(Область, 2);
				Для каждого ОписаниеРоли Из ОписаниеПрофиля.Строки Цикл
					Область = Макет.ПолучитьОбласть("РолиПоПрофилямРольПредставление");
					Область.Параметры.Заполнить(ОписаниеРоли);
					Документ.Вывести(Область, 3);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Документ.Вывести(ОбластьОтступ, 2);
		Документ.Вывести(ОбластьОтступ, 2);
	КонецЕсли;
	
	// Вывод объектов для просмотра.
	ПраваОбъектов = РезультатыЗапроса[7].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПраваОбъектов.Строки.Сортировать(
		"ПорядокВидаОбъектов Возр,
		|ПредставлениеОбъекта Возр,
		|ПредставлениеПрофиля Возр,
		|ВидРолей Возр,
		|ПредставлениеРоли Возр,
		|ПредставлениеГруппыДоступа Возр,
		|ПредставлениеВидаДоступа Возр,
		|ПредставлениеЗначенияДоступа Возр",
		Истина);
	
	Область = Макет.ПолучитьОбласть("ПраваОбъектовГруппировка");
	Область.Параметры.ПредставлениеГруппировкиПравОбъектов = НСтр("ru = 'Просмотр объектов'");
	Документ.Вывести(Область, 1);
	Область = Макет.ПолучитьОбласть("ПросмотрОбъектовЛегенда");
	Документ.Вывести(Область, 2);
	
	Для каждого ОписаниеВидаОбъектов Из ПраваОбъектов.Строки Цикл
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовок");
		Если УпрощенныйИнтерфейс Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Профили'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Группы доступа'");
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 2);
		
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовокДоп");
		Если ПодробныеСведенияОПравахДоступа Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = '(профиль, роли)'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = "";
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 3);
		
		Для каждого ОписаниеОбъекта Из ОписаниеВидаОбъектов.Строки Цикл
			НачальнаяСтрокаОбластиОбъекта = Неопределено;
			КонечнаяСтрокаОбластиОбъекта  = Неопределено;
			Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
			
			Область.Параметры.ОткрытьФормуСписка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть форму списка: %1'"), ОписаниеОбъекта.Таблица);
			
			Если ОписаниеОбъекта.ЧтениеБезОграничения Тогда
				Если ОписаниеОбъекта.Просмотр Тогда
					УточнениеПредставленияОбъекта = НСтр("ru = '(просмотр, не ограничен)'");
				Иначе
					УточнениеПредставленияОбъекта = НСтр("ru = '(просмотр*, не ограничен)'");
				КонецЕсли;
			Иначе
				Если ОписаниеОбъекта.Просмотр Тогда
					УточнениеПредставленияОбъекта = НСтр("ru = '(просмотр, ограничен)'");
				Иначе
					УточнениеПредставленияОбъекта = НСтр("ru = '(просмотр*, ограничен)'");
				КонецЕсли;
			КонецЕсли;
			
			Область.Параметры.ПредставлениеОбъекта =
				ОписаниеОбъекта.ПредставлениеОбъекта + Символы.ПС + УточнениеПредставленияОбъекта;
				
			Для каждого ОписаниеПрофиля Из ОписаниеОбъекта.Строки Цикл
				ПредставлениеРолейПрофиля = "";
				КоличествоРолей = 0;
				ВсеРолиСОграничением = Истина;
				Для каждого ОписаниеВидаРолей Из ОписаниеПрофиля.Строки Цикл
					Если ОписаниеВидаРолей.ВидРолей < 1000 Тогда
						Если ПодробныеСведенияОПравахДоступа Тогда
							// Описание роли с/без ограничений.
							Для каждого ОписаниеРоли Из ОписаниеВидаРолей.Строки Цикл
								
								Если ОписаниеВидаРолей.Строки.Количество() > 1
								   И ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли)
								         < ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля
										= ПредставлениеРолейПрофиля
										+ ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								Если ОписаниеВидаРолей.ЧтениеБезОграничения Тогда
									ВсеРолиСОграничением = Ложь;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли) =
								         ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля
										= ПредставлениеРолейПрофиля
										+ ОписаниеРоли.ПредставлениеРоли
										+ ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								ПредставлениеРолейПрофиля = ПредставлениеРолейПрофиля + Символы.ПС;
							КонецЦикла;
						КонецЕсли;
					ИначеЕсли ОписаниеВидаРолей.Строки[0].Строки.Количество() > 0 Тогда
						// Описание ограничений доступа для ролей с ограничениями.
						Для каждого ОписаниеГруппыДоступа Из ОписаниеВидаРолей.Строки[0].Строки Цикл
							Индекс = ОписаниеГруппыДоступа.Строки.Количество()-1;
							Пока Индекс >= 0 Цикл
								Если НЕ ЗначениеЗаполнено(ОписаниеГруппыДоступа.Строки[Индекс].ВидДоступа) Тогда
									ОписаниеГруппыДоступа.Строки.Удалить(Индекс);
								КонецЕсли;
								Индекс = Индекс-1;
							КонецЦикла;
							НачальнаяСтрокаОбластиГруппыДоступа = Неопределено;
							Если Область = Неопределено Тогда
								Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
							КонецЕсли;
							Если УпрощенныйИнтерфейс Тогда
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеПрофиля.ГруппаДоступа;
								
								Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
									ОписаниеПрофиля.ПредставлениеГруппыДоступа;
							Иначе
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеГруппыДоступа.ГруппаДоступа;
								Если ПодробныеСведенияОПравахДоступа Тогда
									ПредставлениеРолейПрофиля = СокрЛП(ПредставлениеРолейПрофиля);
									
									Если ЗначениеЗаполнено(ПредставлениеРолейПрофиля)
									   И Прав(ПредставлениеРолейПрофиля, 1) = "," Тогда
										
										ПредставлениеРолейПрофиля = Лев(
											ПредставлениеРолейПрофиля,
											СтрДлина(ПредставлениеРолейПрофиля) - 1);
									КонецЕсли;
									
									Если КоличествоРолей > 1 Тогда
										УточнениеПредставленияГруппыДоступа =
											НСтр("ru = '(профиль: %1, роли:
											           |%2)'")
									Иначе
										УточнениеПредставленияГруппыДоступа =
											НСтр("ru = '(профиль: %1, роль:
											           |%2)'")
									КонецЕсли;
									
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа
										+ Символы.ПС
										+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											УточнениеПредставленияГруппыДоступа,
											ОписаниеПрофиля.ПредставлениеПрофиля,
											СокрЛП(ПредставлениеРолейПрофиля));
								Иначе
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа;
								КонецЕсли;
							КонецЕсли;
							Если ВсеРолиСОграничением Тогда
								Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
									Для каждого ОписаниеВидаДоступа Из ОписаниеГруппыДоступа.Строки Цикл
										Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
										Пока Индекс >= 0 Цикл
											Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
												ОписаниеВидаДоступа.Строки.Удалить(Индекс);
											КонецЕсли;
											Индекс = Индекс-1;
										КонецЦикла;
										// Получение новой области, если вид доступа не первый
										Если Область = Неопределено Тогда
											Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
										КонецЕсли;
										
										Область.Параметры.ВидДоступа = ОписаниеВидаДоступа.ВидДоступа;
										
										Область.Параметры.ПредставлениеВидаДоступа =
											СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонПредставленияВидаДоступа(ОписаниеВидаДоступа),
												ОписаниеВидаДоступа.ПредставлениеВидаДоступа);
										
										ВывестиОбласть(
											Документ,
											Область,
											3,
											НачальнаяСтрокаОбластиОбъекта,
											КонечнаяСтрокаОбластиОбъекта,
											НачальнаяСтрокаОбластиГруппыДоступа);
										
										Для каждого ОписаниеЗначенияДоступа Из ОписаниеВидаДоступа.Строки Цикл
											Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрокаЗначенияДоступа");
											
											Область.Параметры.ПредставлениеЗначенияДоступа =
												ОписаниеЗначенияДоступа.ПредставлениеЗначенияДоступа;
										
											Область.Параметры.ЗначениеДоступа =
												ОписаниеЗначенияДоступа.ЗначениеДоступа;
											
											ВывестиОбласть(
												Документ,
												Область,
												3,
												НачальнаяСтрокаОбластиОбъекта,
												КонечнаяСтрокаОбластиОбъекта,
												НачальнаяСтрокаОбластиГруппыДоступа);
										КонецЦикла;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
							Если Область <> Неопределено Тогда
								ВывестиОбласть(
									Документ,
									Область,
									3,
									НачальнаяСтрокаОбластиОбъекта,
									КонечнаяСтрокаОбластиОбъекта,
									НачальнаяСтрокаОбластиГруппыДоступа);
							КонецЕсли;
							// Установка границы видов доступа текущей группы доступа.
							УстановитьГраницыВидовИЗначенийДоступа(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта);
							// Объединение ячеек группы доступа и установка границы
							ОбъединитьЯчейкиУстановитьГраницы(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта,
								3);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			// Объединение ячеек объекта и установка границы
			ОбъединитьЯчейкиУстановитьГраницы(
				Документ,
				НачальнаяСтрокаОбластиОбъекта,
				КонечнаяСтрокаОбластиОбъекта,
				2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
	КонецЦикла;
	Документ.Вывести(ОбластьОтступ, 2);
	Документ.Вывести(ОбластьОтступ, 2);
	
	// Вывод объектов для редактирования.
	ПраваОбъектов = РезультатыЗапроса[8].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПраваОбъектов.Строки.Сортировать(
		"ПорядокВидаОбъектов Возр,
		|ПредставлениеОбъекта Возр,
		|ПредставлениеПрофиля Возр,
		|ВидРолей Возр,
		|ПредставлениеРоли Возр,
		|ПредставлениеГруппыДоступа Возр,
		|ПредставлениеВидаДоступа Возр,
		|ПредставлениеЗначенияДоступа Возр",
		Истина);
	
	Область = Макет.ПолучитьОбласть("ПраваОбъектовГруппировка");
	Область.Параметры.ПредставлениеГруппировкиПравОбъектов = НСтр("ru = 'Редактирование объектов'");
	Документ.Вывести(Область, 1);
	Область = Макет.ПолучитьОбласть("РедактированиеОбъектовЛегенда");
	Документ.Вывести(Область, 2);
	
	Для каждого ОписаниеВидаОбъектов Из ПраваОбъектов.Строки Цикл
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовок");
		Если УпрощенныйИнтерфейс Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Профили'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = 'Группы доступа'");
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 2);
		
		Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаЗаголовокДоп");
		Если ПодробныеСведенияОПравахДоступа Тогда
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = НСтр("ru = '(профиль, роли)'");
		Иначе
			Область.Параметры.ПредставлениеПрофилиИлиГруппыДоступа = "";
		КонецЕсли;
		Область.Параметры.Заполнить(ОписаниеВидаОбъектов);
		Документ.Вывести(Область, 3);

		ДобавлениеИспользуется =
			ВРег(Лев(ОписаниеВидаОбъектов.ВидОбъектов, СтрДлина("Регистр"))) <> ВРег("Регистр");
		
		Для каждого ОписаниеОбъекта Из ОписаниеВидаОбъектов.Строки Цикл
			НачальнаяСтрокаОбластиОбъекта = Неопределено;
			КонечнаяСтрокаОбластиОбъекта  = Неопределено;
			Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
			
			Область.Параметры.ОткрытьФормуСписка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Открыть форму списка: %1'"), ОписаниеОбъекта.Таблица);
			
			Если ДобавлениеИспользуется Тогда
				Если ОписаниеОбъекта.Добавление И ОписаниеОбъекта.Изменение Тогда
					Если ОписаниеОбъекта.ДобавлениеБезОграничения И ОписаниеОбъекта.ИзменениеБезОграничения Тогда
						Если ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, не ограничено
							                                           |изменение, не ограничено)'");
						ИначеЕсли НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, не ограничено
							                                           |изменение, не ограничено)'");
						ИначеЕсли ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, не ограничено
							                                           |изменение*, не ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, не ограничено
							                                           |изменение*, не ограничено)'");
						КонецЕсли;
					ИначеЕсли НЕ ОписаниеОбъекта.ДобавлениеБезОграничения И ОписаниеОбъекта.ИзменениеБезОграничения Тогда
						Если ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, ограничено
							                                           |изменение, не ограничено)'");
						ИначеЕсли НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, ограничено
							                                           |изменение, не ограничено)'");
						ИначеЕсли ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, ограничено
							                                           |изменение*, не ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, ограничено
							                                           |изменение*, не ограничено)'");
						КонецЕсли;
					ИначеЕсли ОписаниеОбъекта.ДобавлениеБезОграничения И НЕ ОписаниеОбъекта.ИзменениеБезОграничения Тогда
						Если ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, не ограничено
							                                           |изменение, ограничено)'");
						ИначеЕсли НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, не ограничено
							                                           |изменение, ограничено)'");
						ИначеЕсли ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, не ограничено
							                                           |изменение*, ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, не ограничено
							                                           |изменение*, ограничено)'");
						КонецЕсли;
					Иначе // НЕ ОписаниеОбъекта.ДобавлениеБезОграничения И НЕ ОписаниеОбъекта.ИзменениеБезОграничения
						Если ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, ограничено
							                                           |изменение, ограничено)'");
						ИначеЕсли НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, ограничено
							                                           |изменение, ограничено)'");
						ИначеЕсли ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление, ограничено
							                                           |изменение*, ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.ИнтерактивноеДобавление И НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление*, ограничено
							                                           |изменение*, ограничено)'");
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли НЕ ОписаниеОбъекта.Добавление И ОписаниеОбъекта.Изменение Тогда
					
					Если ОписаниеОбъекта.ИзменениеБезОграничения Тогда
						Если ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление не доступно
							                                           |изменение, не ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление не доступно
							                                           |изменение*, не ограничено)'");
						КонецЕсли;
					Иначе // НЕ ОписаниеОбъекта.ИзменениеБезОграничения
						Если ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление не доступно
							                                           |изменение, ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(добавление не доступно
							                                           |изменение*, ограничено)'");
						КонецЕсли;
					КонецЕсли;
					
				Иначе // НЕ ОписаниеОбъекта.Добавление И НЕ ОписаниеОбъекта.Изменение
					УточнениеПредставленияОбъекта = НСтр("ru = '(добавление не доступно
					                                           |изменение не доступно)'");
				КонецЕсли;
			Иначе
				Если ОписаниеОбъекта.Изменение Тогда
					Если ОписаниеОбъекта.ИзменениеБезОграничения Тогда
						Если ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(изменение, не ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(изменение*, не ограничено)'");
						КонецЕсли;
					Иначе
						Если ОписаниеОбъекта.Редактирование Тогда
							УточнениеПредставленияОбъекта = НСтр("ru = '(изменение, ограничено)'");
						Иначе // НЕ ОписаниеОбъекта.Редактирование
							УточнениеПредставленияОбъекта = НСтр("ru = '(изменение*, ограничено)'");
						КонецЕсли;
					КонецЕсли;
				Иначе // НЕ ОписаниеОбъекта.Изменение
					УточнениеПредставленияОбъекта = НСтр("ru = '(изменение не доступно)'");
				КонецЕсли;
			КонецЕсли;
			
			Область.Параметры.ПредставлениеОбъекта =
				ОписаниеОбъекта.ПредставлениеОбъекта + Символы.ПС + УточнениеПредставленияОбъекта;
				
			Для каждого ОписаниеПрофиля Из ОписаниеОбъекта.Строки Цикл
				ПредставлениеРолейПрофиля = "";
				КоличествоРолей = 0;
				ВсеРолиСОграничением = Истина;
				Для каждого ОписаниеВидаРолей Из ОписаниеПрофиля.Строки Цикл
					Если ОписаниеВидаРолей.ВидРолей < 1000 Тогда
						// Описание роли с/без ограничений.
						Если ПодробныеСведенияОПравахДоступа Тогда
							Для каждого ОписаниеРоли Из ОписаниеВидаРолей.Строки Цикл
								
								Если ОписаниеВидаРолей.Строки.Количество() > 1
								   И ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли)
								         < ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля =
										ПредставлениеРолейПрофиля + ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.ДобавлениеБезОграничения
								   И ОписаниеВидаРолей.ИзменениеБезОграничения Тогда
									
									ВсеРолиСОграничением = Ложь;
								КонецЕсли;
								
								Если ОписаниеВидаРолей.Строки.Индекс(ОписаниеРоли) =
								         ОписаниеВидаРолей.Строки.Количество()-1 Тогда
									
									ПредставлениеРолейПрофиля =
										ПредставлениеРолейПрофиля + ОписаниеРоли.ПредставлениеРоли + ",";
									
									КоличествоРолей = КоличествоРолей + 1;
								КонецЕсли;
								ПредставлениеРолейПрофиля = ПредставлениеРолейПрофиля + Символы.ПС;
							КонецЦикла;
						КонецЕсли;
					ИначеЕсли ОписаниеВидаРолей.Строки[0].Строки.Количество() > 0 Тогда
						// Описание ограничений доступа для ролей с ограничениями.
						Для каждого ОписаниеГруппыДоступа Из ОписаниеВидаРолей.Строки[0].Строки Цикл
							Индекс = ОписаниеГруппыДоступа.Строки.Количество()-1;
							Пока Индекс >= 0 Цикл
								Если НЕ ЗначениеЗаполнено(ОписаниеГруппыДоступа.Строки[Индекс].ВидДоступа) Тогда
									ОписаниеГруппыДоступа.Строки.Удалить(Индекс);
								КонецЕсли;
								Индекс = Индекс-1;
							КонецЦикла;
							НачальнаяСтрокаОбластиГруппыДоступа = Неопределено;
							Если Область = Неопределено Тогда
								Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
							КонецЕсли;
							Если УпрощенныйИнтерфейс Тогда
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеПрофиля.ГруппаДоступа;
								Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа = ОписаниеПрофиля.ПредставлениеГруппыДоступа;
							Иначе
								Область.Параметры.ПрофильИлиГруппаДоступа = ОписаниеГруппыДоступа.ГруппаДоступа;
								Если ПодробныеСведенияОПравахДоступа Тогда
									ПредставлениеРолейПрофиля = СокрЛП(ПредставлениеРолейПрофиля);
									
									Если ЗначениеЗаполнено(ПредставлениеРолейПрофиля)
									   И Прав(ПредставлениеРолейПрофиля, 1) = "," Тогда
										
										ПредставлениеРолейПрофиля = Лев(
											ПредставлениеРолейПрофиля,
											СтрДлина(ПредставлениеРолейПрофиля)-1);
									КонецЕсли;
									Если КоличествоРолей > 1 Тогда
										УточнениеПредставленияГруппыДоступа =
											НСтр("ru = '(профиль: %1, роли:
											           |%2)'")
									Иначе
										УточнениеПредставленияГруппыДоступа =
											НСтр("ru = '(профиль: %1, роль:
											           |%2)'")
									КонецЕсли;
									
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа
										+ Символы.ПС
										+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											УточнениеПредставленияГруппыДоступа,
											ОписаниеПрофиля.ПредставлениеПрофиля,
											СокрЛП(ПредставлениеРолейПрофиля));
								Иначе
									Область.Параметры.ПредставлениеПрофиляИлиГруппыДоступа =
										ОписаниеГруппыДоступа.ПредставлениеГруппыДоступа;
								КонецЕсли;
							КонецЕсли;
							Если ВсеРолиСОграничением Тогда
								Если ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
									Для каждого ОписаниеВидаДоступа Из ОписаниеГруппыДоступа.Строки Цикл
										Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
										Пока Индекс >= 0 Цикл
											Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
												ОписаниеВидаДоступа.Строки.Удалить(Индекс);
											КонецЕсли;
											Индекс = Индекс-1;
										КонецЦикла;
										Индекс = ОписаниеВидаДоступа.Строки.Количество()-1;
										Пока Индекс >= 0 Цикл
											Если НЕ ЗначениеЗаполнено(ОписаниеВидаДоступа.Строки[Индекс].ЗначениеДоступа) Тогда
												ОписаниеВидаДоступа.Строки.Удалить(Индекс);
											КонецЕсли;
											Индекс = Индекс-1;
										КонецЦикла;
										// Получение новой области, если вид доступа не первый
										Если Область = Неопределено Тогда
											Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрока");
										КонецЕсли;
									
										Область.Параметры.ВидДоступа = ОписаниеВидаДоступа.ВидДоступа;
										
										Область.Параметры.ПредставлениеВидаДоступа =
											СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонПредставленияВидаДоступа(ОписаниеВидаДоступа),
												ОписаниеВидаДоступа.ПредставлениеВидаДоступа);
										
										ВывестиОбласть(
											Документ,
											Область,
											3,
											НачальнаяСтрокаОбластиОбъекта,
											КонечнаяСтрокаОбластиОбъекта,
											НачальнаяСтрокаОбластиГруппыДоступа);
										
										Для каждого ОписаниеЗначенияДоступа Из ОписаниеВидаДоступа.Строки Цикл
											Область = Макет.ПолучитьОбласть("ПраваОбъектовТаблицаСтрокаЗначенияДоступа");
											
											Область.Параметры.ПредставлениеЗначенияДоступа =
												ОписаниеЗначенияДоступа.ПредставлениеЗначенияДоступа;
											
											Область.Параметры.ЗначениеДоступа =
												ОписаниеЗначенияДоступа.ЗначениеДоступа;
												
											ВывестиОбласть(
												Документ,
												Область,
												3,
												НачальнаяСтрокаОбластиОбъекта,
												КонечнаяСтрокаОбластиОбъекта,
												НачальнаяСтрокаОбластиГруппыДоступа);
										КонецЦикла;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
							Если Область <> Неопределено Тогда
								ВывестиОбласть(
									Документ,
									Область,
									3,
									НачальнаяСтрокаОбластиОбъекта,
									КонечнаяСтрокаОбластиОбъекта,
									НачальнаяСтрокаОбластиГруппыДоступа);
							КонецЕсли;
							// Установка границы видов доступа текущей группы доступа.
							УстановитьГраницыВидовИЗначенийДоступа(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта);
							
							// Объединение ячеек группы доступа и установка границы.
							ОбъединитьЯчейкиУстановитьГраницы(
								Документ,
								НачальнаяСтрокаОбластиГруппыДоступа,
								КонечнаяСтрокаОбластиОбъекта,
								3);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			// Объединение ячеек объекта и установка границы.
			ОбъединитьЯчейкиУстановитьГраницы(
				Документ,
				НачальнаяСтрокаОбластиОбъекта,
				КонечнаяСтрокаОбластиОбъекта,
				2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
		Документ.Вывести(ОбластьОтступ, 3);
	КонецЦикла;
	Документ.Вывести(ОбластьОтступ, 2);
	Документ.Вывести(ОбластьОтступ, 2);
	
	// Вывод прав на объекты
	ПраваПоЗначениям = РезультатыЗапроса[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПраваПоЗначениям.Колонки.Добавить("ТипЗначенияПолноеИмя");
	ПраваПоЗначениям.Колонки.Добавить("ПредставлениеВидаОбъектов");
	ПраваПоЗначениям.Колонки.Добавить("ПолноеНаименование");
	
	Для каждого ОписаниеТипаЗначений Из ПраваПоЗначениям.Строки Цикл
		МетаданныеТипа = Метаданные.НайтиПоТипу(ОписаниеТипаЗначений.ТипЗначений);
		ОписаниеТипаЗначений.ТипЗначенияПолноеИмя      = МетаданныеТипа.ПолноеИмя();
		ОписаниеТипаЗначений.ПредставлениеВидаОбъектов = МетаданныеТипа.Представление();
	КонецЦикла;
	ПраваПоЗначениям.Строки.Сортировать("ПредставлениеВидаОбъектов Возр");
	
	ВозможныеПрава = УправлениеДоступомСлужебныйПовтИсп.Параметры().ВозможныеПраваПоЗначениямДоступа;
	
	Для каждого ОписаниеТипаЗначений Из ПраваПоЗначениям.Строки Цикл
		
		ПраваПоЗначению = ВозможныеПрава.ПоПолнымИменам.Получить(ОписаниеТипаЗначений.ТипЗначенияПолноеИмя);
		
		Для каждого ОписаниеОбъекта Из ОписаниеТипаЗначений.Строки Цикл
			ОписаниеОбъекта.ПолноеНаименование = ОписаниеОбъекта.ЗначениеДоступа.ПолноеНаименование();
		КонецЦикла;
		ОписаниеТипаЗначений.Строки.Сортировать("ПолноеНаименование Возр");
		
		Область = Макет.ПолучитьОбласть("ПраваПоЗначениямГруппировка");
		Область.Параметры.Заполнить(ОписаниеТипаЗначений);
		Документ.Вывести(Область, 1);
		
		// Вывод легенды
		Область = Макет.ПолучитьОбласть("ПраваПоЗначениямЛегендаШапка");
		Документ.Вывести(Область, 2);
		Для каждого КлючИЗначение ИЗ ПраваПоЗначению Цикл
			ОписаниеПрава = КлючИЗначение.Значение;
			Область = Макет.ПолучитьОбласть("ПраваПоЗначениямЛегендаСтрока");
			Область.Параметры.Заполнить(ОписаниеПрава);
			Если НЕ ЗначениеЗаполнено(ОписаниеПрава.Заголовок) Тогда
				Область.Параметры.Заголовок = ОписаниеПрава.Сокращение;
			КонецЕсли;
			Документ.Вывести(Область, 2);
		КонецЦикла;
		Документ.Вывести(ОбластьОтступ, 2);
		
		// Подготовка макета строки
		МакетШапки  = Новый ТабличныйДокумент;
		МакетСтроки = Новый ТабличныйДокумент;
		Для Индекс = 1 По ПраваПоЗначению.Количество() + ?(ВыводПравГруппы, 2, 3) Цикл
			НоваяЯчейкаШапки  = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиЯчейкаШапки");
			МакетШапки.Присоединить(НоваяЯчейкаШапки);
			НоваяЯчейкаСтроки = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиЯчейкаСтроки");
			МакетСтроки.Присоединить(НоваяЯчейкаСтроки);
		КонецЦикла;
		
		// Вывод шапки таблицы
		МакетШапки.Область("R1C1").Текст = НСтр("ru = 'Расп'");
		МакетШапки.Область("R1C1").ШиринаКолонки = 6;
		МакетШапки.Область("R1C2").Текст = НСтр("ru = 'Тип прав'");
		МакетШапки.Область("R1C2").ШиринаКолонки = 12;
		ТекущийНомерОбласти = 3;
		
		Для каждого КлючИЗначение ИЗ ПраваПоЗначению Цикл
			ОписаниеПрава = КлючИЗначение.Значение;
			
			НомерЯчейки = "R1C" + Формат(ТекущийНомерОбласти, "ЧГ=");
			Если ЗначениеЗаполнено(ОписаниеПрава.Заголовок) Тогда
				МакетШапки.Область(НомерЯчейки).Текст = ОписаниеПрава.Заголовок;
			Иначе
				МакетШапки.Область(НомерЯчейки).Текст = ОписаниеПрава.Сокращение;
			КонецЕсли;
			МакетШапки.Область(НомерЯчейки).ШиринаКолонки = 6;
			ТекущийНомерОбласти = ТекущийНомерОбласти + 1;
			//
			МакетСтроки.Область(НомерЯчейки).ШиринаКолонки = 6;
		КонецЦикла;
		Если НЕ ВыводПравГруппы Тогда
			НомерЯчейки = "R1C" + Формат(ТекущийНомерОбласти, "ЧГ=");
			МакетШапки.Область(НомерЯчейки).Текст = НСтр("ru = 'Настройка прав от'");
			МакетШапки.Область(НомерЯчейки).ШиринаКолонки = 40;
		КонецЕсли;
		Документ.Вывести(МакетШапки, 2);
		
		// Вывод строк таблицы
		Для каждого ОписаниеОбъекта Из ОписаниеТипаЗначений.Строки Цикл
			Область = Макет.ПолучитьОбласть("ПраваПоЗначениямДеталиОбъект");
			Область.Параметры.Заполнить(ОписаниеОбъекта);
			Документ.Вывести(Область, 2);
			
			МакетСтроки.Область("R1C1").Текст = ?(
				ОписаниеОбъекта.РаспространяетсяВИерархии, "+", "");
			
			МакетСтроки.Область("R1C1").ШиринаКолонки = 6;
			
			МакетСтроки.Область("R1C2").Текст = ?(
				ОписаниеОбъекта.Запрещено,
				НСтр("ru = 'Запрещено'"),
				НСтр("ru = 'Разрешено'"));
			
			МакетСтроки.Область("R1C2").ШиринаКолонки = 12;
			
			Для НомерОбластиПрава = 3 По ПраваПоЗначению.Количество() + 2 Цикл
				НомерЯчейки = "R1C" + Формат(НомерОбластиПрава, "ЧГ=");
				МакетСтроки.Область(НомерЯчейки).Текст = "";
			КонецЦикла;
			Для каждого ОписаниеПрава ИЗ ОписаниеОбъекта.Строки Цикл
				ПравоПоЗначению = ПраваПоЗначению.Получить(ОписаниеПрава.Право);
				Если ПравоПоЗначению <> Неопределено Тогда
					НомерОбластиПрава = ПравоПоЗначению.ИндексПрава + 3;
					НомерЯчейки = "R1C" + Формат(НомерОбластиПрава, "ЧГ=");
					МакетСтроки.Область(НомерЯчейки).Текст = "+";
				КонецЕсли;
			КонецЦикла;
			НомерЯчейки = "R1C" + Формат(ПраваПоЗначению.Количество() + 3, "ЧГ=");
			Если НЕ ВыводПравГруппы Тогда
				Если ОписаниеОбъекта.ГрупповоеУчастие Тогда
					МакетСтроки.Область(НомерЯчейки).Текст =
						ОписаниеПрава.ПользовательНаименование + " (" + НСтр("ru = 'группа'") + ")";
				КонецЕсли;
			КонецЕсли;
			МакетСтроки.Область(НомерЯчейки).ШиринаКолонки = 40;
			Документ.Вывести(МакетСтроки, 2);
		КонецЦикла;
	КонецЦикла;
	
	Документ.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

&НаСервере
Функция ШаблонПредставленияВидаДоступа(ОписаниеВидаДоступа)
	
	Если ОписаниеВидаДоступа.Строки.Количество() = 0 Тогда
		Если ОписаниеВидаДоступа.ДоступРазрешен Тогда
			Если ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (без запрещенных, текущий пользователь всегда разрешен)'");
				
			ИначеЕсли ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (без запрещенных, текущий внешний пользователь всегда разрешен)'");
			Иначе
				ШаблонПредставленияВидаДоступа = НСтр("ru = '%1 (без запрещенных)'");
			КонецЕсли;
		Иначе
			Если ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (без разрешенных, текущий пользователь всегда разрешен)'");
				
			ИначеЕсли ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (без разрешенных, текущий внешний пользователь всегда разрешен)'");
			Иначе
				ШаблонПредставленияВидаДоступа = НСтр("ru = '%1 (без разрешенных)'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ОписаниеВидаДоступа.ДоступРазрешен Тогда
			Если ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (запрещенные, текущий пользователь всегда разрешен):'");
				
			ИначеЕсли ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (запрещенные, текущий внешний пользователь всегда разрешен):'");
			Иначе
				ШаблонПредставленияВидаДоступа = НСтр("ru = '%1 (запрещенные):'");
			КонецЕсли;
		Иначе
			Если ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.Пользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (разрешенные, текущий пользователь всегда разрешен):'");
				
			ИначеЕсли ОписаниеВидаДоступа.ВидДоступа = ПланыВидовХарактеристик.ВидыДоступа.ВнешниеПользователи Тогда
				ШаблонПредставленияВидаДоступа =
					НСтр("ru = '%1 (разрешенные, текущий внешний пользователь всегда разрешен):'");
			Иначе
				ШаблонПредставленияВидаДоступа = НСтр("ru = '%1 (разрешенные):'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ШаблонПредставленияВидаДоступа;
	
КонецФункции

&НаСервере
Процедура ВывестиОбласть(Знач Документ,
                         Область,
                         Уровень,
                         НачальнаяСтрокаОбластиОбъекта,
                         КонечнаяСтрокаОбластиОбъекта,
                         НачальнаяСтрокаОбластиГруппыДоступа)
	
	Если НачальнаяСтрокаОбластиОбъекта = Неопределено Тогда
		НачальнаяСтрокаОбластиОбъекта = Документ.Вывести(Область, Уровень);
		КонечнаяСтрокаОбластиОбъекта        = НачальнаяСтрокаОбластиОбъекта;
	Иначе
		КонечнаяСтрокаОбластиОбъекта = Документ.Вывести(Область);
	КонецЕсли;
	
	Если НачальнаяСтрокаОбластиГруппыДоступа = Неопределено Тогда
		НачальнаяСтрокаОбластиГруппыДоступа = КонечнаяСтрокаОбластиОбъекта;
	КонецЕсли;
	
	Область = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ОбъединитьЯчейкиУстановитьГраницы(Знач Документ,
                                            Знач НачальнаяСтрокаОбласти,
                                            Знач КонечнаяСтрокаОбласти,
                                            Знач НомерКолонки)
	
	Область = Документ.Область(
		НачальнаяСтрокаОбласти.Верх,
		НомерКолонки,
		КонечнаяСтрокаОбласти.Низ,
		НомерКолонки);
	
	Область.Объединить();
	
	ЛинияГраницы = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная);
	
	Область.ГраницаСверху = ЛинияГраницы;
	Область.ГраницаСнизу  = ЛинияГраницы;
	
КонецПроцедуры
	
&НаСервере
Процедура УстановитьГраницыВидовИЗначенийДоступа(Знач Документ,
                                                 Знач НачальнаяСтрокаОбластиГруппыДоступа,
                                                 Знач КонечнаяСтрокаОбластиОбъекта)
	
	ЛинияГраницы = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная);
	
	Область = Документ.Область(
		НачальнаяСтрокаОбластиГруппыДоступа.Верх,
		4,
		НачальнаяСтрокаОбластиГруппыДоступа.Верх,
		5);
	
	Область.ГраницаСверху = ЛинияГраницы;
	
	Область = Документ.Область(
		КонечнаяСтрокаОбластиОбъекта.Низ,
		4,
		КонечнаяСтрокаОбластиОбъекта.Низ,
		5);
	
	Область.ГраницаСнизу = ЛинияГраницы;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеРежимаЗапуска(РежимЗапуска)
	
	Если РежимЗапуска = "Авто" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Авто'");
		
	ИначеЕсли РежимЗапуска = "ОбычноеПриложение" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Обычное приложение'");
		
	ИначеЕсли РежимЗапуска = "УправляемоеПриложение" Тогда
		ПредставлениеРежимаЗапуска = НСтр("ru = 'Управляемое приложение'");
	Иначе
		ПредставлениеРежимаЗапуска = "";
	КонецЕсли;
	
	Возврат ПредставлениеРежимаЗапуска;
	
КонецФункции

&НаСервере
Функция ПредставлениеЯзыка(Язык)
	
	ПредставлениеЯзыка = "";
	
	Для каждого МетаданныеЯзыка ИЗ Метаданные.Языки Цикл
	
		Если МетаданныеЯзыка.Имя = Язык Тогда
			ПредставлениеЯзыка = МетаданныеЯзыка.Синоним;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПредставлениеЯзыка;
	
КонецФункции

// Функция ВидыОграниченийПравОбъектовМетаданных возвращает
// таблицу значений, содержащую вид ограничений доступа
// по каждому праву объектов метаданных.
//  Если записи по праву нет, значит ограничений по праву нет.
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//    ВидДоступа - ПланВидовХарактеристикСсылка.ВидыДоступа
//    Таблица    - Строка - имя таблицы объекта метаданных, например, Справочник.Контрагенты
//    Право      - Строка: "Чтение", "Добавление", "Изменение", "Удаление"
//
&НаСервере
Функция ВидыОграниченийПравОбъектовМетаданных()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(
		"ПостоянныеВидыОграничений",
		УправлениеДоступомСлужебныйПовтИсп.ПостоянныеВидыОграниченийПравОбъектовМетаданных());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	ПостоянныеВидыОграничений.Право,
	|	ПостоянныеВидыОграничений.ВидДоступа,
	|	ПостоянныеВидыОграничений.ТаблицаОбъекта
	|ПОМЕСТИТЬ ПостоянныеВидыОграничений
	|ИЗ
	|	&ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Чтение"" КАК Право,
	|	НаборыЗначенийДоступа.ВидДоступа
	|ПОМЕСТИТЬ ПеременныеВидыОграничений
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО Идентификаторы.Ссылка = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Чтение"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Чтение) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Добавление"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО Идентификаторы.Ссылка = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Добавление"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Добавление) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Изменение"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО Идентификаторы.Ссылка = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Изменение"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Изменение) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	""Удаление"",
	|	НаборыЗначенийДоступа.ВидДоступа
	|ИЗ
	|	РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначенийДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|			ПО Идентификаторы.Ссылка = ПостоянныеВидыОграничений.ТаблицаОбъекта
	|				И (ПостоянныеВидыОграничений.Право = ""Удаление"")
	|				И (ПостоянныеВидыОграничений.ВидДоступа = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка))
	|		ПО (ТИПЗНАЧЕНИЯ(НаборыЗначенийДоступа.Объект) = ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Наборы.Объект КАК Объект,
	|			Наборы.НомерНабора КАК НомерНабора
	|		ИЗ
	|			РегистрСведений.НаборыЗначенийДоступа КАК Наборы
	|		ГДЕ
	|			Наборы.Удаление) КАК НомераНаборовПрава
	|		ПО НаборыЗначенийДоступа.Объект = НомераНаборовПрава.Объект
	|			И НаборыЗначенийДоступа.НомерНабора = НомераНаборовПрава.НомерНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПостоянныеВидыОграничений.Таблица,
	|	ПостоянныеВидыОграничений.Право,
	|	ПостоянныеВидыОграничений.ВидДоступа
	|ИЗ
	|	ПостоянныеВидыОграничений КАК ПостоянныеВидыОграничений
	|ГДЕ
	|	ПостоянныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПеременныеВидыОграничений.Таблица,
	|	ПеременныеВидыОграничений.Право,
	|	ПеременныеВидыОграничений.ВидДоступа
	|ИЗ
	|	ПеременныеВидыОграничений КАК ПеременныеВидыОграничений
	|ГДЕ
	|	ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
	|	И ПеременныеВидыОграничений.ВидДоступа <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
