#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура обновляет общие параметры ограничения доступа в
// параметрах ограничения доступа при изменении конфигурации.
// 
// Параметры:
//  ЕстьИзменения - Булево (возвращаемое значение) - если производилась запись,
//                  устанавливается Истина, иначе не изменяется.
//
Процедура ОбновитьОбщиеПараметры(ЕстьИзменения = Неопределено, ТолькоПроверка = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТолькоПроверка ИЛИ МонопольныйРежим() Тогда
		СнятьМонопольныйРежим = Ложь;
	Иначе
		СнятьМонопольныйРежим = Истина;
		УстановитьМонопольныйРежим(Истина);
	КонецЕсли;
	
	ВсеПустыеСсылки = ВсеПустыеСсылки();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа.ПараметрыОграниченияДоступа");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		
		Параметры = ОбновлениеИнформационнойБазы.ПараметрыРаботыПрограммы(
			"ПараметрыОграниченияДоступа");
		
		Сохраненные = Неопределено;
		
		Если Параметры.Свойство("ВсеПустыеСсылки") Тогда
			Сохраненные = Параметры.ВсеПустыеСсылки;
			
			Если НЕ ОбщегоНазначения.ДанныеСовпадают(ВсеПустыеСсылки, Сохраненные) Тогда
				Сохраненные = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если Сохраненные = Неопределено Тогда
			ЕстьИзменения = Истина;
			Если ТолькоПроверка Тогда
				ЗафиксироватьТранзакцию();
				Возврат;
			КонецЕсли;
			ОбновлениеИнформационнойБазы.УстановитьПараметрРаботыПрограммы(
				"ПараметрыОграниченияДоступа", "ВсеПустыеСсылки", ВсеПустыеСсылки);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Если СнятьМонопольныйРежим Тогда
			УстановитьМонопольныйРежим(Ложь);
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	
	Если СнятьМонопольныйРежим Тогда
		УстановитьМонопольныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает массив пустых ссылок всех типов конфигурации.
Функция ВсеПустыеСсылки()
	
	ВсеПустыеСсылки = Новый Массив;
	ТипыПустыхСсылок = Метаданные.Справочники.ИдентификаторыОбъектовМетаданных.Реквизиты.ЗначениеПустойСсылки.Тип.Типы();
	
	Для каждого ТипЗначения Из ТипыПустыхСсылок Цикл
		ВсеПустыеСсылки.Добавить(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(
			Метаданные.НайтиПоТипу(ТипЗначения).ПолноеИмя()).ПустаяСсылка());
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(ВсеПустыеСсылки);
	
КонецФункции

#КонецЕсли
