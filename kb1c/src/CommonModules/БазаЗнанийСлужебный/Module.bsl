////////////////////////////////////////////////////////////////////////////////
// УСТАНОВКА ПАРАМЕТРОВ СЕАНСА

// Процедура, определяет пользователя, под которым запущен сеанс и пытается
// найти соответсвие ему в справочнике Пользователи. Если соответствие
// не найдено - создается новый элемент. Параметр сеанса ТекущийПользователь
// устанавливается как ссылка на найденный (созданный) элемент справочника.
//
Процедура УстановкаПараметровСеанса(Знач ИмяПараметра, УстановленныеПараметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Если ИмяПараметра = "ТекущийПользовательБазыЗнаний" Тогда
	//	УстановкаПараметровСеанса_ТекущийПользовательБазыЗнаний();
	//КонецЕсли;

	УстановленныеПараметры.Добавить(ИмяПараметра);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА ПОДПИСОК НА СОБЫТИЯ

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ МЕТОДЫ

Процедура УстановитьОтборПоЗаданнымНастройкам(Отбор, Настройка) Экспорт
	
	ТипНастройки = ТипЗнч(Настройка);
	Если ТипНастройки = Тип("Массив") Тогда
		Для Каждого ЭлементМассива Из Настройка Цикл
			УстановитьОтборПоЗаданнымНастройкам(Отбор, ЭлементМассива);
		КонецЦикла;
	ИначеЕсли ТипНастройки = Тип("Структура") Тогда
		Если Настройка.Свойство("ЭтоГруппа") И Настройка.ЭтоГруппа Тогда
			ГруппаЭлементов = Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ГруппаЭлементов, Настройка, , "Элементы");
			
			УстановитьОтборПоЗаданнымНастройкам(ГруппаЭлементов, Настройка.Элементы);
		Иначе 
			ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.Использование		= Истина;
			ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(Настройка.Поле);
			ЭлементОтбора.ВидСравнения		= Настройка.ВидСравнения;
			ЭлементОтбора.ПравоеЗначение	= Настройка.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

