////////////////////////////////////////////////////////////////////////////////
// ОБЩАЯ ФУНКЦИОНАЛЬНОСТЬ

Функция ЗакодироватьСтроку(знач Текст) Экспорт
	Возврат КодироватьСтроку(Текст, СпособКодированияСтроки.КодировкаURL);
КонецФункции

Процедура КодироватьПараметрыСсылки(Параметры) Экспорт
	Для Каждого КлючИЗначение Из Параметры Цикл
		ИмяПараметра	= КлючИЗначение.Ключ;
		ЗначПараметра	= КодироватьСтроку(КлючИЗначение.Значение, СпособКодированияСтроки.КодировкаURL);
		Параметры.Вставить(ИмяПараметра, ЗначПараметра);
	КонецЦикла;
КонецПроцедуры

Процедура РаскодироватьПараметрыСсылки(Параметры) Экспорт
	Для Каждого КлючИЗначение Из Параметры Цикл
		ИмяПараметра	= КлючИЗначение.Ключ;
		ЗначПараметра	= РаскодироватьСтроку(КлючИЗначение.Значение, СпособКодированияСтроки.КодировкаURL);
		Параметры.Вставить(ИмяПараметра, ЗначПараметра);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА СО СТАТИСТИКОЙ БАЗЫ ЗНАНИЙ

Функция ПолучитьДанныеРейтингаСтатьи(знач СтатьяСсылка) Экспорт
	
	Возврат БазаЗнаний.ПолучитьДанныеРейтингаСтатьи(СтатьяСсылка);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ДАННЫМИ

Функция СтатьяРедактируется(знач СтатьяСсылка, знач Область = "") Экспорт
	
	ДанныеБлокировки = БазаЗнаний.ПолучитьДанныеБлокировки(СтатьяСсылка, Область);
	
	Возврат ЗначениеЗаполнено(ДанныеБлокировки.Пользователь);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ОПОВЕЩЕНИЯМИ

Функция ПолучитьОповещенияПользователя(знач ПользовательСсылка, знач ВидОповещения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь"	, ПользовательСсылка);
	Запрос.УстановитьПараметр("ВидОповещения"	, ВидОповещения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОповещенияБазыЗнаний.Пользователь,
	|	ОповещенияБазыЗнаний.ВидОповещения,
	|	ОповещенияБазыЗнаний.Идентификатор,
	|	ОповещенияБазыЗнаний.Объект,
	|	ОповещенияБазыЗнаний.ВидСобытия,
	|	ОповещенияБазыЗнаний.Описание
	|ИЗ
	|	РегистрСведений.ОповещенияБазыЗнаний КАК ОповещенияБазыЗнаний
	|ГДЕ
	|	ОповещенияБазыЗнаний.Пользователь = &Пользователь
	|	И ОповещенияБазыЗнаний.ВидОповещения = &ВидОповещения";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		ТаблицаОповещений = Результат.Выгрузить();
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаОповещений);
	КонецЕсли;
	
КонецФункции

Процедура УдалитьОповещенияПользователя(знач ПользовательСсылка, знач ВидОповещения, знач Идентификаторы) Экспорт
	
	НаборЗаписей = РегистрыСведений.ОповещенияБазыЗнаний.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(ПользовательСсылка);
	НаборЗаписей.Отбор.ВидОповещения.Установить(ВидОповещения);
	НаборЗаписей.Прочитать();
	
	ЕстьИзменения = Ложь;
	Для Каждого ЗаписьРегистра Из НаборЗаписей Цикл
		Если Идентификаторы.Найти(ЗаписьРегистра.Идентификатор) Тогда
			НаборЗаписей.Удалить(ЗаписьРегистра);
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С КАРТИНКАМИ И СКРИПТАМИ

Функция ПоместитьОбщиеКартинкиВХранилище(МассивФайлов) Экспорт
	
	Возврат Обработки.БазаЗнаний.ПоместитьКартинкиБазыЗнанийВХранилище(МассивФайлов);
	
КонецФункции

Функция ПоместитьОбщиеСкриптыВХранилище(МассивФайлов) Экспорт
	
	Возврат Обработки.БазаЗнаний.ПоместитьСкриптыБазыЗнанийВХранилище(МассивФайлов);
	
КонецФункции

Функция ПолучитьТекстыСкриптов(МассивСкриптов) Экспорт
	
	Возврат Обработки.БазаЗнаний.ПолучитьТекстыСкриптов(МассивСкриптов);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С НОВОСТЯМИ

// Добавляет новость в базу знаний. По умолчанию новости добавляются в фоновом режиме.
//
// Параметры
//	ПараметрыВыполнения - Структура. См. БазаЗнаний.ДобавитьНовость
//	ФоновыйРежим - Булево. По умолчанию: Истина. Режим выполнения операции
//	АдресХранилища - Строка. Не обязательный. Задается если ФоновыйРежим = Истина
//
// Возвращаемое значение
//	Если ФоновыйРежим = Истина Тогда УникальныйИдентификатор фонового задания
//	Иначе СправочникСсылка.НовостиБазыЗнаний
//
Функция ДобавитьНовость(ПараметрыВыполнения, ФоновыйРежим = Истина, АдресХранилища = "") Экспорт
	
	Если ФоновыйРежим Тогда
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(ПараметрыВыполнения);
		ПараметрыЗадания.Добавить(АдресХранилища);
		
		Задание = ФоновыеЗадания.Выполнить(
			"БазаЗнаний.ДобавитьНовость",
			ПараметрыЗадания,
			,
			"Добавление новости базы знаний");
		
		ВозвращаемоеЗначение = Задание.УникальныйИдентификатор;
	Иначе 
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено);
		БазаЗнаний.ДобавитьНовость(ПараметрыВыполнения, АдресХранилища);
		ПараметрыВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
		
		ВозвращаемоеЗначение = ПараметрыВыполнения.Результат;
		
	КонецЕсли;
		
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С НАСТРОЙКАМИ

Функция ПолучитьЗначениеНастройки(знач ИмяНастройки, знач ПользовательСсылка = Неопределено) Экспорт
	
	Возврат РегистрыСведений.НастройкиБазыЗнаний.ПолучитьЗначениеНастройки(ИмяНастройки, ПользовательСсылка);
	
КонецФункции

Функция ТекущаяВерсияИнтерфейса() Экспорт
	
	Если Метаданные.ОбщиеМодули.Найти("БазаЗнанийHTMLv2") <> Неопределено Тогда
		Возврат "2";
	Иначе 
		Возврат "1";
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ИЗБРАННЫМ

Функция ПолучитьИзбранное(знач ПользовательСсылка, знач НастройкаОтбора = Неопределено) Экспорт
	
	Возврат БазаЗнаний.ПолучитьИзбранное(ПользовательСсылка, НастройкаОтбора);

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ СТРАНИЦ БАЗЫ ЗНАНИЙ

Функция ПолучитьДанныеКатегории(АдресаКартинок, КатегорияСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(КатегорияСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Ссылка"		, КатегорияСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентКатегории(ПараметрыВыполнения);
	ПутьКФайлу		= "category_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу,
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеСтатьи(АдресаКартинок, СтатьяСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(СтатьяСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Ссылка"		, СтатьяСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентСтатьи(ПараметрыВыполнения);
	ПутьКФайлу		= "article_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеСтатьиПоРейтингу(АдресаКартинок, ИмяНастройки) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("ИмяНастройки"	, ИмяНастройки);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентСтатьиПоРейтингу(ПараметрыВыполнения);
	ПутьКФайлу		= ИмяНастройки + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеКлючевогоСлова(АдресаКартинок, КлючевоеСловоСсылка, КатегорияСсылка) Экспорт 
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(КлючевоеСловоСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("КлючевоеСлово", КлючевоеСловоСсылка);
	ПараметрыВыполнения.Вставить("Категория"	, КатегорияСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентКлючевогоСлова(ПараметрыВыполнения);
	ПутьКФайлу		= "tag_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеПрофиляПользователя(АдресаКартинок, ПользовательСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(ПользовательСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Пользователь"	, ПользовательСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентПрофиляПользователя(ПараметрыВыполнения);
	ПутьКФайлу		= "user_profile_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеОбновления(АдресаКартинок, Область, Параметры) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.Путь);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Область"		, Область);
	ПараметрыВыполнения.Вставить("Параметры"	, Параметры);
	
	Возврат БазаЗнанийВерсткаСтраниц.ПолучитьДанныеОбновления(ПараметрыВыполнения);
	
КонецФункции

Функция ПолучитьСсылкуПоИдентификатору(ВидСправочника, Идентификатор) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Справочники[ВидСправочника].ПустаяСсылка();
	КонецЕсли;
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор(Идентификатор);
	Возврат Справочники[ВидСправочника].ПолучитьСсылку(УникальныйИдентификатор);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ПОЛЬЗОВАТЕЛЯМИ

Функция ТекущийПользователь() Экспорт
	
	Возврат Пользователи.ТекущийПользователь();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ПРИЛОЖЕНИЯ

Процедура ПередЗавершениемРаботыСистемыНаСервере(Отказ) Экспорт
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// Закроем все незакрытые сессии
	МассивСессий = БазаЗнаний.ПолучитьКлючОткрытойСессии(ТекущийПользователь, Истина);
	Если ТипЗнч(МассивСессий) = Тип("Массив") Тогда
		Для Каждого КлючСессии Из МассивСессий Цикл
			БазаЗнаний.ЗавершитьСессииПользователя(КлючСессии);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры