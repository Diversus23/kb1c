////////////////////////////////////////////////////////////////////////////////
// Подсистема "Проверка легальности получения обновления".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Запрашивает у пользователя диалог с подтверждением легальности полученного
// обновления и завершает работу системы, если обновление получено не легально
// (см. параметр ЗавершатьРаботуСистемы).
//
// Параметры:
//  ЗавершатьРаботуСистемы - Булево - завершать работу системы, если пользователь
//                                    указал что обновление получено не легально.
//  ОткрыватьСЗадержкой    - Булево - если Истина, то окно проверки легальности откроется
//                                    с задержкой в 2 секунды. Необходимо для проверки
//                                    легальности при запуске программы.
//
// Возвращаемое значение:
//   Булево - Истина, если проверка завершилась успешно (пользователь
//            подтвердил, что обновление получено легально).
//
Функция ПроверитьЛегальностьПолученияОбновления(ЗавершатьРаботуСистемы = Ложь, ОткрыватьСЗадержкой = Ложь) Экспорт
	
	Если СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ЭтоБазоваяВерсияКонфигурации Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьПредупреждениеОПерезапуске", ЗавершатьРаботуСистемы);
	ПараметрыФормы.Вставить("ПринудительныйЗапуск", Истина);
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоПлатформа83БезРежимаСовместимости() Тогда
		
		Если ОткрыватьСЗадержкой Тогда
			ПараметрыРаботыКлиентаПриОбновлении.Вставить("ПараметрыЛегальностиПолученияОбновлений", ПараметрыФормы);
			ПодключитьОбработчикОжидания("ОбработчикПроверкиЛегальностиПолученияОбновленияВ83", 2, Истина);
		Иначе
			ОткрытьФорму("Обработка.ЛегальностьПолученияОбновлений.Форма", ПараметрыФормы);
		КонецЕсли;
		
	Иначе
		Результат = ОткрытьФормуМодально("Обработка.ЛегальностьПолученияОбновлений.Форма", ПараметрыФормы);
		Возврат (Результат = Истина);
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Проверить легальность получения обновления при запуске программы.
// Должна вызываться перед обновлением информационной базы.
//
Функция ПроверитьЛегальностьПолученияОбновленияПриЗапуске() Экспорт
	
	ПараметрыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыКлиента.РазделениеВключено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПараметрыКлиента.ПроверитьЛегальностьПолученияОбновления = Ложь
		Или Не ПараметрыКлиента.ЭтоГлавныйУзел Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ПроверитьЛегальностьПолученияОбновления(Истина, Истина);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Только для внутреннего использования.
//
Процедура ПроверитьЛегальностьПолученияОбновленияВ83() Экспорт
	
	ПараметрыФормы = ПараметрыРаботыКлиентаПриОбновлении.ПараметрыЛегальностиПолученияОбновлений;
	ОткрытьФорму("Обработка.ЛегальностьПолученияОбновлений.Форма", ПараметрыФормы);
	
КонецПроцедуры