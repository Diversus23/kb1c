////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обновление версии ИБ"
// Клиентские процедуры и функции для интерактивного обновления информационной базы.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// См. описание параметра ПриЗапускеКлиентскогоПриложения в модуле ОбновлениеИнформационнойБазы
// в описании функции ВыполнитьОбновлениеИнформационнойБазы.
//
Процедура ОбновитьИнформационнуюБазу(Отказ = Ложь, ПриЗапускеКлиентскогоПриложения = Ложь) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если НЕ ПараметрыРаботыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		СтандартныеПодсистемыКлиент.ЗавершающиеДействияПриНачалеРаботыСистемы();
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыРаботыКлиента.НеобходимоОбновлениеИнформационнойБазы Тогда
		Если ПараметрыРаботыКлиента.ЗагрузитьСообщениеОбменаДанными Тогда
			Перезапустить = Ложь;
			ОбновлениеИнформационнойБазыВызовСервера.ВыполнитьОбновлениеИнформационнойБазы(, Истина, Перезапустить);
			Если Перезапустить Тогда
				ПрекратитьРаботуСистемы(Перезапустить);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		СтандартныеПодсистемыКлиент.ЗавершающиеДействияПриНачалеРаботыСистемы();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ПриЗапускеКлиентскогоПриложения", ПриЗапускеКлиентскогоПриложения);
	ОткрытьФорму("Обработка.ОбновлениеИнформационнойБазы.Форма.ИндикацияХодаОбновленияИБ", ПараметрыФормы);
	
КонецПроцедуры

// Если есть непоказанные описания изменения и у пользователя не отключен
// показ - открыть форму ОписаниеИзмененийСистемы.
//
Процедура ПоказатьОписаниеИзмененийСистемы()
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыРаботыКлиента.ПоказатьОписаниеИзмененийСистемы Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПоказыватьТолькоИзменения", Истина);
		
		ОткрытьФорму("ОбщаяФорма.ОписаниеИзмененийСистемы", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

// Выводит оповещение пользователю о том, что отложенная обработка данных
// не выполнена.
//
Процедура ОповеститьОтложенныеОбработчикиНеВыполнены() Экспорт
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Работа в программе временно ограничена'"),
		НавигационнаяСсылкаОбработки(),
		НСтр("ru = 'Не завершен переход на новую версию'"),
		БиблиотекаКартинок.Предупреждение32);
	
КонецПроцедуры

// Возвращает навигационную ссылку обработки ОбновлениеИнформационнойБазы.
//
Функция НавигационнаяСсылкаОбработки()
	Возврат "e1cib/app/Обработка.ОбновлениеИнформационнойБазы";
КонецФункции

// Подключает глобальный обработчик ожидания в форме.
//
Процедура ПодключитьОбработчикПроверкиСтатусаОтложенногоОбновления() Экспорт
	ПодключитьОбработчикОжидания("ПроверитьСтатусОтложенногоОбновления", 2, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистем БСП

// Вызывается при интерактивном начале работы пользователя с областью данных.
// Соответствует событию ПриНачалеРаботыСистемы модулей приложения.
//
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если НЕ ПараметрыРаботыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОписаниеИзмененийСистемы();
	
КонецПроцедуры

