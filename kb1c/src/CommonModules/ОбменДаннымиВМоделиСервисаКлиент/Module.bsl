////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обмен данными в модели сервиса".
// 
////////////////////////////////////////////////////////////////////////////////

// Обработчик запуска клиентского сеанса приложения.
// Если запущен сеанс для автономного рабочего места, то выводит пользователю оповещение
// о необходимости выполнить синхронизацию данных с приложением в Интернете
// (если установлен соответствующий признак).
//
Процедура ПриНачалеРаботыСистемы(Знач ОбрабатыватьПараметрыЗапуска = Ложь) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
	Если ПараметрыРаботыКлиента.РазделениеВключено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыРаботыКлиента.ЭтоАвтономноеРабочееМесто Тогда
		
		ПредлагатьСинхронизироватьДанныеСПриложениемВИнтернетеПриЗавершенииСеанса =
			ПараметрыРаботыКлиента.СинхронизироватьДанныеСПриложениемВИнтернетеПриЗавершенииРаботы
		;
		Если ПараметрыРаботыКлиента.ОткрытьПомощникНастройкиАвтономногоРабочегоМеста Тогда
			
			ОткрытьФорму("Обработка.ПомощникСозданияАвтономногоРабочегоМеста.Форма.НастройкаНаСторонеАвтономногоРабочегоМеста");
			
		ИначеЕсли ПараметрыРаботыКлиента.СинхронизироватьДанныеСПриложениемВИнтернетеПриНачалеРаботы Тогда
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Автономная работа'"), "e1cib/app/Обработка.ВыполнениеОбменаДанными",
				НСтр("ru = 'Рекомендуется синхронизировать данные с приложением в Интернете.'"), БиблиотекаКартинок.Информация32);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при завершении работы системы, чтобы запросить список предупреждений,
// выводимых пользователю пользователю.
//
// Параметры:
//  см. ПриПолученииСпискаПредупрежденийЗавершенияРаботы.
//
Процедура ПриЗавершенииРаботыСистемы(Предупреждения) Экспорт
	
	Если ПредлагатьСинхронизироватьДанныеСПриложениемВИнтернетеПриЗавершенииСеанса = Истина
		И СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗавершении().ПараметрыАвтономнойРаботы.СинхронизацияССервисомДавноНеВыполнялась Тогда
		
		ТекстФлажка = НСтр("ru = 'Синхронизировать данные с приложением в Интернете'");
		ПараметрыФормы = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗавершении().ПараметрыАвтономнойРаботы.ПараметрыФормыВыполненияОбменаДанными;
		ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыФормы);
		ПараметрыФормы.Вставить("ЗавершениеРаботыСистемы", Истина);
		ПараметрыФормы = Новый ФиксированнаяСтруктура(ПараметрыФормы);
		ДействиеПриУстановленномФлажке = Новый Структура;
		ДействиеПриУстановленномФлажке.Вставить("Форма", "Обработка.ВыполнениеОбменаДанными.Форма.Форма");
		ДействиеПриУстановленномФлажке.Вставить("ПараметрыФормы", ПараметрыФормы);
		
		ПараметрыПредупреждения = Новый Структура;
		ПараметрыПредупреждения.Вставить("ТекстФлажка", ТекстФлажка);
		ПараметрыПредупреждения.Вставить("ДействиеПриУстановленномФлажке", ДействиеПриУстановленномФлажке);
		ПараметрыПредупреждения.Вставить("Приоритет", 80);
		
		Предупреждения.Добавить(ПараметрыПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики служебных событий подсистем БСП

// Доопределяет список предупреждений пользователю перед завершением работы системы.
//
// Параметры:
//  Предупреждения - Массив, в который можно добавить элементы типа Структура с полями:
//    ТекстФлажка      - Строка - текст флажка.
//    ПоясняющийТекст  - Строка - текст, выводимый в форме сверху
//                       управляющего элемента (флажок или гиперссылка).
//    ТекстГиперссылки - Строка - текст гиперссылки.
//    ДействиеПриУстановленномФлажке - Структура с полями:
//      Форма          - путь к открываемой форме.
//      ПараметрыФормы - произвольная структура параметров формы Форма. 
//    ДействиеПриНажатииГиперссылки - Структура с полями:
//      Форма          - Строка    - путь к форме, которая должна открываться по нажатию на гиперссылку.
//      ПараметрыФормы - Структура - произвольная структура параметров для вышеописанной формы.
//      ПрикладнаяФормаПредупреждения - Строка - путь к форме, которая должна открываться сразу
//                                      вместо универсальной формы в случае, когда в списке 
//                                      предупреждений оказывается только одно данное предупреждение.
//      ПараметрыПрикладнойФормыПредупреждения - Структура - произвольная структура
//                                               параметров для вышеописанной формы.
//
Процедура ПриПолученииСпискаПредупрежденийЗавершенияРаботы(Предупреждения) Экспорт
	
	ПриЗавершенииРаботыСистемы(Предупреждения);
	
КонецПроцедуры
