////////////////////////////////////////////////////////////////////////////////
// Подсистема "Удаленное администрирование".
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// См. описание этой же процедуры в модуле СтандартныеПодсистемыСервер.
Процедура ПриДобавленииОбработчиковСлужебныхСобытий(КлиентскиеОбработчики, СерверныеОбработчики) Экспорт
	
	// СЕРВЕРНЫЕ ОБРАБОТЧИКИ.
	
	СерверныеОбработчики["СтандартныеПодсистемы.РаботаВМоделиСервиса\ПриУстановкеЗначенийПараметровИБ"].Добавить(
		"УдаленноеАдминистрированиеСлужебный");
	
	СерверныеОбработчики["СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбменСообщениями\РегистрацияИнтерфейсовПринимаемыхСообщений"].Добавить(
		"УдаленноеАдминистрированиеСлужебный");
	
	СерверныеОбработчики["СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбменСообщениями\РегистрацияИнтерфейсовОтправляемыхСообщений"].Добавить(
		"УдаленноеАдминистрированиеСлужебный");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистем БСП

// Вызывается перед попыткой записи значений параметров ИБ в одноименные
// константы.
//
// Параметры:
// ЗначенияПараметров - Структура - значения параметров которые требуется установить.
// В случае если значение параметра устанавливается в данной процедуре из структуры
// необходимо удалить соответствующую пару КлючИЗначение
//
Процедура ПриУстановкеЗначенийПараметровИБ(Знач ЗначенияПараметров) Экспорт
	
	Если ЗначенияПараметров.Свойство("URLСервиса") Тогда
		Константы.ВнутреннийАдресМенеджераСервиса.Установить(ЗначенияПараметров.URLСервиса);
		ЗначенияПараметров.Удалить("URLСервиса");
	КонецЕсли;
	
	Если ЗначенияПараметров.Свойство("ИмяСлужебногоПользователяСервиса") Тогда
		Константы.ИмяСлужебногоПользователяМенеджераСервиса.Установить(ЗначенияПараметров.ИмяСлужебногоПользователяСервиса);
		ЗначенияПараметров.Удалить("ИмяСлужебногоПользователяСервиса");
	КонецЕсли;
	
	Если ЗначенияПараметров.Свойство("ПарольСлужебногоПользователяСервиса") Тогда
		Константы.ПарольСлужебногоПользователяМенеджераСервиса.Установить(ЗначенияПараметров.ПарольСлужебногоПользователяСервиса);
		ЗначенияПараметров.Удалить("ПарольСлужебногоПользователяСервиса");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет переданный массив общими модулями, которые являются обработчиками интерфейсов
//  принимаемых сообщений
//
// Параметры:
//  МассивОбработчиков - массив
//
Процедура РегистрацияИнтерфейсовПринимаемыхСообщений(МассивОбработчиков) Экспорт
	
	МассивОбработчиков.Добавить(СообщенияУдаленногоАдминистрированияИнтерфейс);
	
КонецПроцедуры

// Заполняет переданный массив общими модулями, которые являются обработчиками интерфейсов
//  отправляемых сообщений
//
// Параметры:
//  МассивОбработчиков - массив
//
//
Процедура РегистрацияИнтерфейсовОтправляемыхСообщений(МассивОбработчиков) Экспорт
	
	МассивОбработчиков.Добавить(СообщенияКонтрольУдаленногоАдминистрированияИнтерфейс);
	МассивОбработчиков.Добавить(СообщенияУправленияПриложениямиИнтерфейс);
	
КонецПроцедуры

