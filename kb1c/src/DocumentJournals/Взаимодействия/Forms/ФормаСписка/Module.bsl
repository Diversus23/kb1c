&НаКлиенте
Перем КонтекстВыбора;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Не ОбщегоНазначения.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("РежимВыбора") И Параметры.РежимВыбора = Истина Тогда
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	ИнформационнаяБазаФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Взаимодействия.ИнициализироватьФормуСпискаВзаимодействий(ЭтаФорма);
	ОпределитьДоступностьПолнотекстовыйПоиск();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Закладки, "Владелец", Пользователи.ТекущийПользователь(),,, Истина);
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	
	ДополнитьМенюПанелиНавигации();
	
	Для Каждого ТипПредмета Из Метаданные.Документы.ЭлектронноеПисьмоИсходящее.Реквизиты.Предмет.Тип.Типы() Цикл
		Если ТолькоПочта И 
			(ТипПредмета = Тип("ДокументСсылка.Встреча") ИЛИ ТипПредмета = Тип("ДокументСсылка.ТелефонныйЗвонок") ИЛИ
			ТипПредмета = Тип("ДокументСсылка.ЗапланированноеВзаимодействие") ИЛИ ТипПредмета = Тип("ДокументСсылка.СообщениеSMS")) Тогда
			Продолжить;
		КонецЕсли;
		СписокВыбораТипаПредмета.Добавить(Метаданные.НайтиПоТипу(ТипПредмета).ПолноеИмя(), Строка(ТипПредмета));
	КонецЦикла;
	
	Если НЕ ИнформационнаяБазаФайловая Тогда
		Элементы.СписокОтправитьПолучитьПочту.Видимость          = Ложь;
		Элементы.СписокОтправитьПолучитьПочтуВходящие.Видимость  = Ложь;
		Элементы.СписокОтправитьПолучитьПочтуИсходящие.Видимость = Ложь;
	КонецЕсли;
	
	ТипВзаимодействия = ?(ТолькоПочта, "ВсеПисьма","Все");
	Статус = "Все";
	
	Взаимодействия.ЗаполнитьСписокДоступныхДляСозданияДокументов(ДокументыДоступныеДляСоздания);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ИмяТекущейПанелиНавигации = Настройки.Получить("ИмяТекущейПанелиНавигации");
	Если ПустаяСтрока(ИмяТекущейПанелиНавигации) Тогда
		ИмяТекущейПанелиНавигации = "СтраницаПредмет";
	ИначеЕсли ИмяТекущейПанелиНавигации = "СтраницаСвойства" Тогда
		Если ТаблицаДопРеквизитовСвойств.НайтиСтроки(Новый 
				Структура("ДопРеквизитСведение",ТекущееСвойствоПанелиНавигации)).Количество() = 0 Тогда
			ИмяТекущейПанелиНавигации = "СтраницаПредмет";
		КонецЕсли;
	ИначеЕсли ИмяТекущейПанелиНавигации = "СтраницаРеквизитыПредмета" Тогда
		МассивОписаний = 
			ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивОписанияВидовНавигацииОтРеквизитовПредмета();
		ОписаниеНайдено = Ложь;
		Для каждого ЭлементМассива Из МассивОписаний Цикл
			Если ЭлементМассива.Представление = ТекущееПредставлениеОтбораПоРеквизитуПредмета Тогда
				ОписаниеНайдено = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ОписаниеНайдено Тогда
			ИмяТекущейПанелиНавигации = "СтраницаПредмет";
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы[ИмяТекущейПанелиНавигации];
	
	Статус = Настройки.Получить("Статус");
	Если Статус <> Неопределено Тогда
		Настройки.Удалить("Статус");
	КонецЕсли;
	Если Не ИспользоватьПризнакРассмотрено Тогда
		Статус = "Все";
	КонецЕсли;	
	Если ЗначениеЗаполнено(Статус) И Статус <> "Все" Тогда
		ПриИзмененииСтатусаСервер(Ложь);
	Иначе
		Статус = "Все";
	КонецЕсли;

	Ответственный = Настройки.Получить("Ответственный");
	ПриИзмененииОтветственногоСервер(Ложь);
	
	Взаимодействия.ПриЗагрузкеТипаВзаимодействийИзНастроек(ЭтаФорма, Настройки);
	
	ПриИзмененииТипаСервер(Ложь);
	ОбновитьПанельНавигации();
	УстановитьЗаголовокВидаПанелиНавигации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Врег(ИмяСобытия) = Врег("Запись_ЗакладкиВзаимодействий") Тогда
		Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаЗакладки Тогда
			Элементы.Закладки.Обновить();
			ОбработатьАктивизациюСтрокиПанелиНавигации();
		КонецЕсли;
	ИначеЕсли Врег(ИмяСобытия) = Врег("Запись_ПапкиЭлектронныхПисем") ИЛИ 
		      Врег(ИмяСобытия) = Врег("ПримененыПравилаОбработкиПисем")  Тогда
		Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки Тогда
			ОбновитьПанельНавигации();
			ВосстановитьРаскрытыеУзлыДерева();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт И 
		Контакты.ПолучитьЭлементы().Количество() = 0 Тогда
		ПереключитьПанельНавигацииСервер("УстановитьВариантНавигацииПоКонтакту");
	КонецЕсли;
	
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если КонтекстВыбора = "ОтветственныйВыполнить" Тогда
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			УстановитьОтветственного(ВыбранноеЗначение, Неопределено);
		КонецЕсли;
		
		ВосстановитьРаскрытыеУзлыДерева();
		
	ИначеЕсли КонтекстВыбора = "ОтветственныйСписок" Тогда
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
			УстановитьОтветственного(ВыбранноеЗначение, Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки);
		КонецЕсли;
		
		ВосстановитьРаскрытыеУзлыДерева();
		
	ИначеЕсли КонтекстВыбора = "ПредметВыполнить" Тогда
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			УстановитьПредмет(ВыбранноеЗначение, Неопределено);
		КонецЕсли;
		
		ВосстановитьРаскрытыеУзлыДерева();
		
	ИначеЕсли КонтекстВыбора = "ПредметСписок" Тогда
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
			УстановитьПредмет(ВыбранноеЗначение, Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки);
		КонецЕсли;
		
		ВосстановитьРаскрытыеУзлыДерева();
		
	ИначеЕсли КонтекстВыбора = "ПеренестиВПапку" Тогда
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			
			ИмяТекущегоЭлемента = ТекущийЭлемент.Имя;
			ПапкиТекущиеДанные = Элементы.Папки.ТекущиеДанные;
			
			Если Лев(ИмяТекущегоЭлемента,6) = "Список" Тогда
				ВыполнитьПереносВПапкуМассиваПисем(Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки, ВыбранноеЗначение);
			Иначе
				УстановитьРодителяУПапки(ПапкиТекущиеДанные.Значение, ВыбранноеЗначение);
			КонецЕсли;
			
			ВосстановитьРаскрытыеУзлыДерева();
			
		КонецЕсли;
		
	КонецЕсли;
	
	КонтекстВыбора = Неопределено;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПанельНавигацииПриАктивизацииСтроки(Элемент)
	
	ТекущийЭлементСписок = ТекущийЭлементСписок();
	
	Если Элемент.Имя = "Предметы" И
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаПредмет Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "Контакты" И 
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаКонтакт Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "Закладки" И 
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаЗакладки Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "Свойства" И
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаСвойства Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "РеквизитыПредмета" И 
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаРеквизитыПредмета Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "Папки" И 
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаПапки Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "Категории" И
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница <> Элементы.СтраницаКатегории Тогда
		Возврат;
	КонецЕсли;
	
	Если НеОтрабатыватьАктивизациюПанелиНавигации Тогда
		НеОтрабатыватьАктивизациюПанелиНавигации = Ложь;
	Иначе
		ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиПанелиНавигации",0.3,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	ПриИзмененииСтатусаСервер(Истина);
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	ПриИзмененииОтветственногоСервер(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипВзаимодействияПриИзменении(Элемент)
	
	ПриИзмененииТипаСервер();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	Если Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокОбычная И
		Элемент.Имя <> "Список" Тогда
		
		Возврат;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокВходящие И
		Элемент.Имя <> "СписокВходящие" Тогда
		
		Возврат;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокИсходящие И
		Элемент.Имя <> "СписокИсходящие" Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбновитьПанельНавигации();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональныеНастройки(Команда)
	
	ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.НастройкиРаботыСПочтой", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущийЭлементСписок = ТекущийЭлементСписок();
	
	Если ТекущийЭлементСписок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийЭлементСписок.ТекущиеДанные = Неопределено Тогда
		Если Элементы.СтраницыПредпросмотр.ТекущаяСтраница <> Элементы.СтраницаПредпросмотрОбычныйТекст Тогда
			Элементы.СтраницыПредпросмотр.ТекущаяСтраница = Элементы.СтраницаПредпросмотрОбычныйТекст;
		КонецЕсли;
		Предпросмотр = "";
		ПредпросмотрHTML = "<HTML><BODY></BODY></HTML>";
		ВзаимодействиеДляКоторогоСформированПредпросмотр = Неопределено;
		
	Иначе
		
		Если Элемент.Имя = "Список" И Элементы.СтраницыСписок.ТекущаяСтраница <> Элементы.СтраницаСписокОбычная Тогда
			Возврат;
		ИначеЕсли Элемент.Имя = "СписокВходящие" И
			Элементы.СтраницыСписок.ТекущаяСтраница <> Элементы.СтраницаСписокВходящие Тогда
			Возврат;
		ИначеЕсли Элемент.Имя = "СписокИсходящие" И
			Элементы.СтраницыСписок.ТекущаяСтраница <> Элементы.СтраницаСписокИсходящие Тогда
			Возврат;
		КонецЕсли;
		
		Если ВыборКорректен(Элемент.Имя,Истина) И
			ВзаимодействиеДляКоторогоСформированПредпросмотр <> ТекущийЭлементСписок.ТекущиеДанные.Ссылка Тогда
			
			Если ТекущийЭлементСписок.ВыделенныеСтроки.Количество() = 1 Тогда
				
				ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСписка",0.1,Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыКонтактыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТипЗнч(ТекущиеДанные.Значение) <> Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ТекущиеДанные.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоПоАктивнымПредметамПриИзменении(Элемент)
	
	ОбновитьПанельНавигации();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.Папки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЕстьПравоНаИзменение = 0 Тогда
		Предупреждение(НСтр("ru = 'Недостаточно прав для создания папки.'"));
		Возврат;
	КонецЕсли;
		
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Владелец", ТекущиеДанные.УчетнаяЗапись);
	Если ТипЗнч(ТекущиеДанные.Значение) = Тип("СправочникСсылка.ПапкиЭлектронныхПисем") Тогда
		СтруктураПараметры.Вставить("Родитель", ТекущиеДанные.Значение);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", СтруктураПараметры);
	ОткрытьФорму("Справочник.ПапкиЭлектронныхПисем.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.Папки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты")
		ИЛИ ТекущиеДанные.ЕстьПравоНаИзменение = 0 ИЛИ ТекущиеДанные.ПредопределеннаяПапка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Удалить папку ""'") + Строка(ТекущиеДанные.Значение) 
	+ НСтр("ru = '"" и переместить все ее содержимое в папку ""Удаленные""'");
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОписаниеОшибки =  УдалитьПапкуСервер(ТекущиеДанные.Значение);
		Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
			Предупреждение(ОписаниеОшибки);
		Иначе
			ВосстановитьРаскрытыеУзлыДерева();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьПапкуСервер(Папка)
	
	ОписаниеОшибки = "";
	Взаимодействия.ВыполнитьУдалениеПапкиЭлектронныхПисем(Папка, ОписаниеОшибки);
	Если ПустаяСтрока(ОписаниеОшибки) Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
	Возврат ОписаниеОшибки;
	
КонецФункции

&НаКлиенте
Процедура ТипВзаимодействияСтатусОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ОписанияНайденоПП.Очистить();
	
	Если СтрокаПоиска <> "" Тогда
		
		ПроверитьИндексППД();
		ЭтаФорма.ТекущийЭлемент = ?(НЕ РасширенныйПоиск, Элементы.СтрокаПоиска, ТекущийЭлементСписок());

	Иначе
		РасширенныйПоиск = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, 
			"Поиск",
			Неопределено,
			ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		ОснованиеВыбора = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	
	КоличествоНайденных = 0;
	Для каждого ЭлементСписка Из Элементы.СтрокаПоиска.СписокВыбора Цикл
		Если ЛЕВ(ВРег(ЭлементСписка.Значение), СтрДлина(СокрЛП(Текст))) = ВРег(СокрЛП(Текст)) Тогда
			ДанныеВыбора.Добавить(ЭлементСписка.Значение);
			КоличествоНайденных = КоличествоНайденных + 1;
			Если КоличествоНайденных > 7 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ВзаимодействияКлиент.СписокПередНачаломДобавления(Элемент, Отказ, Копирование, ТолькоПочта, ДокументыДоступныеДляСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура УзелДереваПанелиНавигацииПередСворачиванием(Элемент, Строка, Отказ)
	
	ИмяДерева = Элемент.Имя;
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ДанныеСтроки = Элементы[ИмяДерева].ДанныеСтроки(Строка);
		Если ДанныеСтроки <> Неопределено Тогда
			СохранитьСостояниеУзлаВНастройках(ИмяДерева, ДанныеСтроки.Значение, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УзелДереваПанелиНавигацииПередРазворачиванием(Элемент, Строка, Отказ)
	
	ИмяДерева = Элемент.Имя;
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ДанныеСтроки = Элементы[ИмяДерева].ДанныеСтроки(Строка);
		Если ДанныеСтроки <> Неопределено Тогда
			СохранитьСостояниеУзлаВНастройках(ИмяДерева, ДанныеСтроки.Значение, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредпросмотрHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ВзаимодействияКлиент.ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////
// Обработка перетаскивания

&НаКлиенте
Процедура ПредметыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если (Строка = Неопределено) ИЛИ (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение     = Предметы.НайтиПоИдентификатору(Строка);
	
	Если Не ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(СтрокаНазначение.Значение) И 
		Не ВзаимодействияКлиентСервер.ЯвляетсяПредметом(СтрокаНазначение.Значение) Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Для каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(ЭлементМассива) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Число") Тогда
		СтрокаПеретаскивание = Предметы.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		
		Если Не ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(СтрокаПеретаскивание.Значение) Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		КонецЕсли;
		
	Иначе
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение     = Предметы.НайтиПоИдентификатору(Строка);
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		ВзаимодействияВызовСервера.УстановитьПредметДляМассиваВзаимодействий(ПараметрыПеретаскивания.Значение,
			СтрокаНазначение.Значение, Истина);
	Иначе
		СтрокаПеретаскивание = Предметы.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		ВзаимодействияВызовСервера.ЗаменитьПредметВЦепочкеВзаимодействий(СтрокаПеретаскивание.Значение,
			СтрокаНазначение.Значение);
	КонецЕсли;
	
	ОбновитьПанельНавигации();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если (Строка = Неопределено) ИЛИ (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение = Папки.НайтиПоИдентификатору(Строка);
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Если ТипЗнч(СтрокаНазначение.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") ИЛИ 
			СтрокаНазначение.ЕстьПравоНаИзменение = 0 Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
			Возврат;
		КонецЕсли;
		
		
		Для каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ВзаимодействияКлиентСервер.ЯвляетсяЭлектроннымПисьмом(ЭлементМассива) Тогда
				ТекущийЭлементСписок = ТекущийЭлементСписок();
				Если ТекущийЭлементСписок = Неопределено Тогда
					ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
				КонецЕсли;
				ДанныеСтроки = ТекущийЭлементСписок.ДанныеСтроки(ЭлементМассива);
				Если ДанныеСтроки.УчетнаяЗапись = СтрокаНазначение.УчетнаяЗапись Тогда
					ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Число") Тогда
		
		СтрокаПеретаскивание = Папки.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		Если СтрокаПеретаскивание.УчетнаяЗапись <> СтрокаНазначение.УчетнаяЗапись Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
			Возврат;
		КонецЕсли;
		
		СтрокаРодитель = СтрокаНазначение;
		Пока ТипЗнч(СтрокаРодитель.Значение) <> Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Цикл
			Если СтрокаПеретаскивание = СтрокаРодитель Тогда
				ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
				Возврат;
			КонецЕсли;
			СтрокаРодитель = СтрокаРодитель.ПолучитьРодителя();
		КонецЦикла;
		
	Иначе
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение = Папки.НайтиПоИдентификатору(Строка);
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		ВыполнитьПереносВПапкуМассиваПисем(ПараметрыПеретаскивания.Значение, СтрокаНазначение.Значение);
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Число") Тогда
		ДанныеСтрокиПеретаскивания = Папки.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		Если НЕ ДанныеСтрокиПеретаскивания.ПолучитьРодителя() = СтрокаНазначение Тогда
			УстановитьРодителяУПапки(ДанныеСтрокиПеретаскивания.Значение,
			                        ?(ТипЗнч(СтрокаНазначение.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты"),
			                        ПредопределенноеЗначение("Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка"),
			                        СтрокаНазначение.Значение));
		КонецЕсли;
			
	КонецЕсли;
	
	ОбновитьПанельНавигации(СтрокаНазначение.Значение);
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ПараметрыПеретаскивания.Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Папки.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
	Если ТипЗнч(ДанныеСтроки.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") ИЛИ
		ДанныеСтроки.ПредопределеннаяПапка ИЛИ ДанныеСтроки.ЕстьПравоНаИзменение = 0 Тогда
		Выполнение = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПредметаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если (Строка = Неопределено) ИЛИ (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение     = РеквизитыПредмета.НайтиПоИдентификатору(Строка);
	
	Если Не ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(СтрокаНазначение.Значение) И 
		Не ВзаимодействияКлиентСервер.ЯвляетсяПредметом(СтрокаНазначение.Значение) Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Для каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(ЭлементМассива) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Число") Тогда
		
		СтрокаПеретаскивание = РеквизитыПредмета.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		
		Если Не ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(СтрокаПеретаскивание.Значение) Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		КонецЕсли;
		
	Иначе
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПредметаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначение     = РеквизитыПредмета.НайтиПоИдентификатору(Строка);
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		ВзаимодействияВызовСервера.УстановитьПредметДляМассиваВзаимодействий(ПараметрыПеретаскивания.Значение,
			СтрокаНазначение.Значение, Истина);
	Иначе
		СтрокаПеретаскивание = РеквизитыПредмета.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
		ВзаимодействияВызовСервера.ЗаменитьПредметВЦепочкеВзаимодействий(СтрокаПеретаскивание.Значение,
			СтрокаНазначение.Значение);
	КонецЕсли;
	
	ОбновитьПанельНавигации();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПредметаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ПараметрыПеретаскивания.Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = РеквизитыПредмета.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
	Если Не ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(ДанныеСтроки.Значение) Тогда
		Выполнение = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СписокИменФайлов = Новый СписокЗначений;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл") И 
		ПараметрыПеретаскивания.Значение.ЭтоФайл() = Истина Тогда
		
		СписокИменФайлов.Добавить(ПараметрыПеретаскивания.Значение.ПолноеИмя,ПараметрыПеретаскивания.Значение.Имя);
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Если ПараметрыПеретаскивания.Значение.Количество() >= 1 И
			ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Файл") Тогда
			
			Для Каждого ФайлПринятый Из ПараметрыПеретаскивания.Значение Цикл
				Если ТипЗнч(ФайлПринятый) = Тип("Файл") И ФайлПринятый.ЭтоФайл() Тогда
					СписокИменФайлов.Добавить(ФайлПринятый.ПолноеИмя,ФайлПринятый.Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Вложения", СписокИменФайлов);
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

// Получить и отправить входящую электронную почту
&НаКлиенте
Процедура ОтправитьПолучитьПочтуВыполнить(Команда)
	
	Если НЕ ИнформационнаяБазаФайловая Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	УправлениеЭлектроннойПочтойКлиент.ОтправитьЗагрузитьПочтуПользователя(ТекущийЭлементСписок());
	ОбновитьПанельНавигации();
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура Ответить(Команда)
	
	ТекущийЭлементСписок = ТекущийЭлементСписок();
	
	Если ТекущийЭлементСписок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборКорректен(ТекущийЭлементСписок.Имя, Истина) Тогда
		ТекущееВзаимодействие = ТекущийЭлементСписок.ТекущиеДанные.Ссылка;
		Если ТипЗнч(ТекущееВзаимодействие) <> Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			Предупреждение(НСтр("ru = 'Команда ""Ответить"" может быть выполнена только для входящего письма.'"));
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура("Основание,Команда",ТекущееВзаимодействие, "Ответить");
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.ФормаДокумента", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьВсем(Команда)
	
	ТекущийЭлементСписок = ТекущийЭлементСписок();
	
	Если ТекущийЭлементСписок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборКорректен(ТекущийЭлементСписок.Имя, Истина) Тогда
		ТекущееВзаимодействие = ТекущийЭлементСписок.ТекущиеДанные.Ссылка;
		Если ТипЗнч(ТекущееВзаимодействие) <> Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			Предупреждение(НСтр("ru = 'Команда ""Ответить всем"" может быть выполнена только для входящего письма.'"));
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура("Основание,Команда",ТекущееВзаимодействие, "ОтветитьВсем");
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.ФормаДокумента", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Переслать(Команда)
	
	ТекущийЭлементСписок = ТекущийЭлементСписок();
	
	Если ТекущийЭлементСписок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборКорректен(ТекущийЭлементСписок.Имя, Истина) Тогда
		ТекущееВзаимодействие = ТекущийЭлементСписок.ТекущиеДанные.Ссылка;
		Если ТипЗнч(ТекущееВзаимодействие) <> Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") И 
			ТипЗнч(ТекущееВзаимодействие) <> Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			Предупреждение(НСтр("ru = 'Команда ""Переслать"" может быть выполнена только для писем.'"));
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура("Основание,Команда", ТекущееВзаимодействие, "Переслать");
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.ФормаДокумента", ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьПанельНавигации(Команда)
	
	ПереключитьПанельНавигацииСервер(Команда.Имя);
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьВариантНавигацииПоКонтакту(Команда)
	
	ПереключитьПанельНавигации(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантНавигацииПоПредмету(Команда)
	
	ПереключитьПанельНавигации(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантНавигацииПоЗакладкам(Команда)
	
	ПереключитьПанельНавигации(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантНавигацииПоПапкам(Команда)
	
	ПереключитьПанельНавигации(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйВыполнить(Команда)
	
	КонтекстВыбора = "ОтветственныйВыполнить";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйСписок(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
	Если Лев(ИмяТекущегоЭлемента,6) = "Список" И Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстВыбора = "ОтветственныйСписок";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РассмотреноВыполнить(Команда)
	
	УстановитьФлагРассмотрено(Неопределено,Истина);
	ВосстановитьРаскрытыеУзлыДерева();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПризнакРассмотрено(Команда)
	
	РассмотреноВыполнитьСписок(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзаимодействияПоПредмету(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
	Если Не ВыборКорректен(ИмяТекущегоЭлемента,Истина) Тогда
		Возврат;
	КонецЕсли;
	
	Предмет = Элементы[ИмяТекущегоЭлемента].ТекущиеДанные.Предмет;
	
	Если ВзаимодействияКлиентСервер.ЯвляетсяПредметом(Предмет) Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Предмет", Предмет);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТипВзаимодействия", "Предмет");
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
		
	ИначеЕсли ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(Предмет) Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Предмет", Предмет);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТипВзаимодействия", "Взаимодействие");
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
		
	Иначе
		Возврат;
	КонецЕсли;

	ОткрытьФорму(
		"ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая",
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПризнакРассмотрено(Команда)
	
	РассмотреноВыполнитьСписок(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РассмотреноВыполнитьСписок(ЗначенияПризнака)
	
	ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
	Если Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьФлагРассмотрено(Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки, ЗначенияПризнака);
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

// Установить предмет в выбранных взаимодействиях - клиентская часть
&НаКлиенте
Процедура ПредметВыполнить(Команда)

	ВыбранныйТипПредмета = СписокВыбораТипаПредмета.ВыбратьЭлемент(Нстр("ru = 'Выберите тип предмета'"));
	Если ВыбранныйТипПредмета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстВыбора = "ПредметВыполнить";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму(ВыбранныйТипПредмета.Значение + ".ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСписок(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
	Если Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйТипПредмета = СписокВыбораТипаПредмета.ВыбратьЭлемент(Нстр("ru = 'Выберите тип предмета'"));
	Если ВыбранныйТипПредмета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстВыбора = "ПредметСписок";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму(ВыбранныйТипПредмета.Значение + ".ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЗакладки(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлемент.Имя;
	Если Лев(ИмяТекущегоЭлемента, 6) = "Список" И Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Предупреждение(НСтр("ru = 'Не выбран элемент для добавления в закладки.'"));
		Возврат;
	КонецЕсли;
	
	ЭлементДляДобавления = Неопределено;
	Если Лев(ИмяТекущегоЭлемента, 6) = "Список" Тогда
		ЭлементДляДобавления = Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки;
	ИначеЕсли ИмяТекущегоЭлемента = "Свойства" Или ИмяТекущегоЭлемента = "Категории" Или ИмяТекущегоЭлемента = "Папки" Тогда
		ТекущиеДанные = Элементы[ИмяТекущегоЭлемента].ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ЭлементДляДобавления = Новый Структура("Значение", ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли ИмяТекущегоЭлемента = "РеквизитыПредмета" Тогда
		ТекущиеДанные = Элементы[ИмяТекущегоЭлемента].ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ЭлементДляДобавления = Новый Структура("Значение,Группировка", ТекущиеДанные.Значение, ТекущиеДанные.Группировка);
		КонецЕсли;
	Иначе
		ТекущиеДанные = Элементы[ИмяТекущегоЭлемента].ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ЭлементДляДобавления = Новый Структура("Значение,ОписаниеТипов", ТекущиеДанные.Значение, ТекущиеДанные.ОписаниеТипов);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭлементДляДобавления = Неопределено Тогда
		Предупреждение(НСтр("ru = 'Не выбран элемент для добавления в закладки.'"));
		Возврат;
	КонецЕсли;
	
	Результат = ДобавитьВЗакладкиСервер(ЭлементДляДобавления, ИмяТекущегоЭлемента);
	Если Не Результат.ЭлементДобавлен Тогда
		Предупреждение(Результат.ТекстСообщенияОшибка);
		Возврат;
	КонецЕсли;
	ПоказатьОповещениеПользователя(НСтр("ru = 'Добавлены в закладки:'"),
		Результат.НавигационнаяСсылкаЭлемента, Результат.ПредставлениеЭлемента, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Устанавливает реквизит "отработать после" в выбранных взаимодействиях - клиентская часть
&НаКлиенте
Процедура ОтложитьРассмотрениеВыполнить(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлемент.Имя;
	Если Лев(ИмяТекущегоЭлемента,6) = "Список" И Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаОтработки = ОбщегоНазначенияКлиент.ДатаСеанса();
	Если ВвестиДату(ДатаОтработки, "Отработать после", ЧастиДаты.ДатаВремя) Тогда
		ОтложитьРассмотрение(ДатаОтработки,Неопределено);
	КонецЕсли;
	
	ВосстановитьРаскрытыеУзлыДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтложитьРассмотрениеСписок(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлементСписок().Имя;
	Если Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаОтработки = ОбщегоНазначенияКлиент.ДатаСеанса();
	Если ВвестиДату(ДатаОтработки, "Отработать после", ЧастиДаты.ДатаВремя) Тогда
		ОтложитьРассмотрение(ДатаОтработки, Элементы[ИмяТекущегоЭлемента].ВыделенныеСтроки);
	КонецЕсли;
	
	ВосстановитьРаскрытыеУзлыДерева();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьВстречу(Команда)
	
	СоздатьНовоеВзаимодействие("Встреча");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗапланированноеВзаимодействие(Команда)
	
	СоздатьНовоеВзаимодействие("ЗапланированноеВзаимодействие");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТелефонныйЗвонок(Команда)
	
	СоздатьНовоеВзаимодействие("ТелефонныйЗвонок");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлектронноеПисьмо(Команда)
	
	СоздатьНовоеВзаимодействие("ЭлектронноеПисьмоИсходящее");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСообщениеSMS(Команда)
	
	СоздатьНовоеВзаимодействие("СообщениеSMS");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПравилаОбработки(Команда)

	ТекущиеДанные = Элементы.Папки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЕстьПравоНаИзменение = 0 ИЛИ
		ТипЗнч(ТекущиеДанные.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("УчетнаяЗапись", ТекущиеДанные.УчетнаяЗапись);
	СтруктураПараметры.Вставить("ДляПисемВПапке", ТекущиеДанные.Значение);
	
	ОткрытьФорму("Справочник.ПравилаОбработкиЭлектроннойПочты.Форма.ПрименениеПравил", СтруктураПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВПапку(Команда)
	
	ИмяТекущегоЭлемента = ТекущийЭлемент.Имя;
	Если Лев(ИмяТекущегоЭлемента,6) = "Список" И Не ВыборКорректен(ИмяТекущегоЭлемента) Тогда
		Возврат;
	КонецЕсли;
	
	ПапкиТекущиеДанные = Элементы.Папки.ТекущиеДанные;
	Если ПапкиТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяТекущегоЭлемента = "Папки" Тогда
		Если ТипЗнч(ПапкиТекущиеДанные.Значение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") ИЛИ 
			ПапкиТекущиеДанные.ПредопределеннаяПапка Тогда
			Предупреждение(НСтр("ru = 'Команда не может быть выполнена для данного объекта'"));
			Возврат;
		ИначеЕсли ПапкиТекущиеДанные.ЕстьПравоНаИзменение = 0 Тогда
			Предупреждение(НСтр("ru = 'Недостаточно прав для изменения папок.'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КонтекстВыбора = "ПеренестиВПапку";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", ПапкиТекущиеДанные.УчетнаяЗапись));
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ПапкиЭлектронныхПисем.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеПанелиНавигации(Команда)
	
	Элемент = ТекущийЭлементСписокПанелиНавигации();
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТипЗнч(ТекущиеДанные.Значение) <> Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ТекущиеДанные.Значение);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

/////////////////////////////////////////////////////////////////////////////////
// Обработка изменения быстрых отборов

&НаСервере
Процедура ПриИзмененииСтатусаСервер(ОбновлятьПанельНавигации)
	
	ВзаимодействияКлиентСервер.БыстрыйОтборСписокПриИзменении(ЭтаФорма, "Статус");
	
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтветственногоСервер(ОбновлятьПанельНавигации)

	ВзаимодействияКлиентСервер.БыстрыйОтборСписокПриИзменении(ЭтаФорма,"Ответственный");

	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТипаСервер(ОбновлятьПанельНавигации = Истина)
	
	ВзаимодействияКлиентСервер.ПриИзмененииОтбораТипВзаимодействий(ЭтаФорма, ТипВзаимодействия);
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
//    Обработка активизации строк списков и панели навигации

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСписка()
	
	ИмяСписка = "Список";
	Если Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокВходящие Тогда
		ИмяСписка = "СписокВходящие";
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокИсходящие Тогда
		ИмяСписка = "СписокИсходящие";
	КонецЕсли;
	
	Если ВыборКорректен(ИмяСписка,Истина) Тогда
		
		ИмяСтраницыПредпросмотра = Элементы.СтраницыПредпросмотр.ТекущаяСтраница.Имя;
		Если ВзаимодействиеДляКоторогоСформированПредпросмотр <> Элементы[ИмяСписка].ТекущиеДанные.Ссылка Тогда
			ОтобразитьПредпросмотрВзаимодействия(Элементы[ИмяСписка].ТекущиеДанные.Ссылка, ИмяСтраницыПредпросмотра);
			Если ИмяСтраницыПредпросмотра <> Элементы.СтраницыПредпросмотр.ТекущаяСтраница.Имя Тогда
				Элементы.СтраницыПредпросмотр.ТекущаяСтраница = Элементы[ИмяСтраницыПредпросмотра];
			КонецЕсли;
		КонецЕсли;
		
		Если РасширенныйПоиск Тогда
			ЗаполнитьОписаниеНайденоПП(Элементы[ИмяСписка].ТекущиеДанные.Ссылка);
		Иначе
			ОписаниеНайденоПП = "";
		КонецЕсли;
		
	Иначе
		
		Если Элементы.СтраницыПредпросмотр.ТекущаяСтраница <> Элементы.СтраницаПредпросмотрОбычныйТекст Тогда
			Элементы.СтраницыПредпросмотр.ТекущаяСтраница = Элементы.СтраницаПредпросмотрОбычныйТекст;
		КонецЕсли;
		Предпросмотр = "";
		ПредпросмотрHTML = "<HTML><BODY></BODY></HTML>";
		ВзаимодействиеДляКоторогоСформированПредпросмотр = Неопределено;
		ОписаниеНайденоПП = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиПанелиНавигации();
	
	ИмяТекущейСтраницы = Элементы.СтраницыСписок.ТекущаяСтраница.Имя;
	
	Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт Тогда
		ТекущиеДанные = Элементы.Контакты.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Контакты",Новый Структура("Значение,ОписаниеТипов",
			                    ТекущиеДанные.Значение, ТекущиеДанные.ОписаниеТипов), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("Контакты",ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПредмет Тогда
		ТекущиеДанные = Элементы.Предметы.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Предметы",Новый Структура("Значение,ОписаниеТипов",
			                    ТекущиеДанные.Значение, ТекущиеДанные.ОписаниеТипов), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("Предметы", ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаРеквизитыПредмета Тогда
		ТекущиеДанные = Элементы.РеквизитыПредмета.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("РеквизитыПредмета",Новый Структура("Значение,Группировка",
			                    ТекущиеДанные.Значение, ТекущиеДанные.Группировка), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("РеквизитыПредмета", ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки Тогда
		ТекущиеДанные = Элементы.Папки.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Папки",Новый Структура("Значение,УчетнаяЗапись",
			                    ТекущиеДанные.Значение, ТекущиеДанные.УчетнаяЗапись), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("Папки", ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаЗакладки Тогда
		ТекущиеДанные = Элементы.Закладки.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если НЕ ТекущиеДанные.ЭтоГруппа Тогда
				ИзменитьОтборСписок("Закладки",Новый Структура("Значение", ТекущиеДанные.Ссылка), ИмяТекущейСтраницы);
			Иначе
				ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
				    ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список).Элементы,
				    "Отбор панели навигации", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаСвойства Тогда
		ТекущиеДанные = Элементы.Свойства.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Свойства",Новый Структура("Значение", ТекущиеДанные.Значение), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("Свойства", ТекущиеДанные.Значение);
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКатегории Тогда
		ТекущиеДанные = Элементы.Категории.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Категории",Новый Структура("Значение", ТекущиеДанные.Значение), ИмяТекущейСтраницы);
			СохранитьТекущееАктивноеЗначениеВНастройках("Категории", ТекущиеДанные.Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьТекущееАктивноеЗначениеВНастройках(ИмяДерева, Значение)

	Если ИмяДерева = "РеквизитыПредмета" Тогда
		ИмяДерева  =  "РеквизитыПредмета_" + ТекущееПредставлениеОтбораПоРеквизитуПредмета;
	ИначеЕсли ИмяДерева = "Свойства" Тогда
		ИмяДерева  = "Свойства_" + Строка(ТекущееСвойствоПанелиНавигации);
	КонецЕсли;
	
	НайденныеСтроки =  НастройкиДеревьевПанелиНавигации.НайтиСтроки(Новый Структура("ИмяДерева",ИмяДерева));
	Если НайденныеСтроки.Количество() = 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
		Для Инд = 1 По НайденныеСтроки.Количество()-1 Цикл
			НастройкиДеревьевПанелиНавигации.Удалить(НайденныеСтроки[инд]);
		КонецЦикла;
	Иначе
		СтрокаДереваНастроек = НастройкиДеревьевПанелиНавигации.Добавить();
		СтрокаДереваНастроек.ИмяДерева = ИмяДерева;
	КонецЕсли;
	
	СтрокаДереваНастроек.ТекущееЗначение = Значение;

КонецПроцедуры 

&НаСервере
Функция СоздатьГруппуОтбораПанелиНавигации()

	Возврат ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
	    ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список).Элементы,
	    "Отбор панели навигации",
	    ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);

КонецФункции

&НаСервере
Функция ОпределитьСтраницуСпискаДляПапки(Папка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИСТИНА КАК Входящие
	|ИЗ
	|	Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|ГДЕ
	|	ПапкиЭлектронныхПисем.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПапкиЭлектронныхПисем.Ссылка
	|			ИЗ
	|				Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|			ГДЕ
	|				ПапкиЭлектронныхПисем.ПредопределеннаяПапка
	|				И ПапкиЭлектронныхПисем.Наименование В (&СписокНаименованийИсходящие)
	|				И ПапкиЭлектронныхПисем.Владелец В
	|					(ВЫБРАТЬ
	|						ПапкиЭлектронныхПисем.Владелец
	|					ИЗ
	|						Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|					ГДЕ
	|						ПапкиЭлектронныхПисем.Ссылка = &Папка))
	|	И ПапкиЭлектронныхПисем.Ссылка = &Папка";
	
	СписокНаименованийИсходящее = Новый СписокЗначений;
	СписокНаименованийИсходящее.Добавить(НСтр("ru = 'Отправленные'"));
	СписокНаименованийИсходящее.Добавить(НСтр("ru = 'Исходящие'"));
	СписокНаименованийИсходящее.Добавить(НСтр("ru = 'Черновики'"));
	
	Запрос.УстановитьПараметр("Папка",Папка);
	Запрос.УстановитьПараметр("СписокНаименованийИсходящие", СписокНаименованийИсходящее);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Элементы.СтраницаСписокВходящие;
	Иначе
		Возврат Элементы.СтраницаСписокИсходящие;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УправлениеВидимостьюСписков(ТекущаяСтраницаСписок)

	Элементы.Список.Видимость = (ТекущаяСтраницаСписок  = Элементы.СтраницаСписокОбычная);
	Элементы.СписокИсходящие.Видимость = (ТекущаяСтраницаСписок  = Элементы.СтраницаСписокИсходящие);
	Элементы.СписокВходящие.Видимость = (ТекущаяСтраницаСписок  = Элементы.СтраницаСписокВходящие);

КонецПроцедуры

&НаСервере
Процедура ИзменитьОтборСписок(ИмяТаблицы, ДанныеДляОбработки , ИмяСтраницыСписка);
	
	СкопироватьОтборПоПериоду();
	ГруппаОтбора = СоздатьГруппуОтбораПанелиНавигации();
	
	Если ДанныеДляОбработки.Значение = Нстр("ru = 'Все'") Тогда
		
		ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список).Элементы.Удалить(ГруппаОтбора);
		Возврат;
		
	КонецЕсли;
	
	Если ИмяТаблицы <> "Папки" И Элементы.СтраницыСписок.ТекущаяСтраница <> Элементы.СтраницаСписокОбычная Тогда
		ИмяСтраницыСписка = Элементы.СтраницаСписокОбычная.Имя;
		Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокОбычная;
		УправлениеВидимостьюСписков(Элементы.СтраницаСписокОбычная);
	КонецЕсли;
	
	Если ИмяТаблицы = "Предметы" Тогда
		
		Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Значение) Тогда
			
			ИмяПоля                    = "Предмет";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
			ПравоеЗначение             = ДанныеДляОбработки.Значение;
			
		ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Прочие вопросы'") Тогда
			
			ГруппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбора.Элементы,
			                                                                      "Предмет не указан",
			                                                                      ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);

			ИмяПоля                    = "Предмет";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ПравоеЗначение             = "";
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИли, ИмяПоля,
			                                                       ВидСравненияЭлементаОтбора, ПравоеЗначение);
			
			ИмяПоля                    = "ТипПредмета";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
			СписокТипов = Новый СписокЗначений;
			СписокТипов.Добавить(Тип("ДокументСсылка.Встреча"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЗапланированноеВзаимодействие"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ТелефонныйЗвонок"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее"));
			СписокТипов.Добавить(Тип("ДокументСсылка.СообщениеSMS"));
			
			ПравоеЗначение             = СписокТипов;
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИли, ИмяПоля,
			                                                       ВидСравненияЭлементаОтбора, ПравоеЗначение);
			
			Возврат;
			
		Иначе
			
			ИмяПоля                   = "ТипПредмета";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
			ПравоеЗначение             = ДанныеДляОбработки.ОписаниеТипов.Типы()[0];
			
		КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "РеквизитыПредмета" Тогда
		
		НеобходимОтборПоТипамПредметов = Ложь;
		
		СтруктураОписание = ПолучитьСтруктуруОписанияПоПредставлению(ТекущееПредставлениеОтбораПоРеквизитуПредмета);
		
		Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Группировка) И 
			ТипЗнч(ДанныеДляОбработки.Группировка) = ТипЗнч(ДанныеДляОбработки.Значение) Тогда
			
			ИмяПоля                    = "Предмет." + СтруктураОписание.ИмяРеквизита;
			ВидСравненияЭлементаОтбора = ?(ДанныеДляОбработки.Группировка.Пустая(), 
			                               ВидСравненияКомпоновкиДанных.НеЗаполнено, ВидСравненияКомпоновкиДанных.Равно);
			ПравоеЗначение             = ДанныеДляОбработки.Группировка;
			
			НеобходимОтборПоТипамПредметов = Истина;
			
		ИначеЕсли ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Значение) Тогда
			
			ИмяПоля                    = "Предмет";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
			ПравоеЗначение             = ДанныеДляОбработки.Значение;
			
		ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Прочие вопросы'") Тогда
			
			ГруппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
				ГруппаОтбора.Элементы,
				"Предмет не указан",
				ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);

			ИмяПоля                    = "Предмет";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ПравоеЗначение             = "";
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИли,ИмяПоля,
			                                                       ВидСравненияЭлементаОтбора,ПравоеЗначение);
			
			ИмяПоля                    = "ТипПредмета";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
			СписокТипов = Новый СписокЗначений;
			СписокТипов.Добавить(Тип("ДокументСсылка.Встреча"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЗапланированноеВзаимодействие"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ТелефонныйЗвонок"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее"));
			
			ПравоеЗначение             = СписокТипов;
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИли, ИмяПоля,
			                                                       ВидСравненияЭлементаОтбора, ПравоеЗначение);
			
			Возврат;
			
		Иначе
			
			ИмяПоля                    = "Предмет." + СтруктураОписание.ИмяРеквизита;
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ПравоеЗначение             = ДанныеДляОбработки.Группировка;
			
			НеобходимОтборПоТипамПредметов = Ложь;
			
		КонецЕсли;
		
		Если НеобходимОтборПоТипамПредметов Тогда
		
			ИмяПоляТипы                    = "ТипПредмета";
			ВидСравненияЭлементаОтбораТипы = ВидСравненияКомпоновкиДанных.ВСписке;
			СписокТипов = Новый СписокЗначений;
			Для каждого ЭлементМассива Из СтруктураОписание.МассивТипов Цикл
				СписокТипов.Добавить(Тип(ЭлементМассива));
			КонецЦикла;
			ПравоеЗначениеТипы             = СписокТипов;
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоляТипы,
			                                                       ВидСравненияЭлементаОтбораТипы, ПравоеЗначениеТипы);
			
		КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "Папки" Тогда
		
			ИмяПоля                    = "Тип";
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
			СписокТипов = Новый СписокЗначений;
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее"));
			ПравоеЗначение             = СписокТипов;
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоля,
			                                                       ВидСравненияЭлементаОтбора, ПравоеЗначение);
			
			Если ТипЗнч(ДанныеДляОбработки.Значение) = Тип("СправочникСсылка.ПапкиЭлектронныхПисем") Тогда
				
				ИмяПоля                    = "Папка";
				ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
				ПравоеЗначение             = ДанныеДляОбработки.Значение;
				
				СтраницаСписок = ОпределитьСтраницуСпискаДляПапки(ДанныеДляОбработки.Значение);
				Если Элементы.СтраницыСписок.ТекущаяСтраница <> СтраницаСписок Тогда
					Элементы.СтраницыСписок.ТекущаяСтраница = СтраницаСписок;
					УправлениеВидимостьюСписков(СтраницаСписок);
				КонецЕсли;
				
			Иначе
				
				ИмяПоля                    = "УчетнаяЗапись";
				ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
				ПравоеЗначение             = ДанныеДляОбработки.Значение;
				
				Если Элементы.СтраницыСписок.ТекущаяСтраница <> Элементы.СтраницаСписокОбычная Тогда
					Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокОбычная;
					УправлениеВидимостьюСписков(Элементы.СтраницаСписокОбычная);
				КонецЕсли;
				
			КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "Контакты" Тогда
		
		ИмяПоля                    = "Ссылка";
		ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
		ПравоеЗначение             = ПолучитьВзаимодействияПоКонтактам(ДанныеДляОбработки);
		
	ИначеЕсли ИмяТаблицы = "Свойства" Тогда
		
		ИмяПоля = "Ссылка.[" + ТекущееСвойствоПанелиНавигации.Наименование + "]";
		Если ТипЗнч(ДанныеДляОбработки.Значение) = Тип("Строка") И 
			ДанныеДляОбработки.Значение = Нстр("ru = 'Не указан'") Тогда
			
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ПравоеЗначение             = "";
			
		Иначе
			
			ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
			ПравоеЗначение             = ДанныеДляОбработки.Значение;
			
		КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "Категории" Тогда
		
		ИмяПоля =  "Ссылка.[" + Строка(ДанныеДляОбработки.Значение) + "]";
		ВидСравненияЭлементаОтбора = ВидСравненияКомпоновкиДанных.Равно;
		ПравоеЗначение             = Истина;
		
	ИначеЕсли ИмяТаблицы = "Закладки" Тогда
		
		НастройкаКомпоновки = ДанныеДляОбработки.Значение.КомпоновщикНастроек.Получить();
		СхемаКомпоновки = ЖурналыДокументов.Взаимодействия.ПолучитьМакет("СхемаОтборВзаимодействия");
		АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки ,УникальныйИдентификатор);
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКомпоновки);
		КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
		
		СкопироватьОтбор(ГруппаОтбора,КомпоновщикНастроек.Настройки.Отбор);
		
		Возврат;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора ,ИмяПоля, 
	                                                       ВидСравненияЭлементаОтбора, ПравоеЗначение);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВзаимодействияПоКонтактам(СтруктураКонтакты, ЗначениеРеквизитаДопОтбора = Неопределено, ИмяРеквизитаДопОтбора = "")
	
	ТекстУсловия = "";
	ТекстУсловияАбонент= "";
	ТекстУсловияОтправитель= "";
	ТекстУсловияКонтакт= "";
	ТекстУсловияПоПредставлению = "";
	Запрос = Новый Запрос;
	
	Если СтруктураКонтакты.Значение = НСтр("ru = 'Контакт не подобран'") Тогда
		
		ТекстУсловия = ТекстУсловия + "ГДЕ
		|	ДокументВзаимодействий.%ИмяРеквизита% = НЕОПРЕДЕЛЕНО ";
		
	ИначеЕсли ОбщегоНазначения.ЗначениеСсылочногоТипа(СтруктураКонтакты.Значение) Тогда
		
		ТекстУсловия = "ГДЕ
		|	ДокументВзаимодействий.%ИмяРеквизита% В ИЕРАРХИИ(&Контакт) ";
		
		Запрос.УстановитьПараметр("Контакт",СтруктураКонтакты.Значение);
		
	Иначе 
		
		ТипКонтакта =  СтруктураКонтакты.ОписаниеТипов.ПривестиЗначение(Неопределено);
		
		Если ТипКонтакта <> Неопределено Тогда
			ИмяМетаданных = ТипКонтакта.Метаданные().ПолноеИмя();
			ТекстУсловия = ТекстУсловия + "ГДЕ
			|	ТИПЗНАЧЕНИЯ(ДокументВзаимодействий.%ИмяРеквизита%) = ТИП("+ИмяМетаданных+") ";
		Иначе
			
			ТекстУсловия = "ГДЕ
			|	ДокументВзаимодействий.%ИмяРеквизитаПредставление% = &ПредставлениеКонтакта И ДокументВзаимодействий.%ИмяРеквизита% = НЕОПРЕДЕЛЕНО ";
			Запрос.УстановитьПараметр("ПредставлениеКонтакта",СтруктураКонтакты.Значение);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстУсловияПоОтборуСписка =  ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловия = ТекстУсловия + " И (ДокументВзаимодействий.Ссылка В
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ОтборСписка.Ссылка
		|	ИЗ
		|		ОтборСписка КАК ОтборСписка))"
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстУсловия) Тогда
		
		Если ЗначениеРеквизитаДопОтбора <> Неопределено Тогда
			ТекстУсловия = ТекстУсловия + " И ДокументВзаимодействий.Ссылка." 
				+ ИмяРеквизитаДопОтбора + " <> &ЗначениеДопОтбора";
			Запрос.УстановитьПараметр("ЗначениеДопОтбора",ЗначениеРеквизитаДопОтбора);
		КонецЕсли;
		
		ТекстУсловияАбонент     = СтрЗаменить(ТекстУсловия,"%ИмяРеквизита%","АбонентКонтакт");
		ТекстУсловияАбонент     = СтрЗаменить(ТекстУсловияАбонент,
		                                      "%ИмяРеквизитаПредставление%","АбонентПредставление");
		
		ТекстУсловияОтправитель = СтрЗаменить(ТекстУсловия,
		                                      "%ИмяРеквизита%","ОтправительКонтакт");
		ТекстУсловияОтправитель = СтрЗаменить(ТекстУсловияОтправитель,
		                                      "%ИмяРеквизитаПредставление%","ОтправительПредставление");
		
		ТекстУсловияКонтакт     = СтрЗаменить(ТекстУсловия,
		                                      "%ИмяРеквизита%","Контакт");
		ТекстУсловияКонтакт     = СтрЗаменить(ТекстУсловияКонтакт,
		                                      "%ИмяРеквизитаПредставление%","ПредставлениеКонтакта");
		
		ТекстУсловия            = СтрЗаменить(ТекстУсловия,"%ИмяРеквизита%","Контакт");
		ТекстУсловия            = СтрЗаменить(ТекстУсловия,"%ИмяРеквизитаПредставление%","Представление");
		
	КонецЕсли;
	
		
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|		ДокументВзаимодействий.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ЗапланированноеВзаимодействие.Участники КАК ДокументВзаимодействий
	|	" + ТекстУсловияКонтакт  + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументВзаимодействий.Ссылка
	|	ИЗ
	|		Документ.Встреча.Участники КАК ДокументВзаимодействий
	|	" + ТекстУсловияКонтакт + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументВзаимодействий.Ссылка
	|	ИЗ
	|		Документ.ТелефонныйЗвонок КАК ДокументВзаимодействий
	|	" + ТекстУсловияАбонент +"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументВзаимодействий.Ссылка
	|	ИЗ
	|		Документ.ЭлектронноеПисьмоВходящее КАК ДокументВзаимодействий
	|	" + ТекстУсловияОтправитель + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументВзаимодействий.Ссылка
	|	ИЗ
	|		Документ.ЭлектронноеПисьмоИсходящее.ПолучателиПисьма КАК ДокументВзаимодействий
	|	" + ТекстУсловия +"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДокументВзаимодействий.Ссылка
	|	ИЗ
	|		Документ.ЭлектронноеПисьмоИсходящее.ПолучателиКопий КАК ДокументВзаимодействий 
	|	" + ТекстУсловия + "
	|";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура СкопироватьОтборПоПериоду()

	Если Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокОбычная Тогда
		
		Элементы.СписокВходящие.Период  = Элементы.Список.Период;
		Элементы.СписокИсходящие.Период = Элементы.Список.Период;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокВходящие Тогда
		
		Элементы.Список.Период          = Элементы.СписокВходящие.Период;
		Элементы.СписокИсходящие.Период = Элементы.СписокВходящие.Период;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокИсходящие Тогда
		
		Элементы.Список.Период         = Элементы.СписокИсходящие.Период;
		Элементы.СписокВходящие.Период = Элементы.СписокИсходящие.Период;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтобразитьПредпросмотрВзаимодействия(СсылкаДокументВзаимодействий, ИмяТекущейСтраницы)
	
	Если ТипЗнч(СсылкаДокументВзаимодействий) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		ИмяТекущейСтраницы = Элементы.СтраницаПредпросмотрHTML.Имя;
		ПредпросмотрHTML = Взаимодействия.СформироватьТекстHTMLДляВходящегоПисьма(СсылкаДокументВзаимодействий, Ложь);
		Предпросмотр = "";
		
	ИначеЕсли ТипЗнч(СсылкаДокументВзаимодействий) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		
		ИмяТекущейСтраницы = Элементы.СтраницаПредпросмотрHTML.Имя;
		ПредпросмотрHTML = Взаимодействия.СформироватьТекстHTMLДляИсходящегоПисьма(СсылкаДокументВзаимодействий, Ложь);
		Предпросмотр = "";
		
	Иначе
		
		ИмяТекущейСтраницы = Элементы.СтраницаПредпросмотрОбычныйТекст.Имя;
		Если ТипЗнч(СсылкаДокументВзаимодействий) = Тип("ДокументСсылка.СообщениеSMS") Тогда
			Предпросмотр = СсылкаДокументВзаимодействий.ТекстСообщения;
		Иначе
			Предпросмотр = СсылкаДокументВзаимодействий.Описание;
		КонецЕсли;
		ПредпросмотрHTML = "<HTML><BODY></BODY></HTML>";
		
	КонецЕсли;
	
	ВзаимодействиеДляКоторогоСформированПредпросмотр = СсылкаДокументВзаимодействий;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
//    Переключение и заполнение панелей навигации

&НаСервере
Процедура ПереключитьПанельНавигацииСервер(ИмяКоманды)
	
	Если ИмяКоманды = "УстановитьВариантНавигацииПоКонтакту" Тогда
		ЗаполнитьДеревоКонтактов();
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт;
	ИначеЕсли ИмяКоманды = "УстановитьВариантНавигацииПоПредмету" Тогда
		ЗаполнитьДеревоПредметов();
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПредмет;
	ИначеЕсли ИмяКоманды = "УстановитьВариантНавигацииПоПапкам" Тогда
		ЗаполнитьДеревоПапок();
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки;
	ИначеЕсли ИмяКоманды = "УстановитьВариантНавигацииПоЗакладкам" Тогда
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаЗакладки;
	ИначеЕсли ИмяКоманды = "УстановитьВариантПоКатегориям" Тогда
		ЗаполнитьТаблицуКатегорий();
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКатегории;
	ИначеЕсли Найти(ИмяКоманды,"УстановитьВариантПоСвойству") > 0 Тогда
		ЗаполнитьДеревоСвойств(ИмяКоманды);
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаСвойства;
	ИначеЕсли Найти(ИмяКоманды,"УстановитьВариантПоРеквизитуПредмета") > 0 Тогда
		ЗаполнитьДеревоРеквизитовПредмета(ИмяКоманды);
		Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаРеквизитыПредмета;
	КонецЕсли;
	
	ИмяТекущейПанелиНавигации = Элементы.СтраницыПанелиНавигации.ТекущаяСтраница.Имя;
	УправлениеВидимостьюПриПереключенииПанелиНавигации();
	УстановитьЗаголовокВидаПанелиНавигации();
	ПослеЗаполненияПанелиНавигации();

КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюПриПереключенииПанелиНавигации();
	
	ЭтоПапки = (Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки);
	
	Элементы.СписокКонтекстноеМенюПеренестиВПапку.Видимость          = ЭтоПапки;
	Элементы.СписокКонтекстноеМенюПеренестиВПапкуВходящие.Видимость  = ЭтоПапки;
	Элементы.СписокКонтекстноеМенюПеренестиВПапкуИсходящие.Видимость = ЭтоПапки;
	
	Элементы.СписокСоздатьВстречу.Видимость                       = НЕ ЭтоПапки;
	Элементы.СписокСоздатьЗапланированноеВзаимодействие.Видимость = НЕ ЭтоПапки;
	Элементы.СписокСоздатьТелефонныйЗвонок.Видимость              = НЕ ЭтоПапки;
	Элементы.СписокСоздатьСообщениеSMS.Видимость                  = НЕ ЭтоПапки;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокВидаПанелиНавигации()
	
	Для каждого ПодчиненныйЭлемент Из Элементы.ВыборВариантаНавигации.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ПодчиненныйЭлемент) = Тип("КнопкаФормы") Тогда
			ПодчиненныйЭлемент.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаСвойства Тогда
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По'") + " " + ПредставлениеТекущегоСвойства;
		НайденныеСтроки = ТаблицаДопРеквизитовСвойств.НайтиСтроки(Новый Структура("ДопРеквизитСведение",
		                                                          ТекущееСвойствоПанелиНавигации));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы["ДопКнопкаВыбораВариантаНавигацииСвойства_" + Строка(НайденныеСтроки[0].ПорядковыйНомер)].Пометка = Истина;
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаРеквизитыПредмета Тогда
		
		СтруктураОписание = ПолучитьСтруктуруОписанияПоПредставлению(ТекущееПредставлениеОтбораПоРеквизитуПредмета);
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По'") + " " + СтруктураОписание.ПредставлениеПо;
		НомерЭлементаОписанияВМассиве = 
			ПолучитьНомерОписанияВМассивеПоПредставлению(ТекущееПредставлениеОтбораПоРеквизитуПредмета);
			
		Если НомерЭлементаОписанияВМассиве <> Неопределено Тогда
			Элементы["ДопКнопкаВыбораВариантаНавигацииРеквизиты_" + Строка(НомерЭлементаОписанияВМассиве)].Пометка = Истина;
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаЗакладки Тогда
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По закладкам'");
		Элементы.УстановитьВариантНавигацииПоЗакладкам.Пометка = Истина;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПредмет Тогда
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По предметам'");
		Элементы.УстановитьВариантНавигацииПоПредмету.Пометка = Истина;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт Тогда
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По контактам'");
		Элементы.УстановитьВариантНавигацииПоКонтакту.Пометка = Истина;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки Тогда
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По папкам электронных писем'");
		Элементы.УстановитьВариантНавигацииПоПапкам.Пометка = Истина;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКатегории Тогда
		
		Элементы.ВыборВариантаНавигации.Заголовок = НСтр("ru = 'По категориям'");
		Элементы.ДопКнопкаВыбораВариантаНавигацииКатегории.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуВсе(ДанныеФормыКоллекция, НомерКартинки = 0)
	
	Если ТипЗнч(ДанныеФормыКоллекция) = Тип("ДанныеФормыДерево") Тогда
		НоваяСтрока = ДанныеФормыКоллекция.ПолучитьЭлементы().Добавить();
	Иначе
		НоваяСтрока = ДанныеФормыКоллекция.Добавить();
	КонецЕсли;
	
		НоваяСтрока.Значение = Нстр("ru = 'Все'");
		НоваяСтрока.Представление = Нстр("ru = 'Все'");
		НоваяСтрока.НомерКартинки = НомерКартинки;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаСервере
Функция ЗаполнитьДеревоСвойств(ИмяКоманды = "")
	
	ЗначениеТекущейСтроки = ПолучитьЗначениеТекущейСтрокиФормыДерева("Свойства");
	
	Свойства.ПолучитьЭлементы().Очистить();
	
	Если Не ПустаяСтрока(ИмяКоманды) Тогда
		
		НомерСвойстваВТаблице = Число(Прав(ИмяКоманды, 1));
		
		НайденныеСтроки = ТаблицаДопРеквизитовСвойств.НайтиСтроки(Новый Структура("ПорядковыйНомер", НомерСвойстваВТаблице));
		ТекущееСвойствоПанелиНавигации                   = НайденныеСтроки[0].ДопРеквизитСведение;
		ТекущееСвойствоПанелиНавигацииЯвляетсяРеквизитом = НайденныеСтроки[0].ЭтоРеквизит;
		ПредставлениеТекущегоСвойства                    = НайденныеСтроки[0].Представление;
		
	КонецЕсли;
	
	Элементы.СвойстваПредставление.Заголовок  = ПредставлениеТекущегоСвойства;
	
	Запрос = Новый Запрос;
	ТекстУсловия = "";
	
	ТекстУсловияПоОтборуСписка =  ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловия = " ГДЕ
			|(ДокументВзаимодействий.Ссылка В
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		ОтборСписка.Ссылка
			|	ИЗ
			|		ОтборСписка КАК ОтборСписка))";
	
	КонецЕсли;
	
	Если ТекущееСвойствоПанелиНавигацииЯвляетсяРеквизитом Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Значение КАК Значение,
		|	СУММА(ВложенныйЗапрос.НеРассмотрено) КАК НеРассмотрено,
		|	1 КАК НомерКартинки,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Значение) КАК Представление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка КАК Ссылка,
		|		ЕСТЬNULL(ДокументВзаимодействийДополнительныеРеквизиты.Значение, ""Не указан"") КАК Значение,
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК НеРассмотрено
		|	ИЗ
		|		Документ.ЭлектронноеПисьмоИсходящее КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ДополнительныеРеквизиты КАК ДокументВзаимодействийДополнительныеРеквизиты
		|			ПО (ДокументВзаимодействийДополнительныеРеквизиты.Ссылка = ДокументВзаимодействий.Ссылка)
		|				И (ДокументВзаимодействийДополнительныеРеквизиты.Свойство = &Свойство)
		|		" + ТекстУсловия + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка,
		|		ЕСТЬNULL(ДокументВзаимодействийДополнительныеРеквизиты.Значение, ""Не указан""),
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|	ИЗ
		|		Документ.ЭлектронноеПисьмоВходящее КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее.ДополнительныеРеквизиты КАК ДокументВзаимодействийДополнительныеРеквизиты
		|			ПО (ДокументВзаимодействийДополнительныеРеквизиты.Ссылка = ДокументВзаимодействий.Ссылка)
		|				И (ДокументВзаимодействийДополнительныеРеквизиты.Свойство = &Свойство)
		|		" + ТекстУсловия + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка,
		|		ЕСТЬNULL(ДокументВзаимодействийДополнительныеРеквизиты.Значение, ""Не указан""),
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|	ИЗ
		|		Документ.Встреча КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Встреча.ДополнительныеРеквизиты КАК ДокументВзаимодействийДополнительныеРеквизиты
		|			ПО (ДокументВзаимодействийДополнительныеРеквизиты.Ссылка = ДокументВзаимодействий.Ссылка)
		|				И (ДокументВзаимодействийДополнительныеРеквизиты.Свойство = &Свойство)
		|		" + ТекстУсловия + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка,
		|		ЕСТЬNULL(ДокументВзаимодействийДополнительныеРеквизиты.Значение, ""Не указан""),
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|	ИЗ
		|		Документ.ТелефонныйЗвонок КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТелефонныйЗвонок.ДополнительныеРеквизиты КАК ДокументВзаимодействийДополнительныеРеквизиты
		|			ПО (ДокументВзаимодействийДополнительныеРеквизиты.Ссылка = ДокументВзаимодействий.Ссылка)
		|				И (ДокументВзаимодействийДополнительныеРеквизиты.Свойство = &Свойство)
		|		" + ТекстУсловия + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка,
		|		ЕСТЬNULL(ДокументВзаимодействийДополнительныеРеквизиты.Значение, ""Не указан""),
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|	ИЗ
		|		Документ.ЗапланированноеВзаимодействие КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗапланированноеВзаимодействие.ДополнительныеРеквизиты КАК ДокументВзаимодействийДополнительныеРеквизиты
		|			ПО (ДокументВзаимодействийДополнительныеРеквизиты.Ссылка = ДокументВзаимодействий.Ссылка)
		|				И (ДокументВзаимодействийДополнительныеРеквизиты.Свойство = &Свойство)
		|		" + ТекстУсловия + " ) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Значение
		|
		|УПОРЯДОЧИТЬ ПО
		|Значение
		|
		|ИТОГИ ПО
		|Значение ИЕРАРХИЯ";
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Значение,
		|	СУММА(ВложенныйЗапрос.НеРассмотрено) КАК НеРассмотрено,
		|	1 КАК НомерКартинки,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Значение) КАК Представление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДокументВзаимодействий.Ссылка КАК Ссылка,
		|		ВЫБОР
		|			КОГДА ДокументВзаимодействий.Рассмотрено
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК НеРассмотрено,
		|		ЕСТЬNULL(ДополнительныеСведения.Значение, ""Не указан"") КАК Значение
		|	ИЗ
		|		ЖурналДокументов.Взаимодействия КАК ДокументВзаимодействий
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|			ПО ДокументВзаимодействий.Ссылка = ДополнительныеСведения.Объект
		|				И (ДополнительныеСведения.Свойство = &Свойство)
		|		" + ТекстУсловия + " ) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Значение
		|
		|УПОРЯДОЧИТЬ ПО
		|Значение
		|
		|ИТОГИ ПО
		|Значение ИЕРАРХИЯ";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Свойство",ТекущееСвойствоПанелиНавигации);
	
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СтрокиПервыйУровень = Свойства.ПолучитьЭлементы();
	
	Для Каждого Строка ИЗ Дерево.Строки Цикл
		СтрокаСвойства =  СтрокиПервыйУровень.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСвойства, Строка);
		СтрокаСвойства.НомерКартинки = ?(ТипЗнч(СтрокаСвойства.Значение) = Тип("Строка"),0,1);
		СтрокаСвойства.Представление = Строка(СтрокаСвойства.Значение) + 
			?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено,
				"", " (" + Строка(Строка.НеРассмотрено) + ")");
		ДобавитьСтрокиВДеревоНавигации(Строка, СтрокаСвойства, Истина, 1);
	КонецЦикла;
	
	СтрокаВсе = ДобавитьСтрокуВсе(Свойства, 2);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоПредметов()

	Предметы.ПолучитьЭлементы().Очистить();
	Запрос = Новый Запрос;
	ТекстУсловия = "";
	
	ТекстУсловияПоОтборуСписка =  ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловия = " ГДЕ
			|(Взаимодействия.Ссылка В
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		ОтборСписка.Ссылка
			|	ИЗ
			|		ОтборСписка КАК ОтборСписка))";
	
	КонецЕсли;
	
	Если ПоказыватьВсеАктивныеПредметы Тогда
		
		ТекстЗапросаАктивныеПредметы = "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(АктивныеПредметыВзаимодействий.Предмет),
		|	АктивныеПредметыВзаимодействий.Предмет,
		|	0
		|ИЗ
		|	РегистрСведений.АктивныеПредметыВзаимодействий КАК АктивныеПредметыВзаимодействий
		|ГДЕ
		|	(НЕ АктивныеПредметыВзаимодействий.Предмет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ПредметыПапкиВзаимодействий.Предмет
		|				ИЗ
		|					РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий))
		|";
		
	Иначе
		
		ТекстЗапросаАктивныеПредметы = "";
		
	КонецЕсли;
	
	ТекстСоединениеТаблицыПредметов = "";
	МассивВозможныхПредметов = ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивТиповПредметов();
	Для каждого ЭлементМассиваПредметов Из МассивВозможныхПредметов Цикл
		
		ИмяТаблицы = СтрЗаменить(ЭлементМассиваПредметов,"Ссылка","");
		
		Если НЕ ПравоДоступа("Чтение",Метаданные.НайтиПоПолномуИмени(ИмяТаблицы)) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСоединениеТаблицыПредметов = ТекстСоединениеТаблицыПредметов + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПредметыНеРассмотрено.Тип,
		|	ПредметыНеРассмотрено.Значение,
		|	ПредметыНеРассмотрено.НеРассмотрено
		|ИЗ
		|	ПредметыНеРассмотрено КАК ПредметыНеРассмотрено
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ИмяТаблицы + " КАК ТаблицаПредмета
		|		ПО ПредметыНеРассмотрено.Значение = ТаблицаПредмета.Ссылка
		|ГДЕ
		|	ПредметыНеРассмотрено.Значение ССЫЛКА " + ИмяТаблицы + "
		|";
		
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + " ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ПредметыВзаимодействий.Предмет ЕСТЬ NULL 
	|				ИЛИ ПредметыВзаимодействий.Предмет = НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтрокаПредметНеУказан
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.Встреча)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЗапланированноеВзаимодействие)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ТелефонныйЗвонок)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоИсходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоВходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.СообщениеSMS)
	|					ТОГДА &СтрокаПредметНеУказан
	|				ИНАЧЕ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет)
	|			КОНЕЦ
	|	КОНЕЦ КАК Тип,
	|	ЕСТЬNULL(ПредметыВзаимодействий.Предмет, НЕОПРЕДЕЛЕНО) КАК Значение,
	|	СУММА(ВЫБОР
	|			КОГДА Взаимодействия.Рассмотрено
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК НеРассмотрено
	|ПОМЕСТИТЬ ПредметыНеРассмотрено
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыВзаимодействий
	|		ПО Взаимодействия.Ссылка = ПредметыВзаимодействий.Взаимодействие " + ТекстУсловия + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ПредметыВзаимодействий.Предмет, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР
	|		КОГДА ПредметыВзаимодействий.Предмет ЕСТЬ NULL 
	|				ИЛИ ПредметыВзаимодействий.Предмет = НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтрокаПредметНеУказан
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.Встреча)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЗапланированноеВзаимодействие)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ТелефонныйЗвонок)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоИсходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоВходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.СообщениеSMS)
	|					ТОГДА &СтрокаПредметНеУказан
	|				ИНАЧЕ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет)
	|			КОНЕЦ
	|	КОНЕЦ " + ТекстЗапросаАктивныеПредметы +"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПредметыНеРассмотрено.Тип,
	|	ПредметыНеРассмотрено.Значение,
	|	ПредметыНеРассмотрено.НеРассмотрено
	|ПОМЕСТИТЬ ПредметыРассмотрено
	|ИЗ
	|	ПредметыНеРассмотрено КАК ПредметыНеРассмотрено
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ПО ПредметыНеРассмотрено.Значение = Взаимодействия.Ссылка
	|ГДЕ
	|	(ПредметыНеРассмотрено.Значение ССЫЛКА Документ.Встреча
	|			ИЛИ ПредметыНеРассмотрено.Значение ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|			ИЛИ ПредметыНеРассмотрено.Значение ССЫЛКА Документ.ТелефонныйЗвонок
	|			ИЛИ ПредметыНеРассмотрено.Значение ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
	|			ИЛИ ПредметыНеРассмотрено.Значение ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
	|			ИЛИ ПредметыНеРассмотрено.Значение ССЫЛКА Документ.СообщениеSMS)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредметыНеРассмотрено.Тип,
	|	ПредметыНеРассмотрено.Значение,
	|	ПредметыНеРассмотрено.НеРассмотрено
	|ИЗ
	|	ПредметыНеРассмотрено КАК ПредметыНеРассмотрено
	|ГДЕ
	|	ПредметыНеРассмотрено.Значение = НЕОПРЕДЕЛЕНО " + ТекстСоединениеТаблицыПредметов + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПредметыРассмотрено.Тип КАК Тип,
	|	ПредметыРассмотрено.Значение КАК Значение,
	|	ПредметыРассмотрено.НеРассмотрено,
	|	Взаимодействия.Тема,
	|	Взаимодействия.Дата,
	|	ВЫБОР КОГДА ПредметыРассмотрено.Значение ЕСТЬ NULL 
	|			ИЛИ ПредметыРассмотрено.Значение = НЕОПРЕДЕЛЕНО
	|		ТОГДА 7
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.Встреча) ТОГДА 1
	|					КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.ЗапланированноеВзаимодействие) ТОГДА 2
	|					КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.ТелефонныйЗвонок) ТОГДА 3
	|					КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.ЭлектронноеПисьмоИсходящее) ТОГДА 5
	|					КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.ЭлектронноеПисьмоВходящее) ТОГДА 4
	|					КОГДА ТИПЗНАЧЕНИЯ(ПредметыРассмотрено.Значение) = ТИП(Документ.СообщениеSMS) ТОГДА 9
	|			ИНАЧЕ 7
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерКартинки
	|ИЗ
	|	ПредметыРассмотрено КАК ПредметыРассмотрено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ПО ПредметыРассмотрено.Значение = Взаимодействия.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Тип,
	|	Значение УБЫВ
	|ИТОГИ 
	|	СУММА(НеРассмотрено)
	|ПО
	|	Тип,
	|	Значение ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("СтрокаПредметНеУказан", НСтр("ru = 'Прочие вопросы'"));
	
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СтрокиПервыйУровень = Предметы.ПолучитьЭлементы();
	
	Для Каждого Строка ИЗ Дерево.Строки Цикл
		
		СтрокаТип = СтрокиПервыйУровень.Добавить();
		Если ТипЗнч(Строка.Тип) = Тип("Строка") Тогда
			СтрокаТип.Значение = Строка.Тип;
			СтрокаТип.НомерКартинки = 0;
		Иначе
			МетаданныеПредмета = Метаданные.НайтиПоТипу(Строка.Тип);
			СтрокаТип.Значение = ?(ПустаяСтрока(МетаданныеПредмета.ПредставлениеСписка),
				МетаданныеПредмета.Синоним, МетаданныеПредмета.ПредставлениеСписка);
			СтрокаТип.НомерКартинки = 6;
		КонецЕсли;
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Строка.Тип);
		СтрокаТип.ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		СтрокаТип.НеРассмотрено = Строка.НеРассмотрено;
		СтрокаТип.Представление = Строка(СтрокаТип.Значение) + 
			?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено, 
				"", " (" + Строка(Строка.НеРассмотрено) + ")");
		
		ДобавитьСтрокиВДеревоНавигации(Строка, СтрокаТип, Истина, 7);
		
	КонецЦикла;
	
	СтрокаВсе = ДобавитьСтрокуВсе(Предметы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКатегорий()
	
	Категории.Очистить();

	Запрос = Новый Запрос;
	ТекстУсловияРеквизиты = "";
	ТекстУсловияСведения  = "";
	
	ТекстУсловияПоОтборуСписка = ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловияРеквизиты = " И
			|ВзаимодействиеДополнительныеРеквизиты.Ссылка В
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		ОтборСписка.Ссылка
			|	ИЗ
			|		ОтборСписка КАК ОтборСписка)";
		
		ТекстУсловияСведения = " И
			|ДополнительныеСведения.Объект В
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		ОтборСписка.Ссылка
			|	ИЗ
			|		ОтборСписка КАК ОтборСписка)";
	
	КонецЕсли;
		
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СвойстваТипаБулево.ДопРеквизитСведение КАК Свойство,
	|	СвойстваТипаБулево.ЭтоРеквизит
	|ПОМЕСТИТЬ СвойстваТипаБулево
	|ИЗ
	|	&СвойстваТипаБулево КАК СвойстваТипаБулево
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Свойство) КАК Представление,
	|	ВложенныйЗапрос.Свойство КАК Значение,
	|	СУММА(ВложенныйЗапрос.НеРассмотрено) КАК НеРассмотрено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство КАК Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК НеРассмотрено
	|	ИЗ
	|		Документ.Встреча.ДополнительныеРеквизиты КАК ВзаимодействиеДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Встреча КАК Взаимодействие
	|			ПО ВзаимодействиеДополнительныеРеквизиты.Ссылка = Взаимодействие.Ссылка
	|	ГДЕ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					СвойстваТипаБулево.ЭтоРеквизит) " + ТекстУсловияРеквизиты + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ)
	|	ИЗ
	|		Документ.ТелефонныйЗвонок.ДополнительныеРеквизиты КАК ВзаимодействиеДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТелефонныйЗвонок КАК Взаимодействие
	|			ПО ВзаимодействиеДополнительныеРеквизиты.Ссылка = Взаимодействие.Ссылка
	|	ГДЕ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					СвойстваТипаБулево.ЭтоРеквизит) " + ТекстУсловияРеквизиты + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ)
	|	ИЗ
	|		Документ.ЗапланированноеВзаимодействие.ДополнительныеРеквизиты КАК ВзаимодействиеДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапланированноеВзаимодействие КАК Взаимодействие
	|			ПО ВзаимодействиеДополнительныеРеквизиты.Ссылка = Взаимодействие.Ссылка
	|	ГДЕ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					СвойстваТипаБулево.ЭтоРеквизит) " + ТекстУсловияРеквизиты + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ)
	|	ИЗ
	|		Документ.ЭлектронноеПисьмоВходящее.ДополнительныеРеквизиты КАК ВзаимодействиеДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее КАК Взаимодействие
	|			ПО ВзаимодействиеДополнительныеРеквизиты.Ссылка = Взаимодействие.Ссылка
	|	ГДЕ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					СвойстваТипаБулево.ЭтоРеквизит) " + ТекстУсловияРеквизиты + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ)
	|	ИЗ
	|		Документ.ЭлектронноеПисьмоИсходящее.ДополнительныеРеквизиты КАК ВзаимодействиеДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее КАК Взаимодействие
	|			ПО ВзаимодействиеДополнительныеРеквизиты.Ссылка = Взаимодействие.Ссылка
	|	ГДЕ
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					СвойстваТипаБулево.ЭтоРеквизит) " + ТекстУсловияРеквизиты + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаимодействиеДополнительныеРеквизиты.Свойство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеСведения.Свойство,
	|		СУММА(ВЫБОР
	|				КОГДА Взаимодействие.Рассмотрено
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ)
	|	ИЗ
	|		РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействие
	|			ПО ДополнительныеСведения.Объект = Взаимодействие.Ссылка
	|	ГДЕ
	|		ДополнительныеСведения.Свойство В
	|				(ВЫБРАТЬ
	|					СвойстваТипаБулево.Свойство
	|				ИЗ
	|					СвойстваТипаБулево КАК СвойстваТипаБулево
	|				ГДЕ
	|					(НЕ СвойстваТипаБулево.ЭтоРеквизит))
	|		И (ДополнительныеСведения.Объект ССЫЛКА Документ.Встреча
	|				ИЛИ ДополнительныеСведения.Объект ССЫЛКА Документ.ТелефонныйЗвонок
	|				ИЛИ ДополнительныеСведения.Объект ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
	|				ИЛИ ДополнительныеСведения.Объект ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
	|				ИЛИ ДополнительныеСведения.Объект ССЫЛКА Документ.ЗапланированноеВзаимодействие) " + ТекстУсловияСведения + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДополнительныеСведения.Свойство) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Свойство";
	
	Запрос.УстановитьПараметр("СвойстваТипаБулево", ТаблицаДопРеквизитовСвойствТипаБулево.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Категории.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.НомерКартинки = 0;
		НоваяСтрока.Представление = Строка(Выборка.Представление) + 
			?(Выборка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено,
				"", " (" + Строка(Выборка.НеРассмотрено) + ")");
		
	КонецЦикла;
	
	СтрокаВсе = ДобавитьСтрокуВсе(Категории, 1);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоКонтактов()
	
	ЗначениеТекущейСтроки = ПолучитьЗначениеТекущейСтрокиФормыДерева("Контакты");
	
	Контакты.ПолучитьЭлементы().Очистить();
	Запрос = Новый Запрос;
	ТекстУсловия = "";
	
	ТекстУсловияПоОтборуСписка =  ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловия = " ГДЕ
		|(ДокументВзаимодействий.Ссылка В
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ОтборСписка.Ссылка
		|	ИЗ
		|		ОтборСписка КАК ОтборСписка))";
		
	КонецЕсли;
	
	ТекстСоединениеТаблицыКонтактов = "";
	
	МассивОписанияТиповКонтактов = ВзаимодействияКлиентСервер.ПолучитьМассивОписанияВозможныхКонтактов();
	Для каждого ЭлементМассиваОписания Из МассивОписанияТиповКонтактов Цикл
		
		Если ЭлементМассиваОписания.Имя = "Пользователи" Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСоединениеТаблицыКонтактов = ТекстСоединениеТаблицыКонтактов + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыКонтакты.Ссылка,
		|	ДокументыКонтакты.Контакт,
		|	ДокументыКонтакты.НеРассмотрено
		|ИЗ
		|	ДокументыКонтакты КАК ДокументыКонтакты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник." + ЭлементМассиваОписания.Имя + " КАК ТаблицаКонтактов
		|		ПО ДокументыКонтакты.Контакт = ТаблицаКонтактов.Ссылка
		|ГДЕ
		|	ДокументыКонтакты.Контакт ССЫЛКА Справочник." + ЭлементМассиваОписания.Имя + "
		|";
		
	КонецЦикла;
		
	Запрос.Текст = Запрос.Текст + " ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументВзаимодействий.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Контакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.ПредставлениеКонтакта
	|		ИНАЧЕ ДокументВзаимодействий.Контакт
	|	КОНЕЦ КАК Контакт,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Ссылка.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НеРассмотрено
	|ПОМЕСТИТЬ ДокументыКонтакты
	|ИЗ
	|	Документ.ЗапланированноеВзаимодействие.Участники КАК ДокументВзаимодействий " + ТекстУсловия + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументВзаимодействий.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Контакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.ПредставлениеКонтакта
	|		ИНАЧЕ ДокументВзаимодействий.Контакт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Ссылка.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.Встреча.Участники КАК ДокументВзаимодействий " + ТекстУсловия + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументВзаимодействий.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.АбонентКонтакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.АбонентПредставление
	|		ИНАЧЕ ДокументВзаимодействий.АбонентКонтакт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.ТелефонныйЗвонок КАК ДокументВзаимодействий " + ТекстУсловия + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументВзаимодействий.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.ОтправительКонтакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.ОтправительПредставление
	|		ИНАЧЕ ДокументВзаимодействий.ОтправительКонтакт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.ЭлектронноеПисьмоВходящее КАК ДокументВзаимодействий " + ТекстУсловия + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументВзаимодействий.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Контакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.Представление
	|		ИНАЧЕ ДокументВзаимодействий.Контакт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Ссылка.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.ЭлектронноеПисьмоИсходящее.ПолучателиПисьма КАК ДокументВзаимодействий " + ТекстУсловия + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументВзаимодействий.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Контакт = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДокументВзаимодействий.Представление
	|		ИНАЧЕ ДокументВзаимодействий.Контакт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументВзаимодействий.Ссылка.Рассмотрено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.ЭлектронноеПисьмоИсходящее.ПолучателиКопий КАК ДокументВзаимодействий " + ТекстУсловия + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыКонтакты.Ссылка,
	|	ДокументыКонтакты.Контакт,
	|	ДокументыКонтакты.НеРассмотрено
	|ПОМЕСТИТЬ ДокументыРазрешенныеКонтакты
	|ИЗ
	|	ДокументыКонтакты КАК ДокументыКонтакты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДокументыКонтакты.Контакт = Пользователи.Ссылка
	|ГДЕ
	|	ДокументыКонтакты.Контакт ССЫЛКА Справочник.Пользователи " + ТекстСоединениеТаблицыКонтактов + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыКонтакты.Ссылка,
	|	ДокументыКонтакты.Контакт,
	|	ДокументыКонтакты.НеРассмотрено
	|ИЗ
	|	ДокументыКонтакты КАК ДокументыКонтакты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДокументыКонтакты.Контакт) = ТИП(СТРОКА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(ДокументыРазрешенныеКонтакты.Контакт) КАК Тип,
	|	ДокументыРазрешенныеКонтакты.Контакт КАК Значение,
	|	СУММА(ДокументыРазрешенныеКонтакты.НеРассмотрено) КАК НеРассмотрено,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДокументыРазрешенныеКонтакты.Контакт) = ТИП(СТРОКА)
	|			ТОГДА 1
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК НомерКартинки
	|ИЗ
	|	ДокументыРазрешенныеКонтакты КАК ДокументыРазрешенныеКонтакты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(ДокументыРазрешенныеКонтакты.Контакт),
	|	ДокументыРазрешенныеКонтакты.Контакт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Тип,
	|	Контакт
	|
	|ИТОГИ ПО
	|	Тип,
	|	Значение ИЕРАРХИЯ";
	
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СтрокиПервыйУровень = Контакты.ПолучитьЭлементы();
	
	Для Каждого Строка ИЗ Дерево.Строки Цикл
		
		СтрокаТип = СтрокиПервыйУровень.Добавить();
		Если Строка.Тип <> Тип("Строка") Тогда
			МетаданныеКонтакта = Метаданные.НайтиПоТипу(Строка.Тип);
			СтрокаТип.Значение = ?(ПустаяСтрока(МетаданныеКонтакта.ПредставлениеСписка), МетаданныеКонтакта.Синоним, МетаданныеКонтакта.ПредставлениеСписка);
			СтрокаТип.НомерКартинки = 2;
		Иначе
			СтрокаТип.Значение = НСтр("ru = 'Контакт не подобран'");
			СтрокаТип.НомерКартинки = 0;
		КонецЕсли;
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Строка.Тип);
		СтрокаТип.ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		СтрокаТип.НеРассмотрено = Строка.НеРассмотрено;
		СтрокаТип.Представление = Строка(СтрокаТип.Значение) + 
			?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено, 
				"", " (" + Строка(Строка.НеРассмотрено) + ")"); 
		
		ДобавитьСтрокиВДеревоНавигации(Строка, СтрокаТип, Истина, 3);
		
	КонецЦикла;
	
	ДобавитьСтрокуВсе(Контакты, 4);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапок()
	
	Папки.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма, ЗНАЧЕНИЕ(Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка)) КАК Папка,
	|	ЕСТЬNULL(ПапкиЭлектронныхПисем.Владелец, Взаимодействия.УчетнаяЗапись) КАК УчетнаяЗапись,
	|	СУММА(ВЫБОР
	|			КОГДА Взаимодействия.Рассмотрено
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК НеРассмотрено
	|ПОМЕСТИТЬ НеРассмотреноПапки
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|			ПО ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма = ПапкиЭлектронныхПисем.Ссылка
	|				И ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма = ПапкиЭлектронныхПисем.Ссылка
	|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	(Взаимодействия.Тип = ТИП(Документ.ЭлектронноеПисьмоВходящее)
	|			ИЛИ Взаимодействия.Тип = ТИП(Документ.ЭлектронноеПисьмоИсходящее))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма, ЗНАЧЕНИЕ(Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка)),
	|	ЕСТЬNULL(ПапкиЭлектронныхПисем.Владелец, Взаимодействия.УчетнаяЗапись)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПапкиЭлектронныхПисем.Владелец КАК УчетнаяЗапись,
	|	ПапкиЭлектронныхПисем.Ссылка КАК Значение,
	|	ЕСТЬNULL(НеРассмотреноПапки.НеРассмотрено, 0) КАК НеРассмотрено,
	|	ПапкиЭлектронныхПисем.ПредопределеннаяПапка,
	|	ВЫБОР
	|		КОГДА НастройкиУчетныхЗаписейЭлектроннойПочты.ОтветственныйЗаВедениеПапок = &ТекущийПользователь ИЛИ &РольПолныеПравДоступна
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьПравоНаИзменение,
	|	ВЫБОР
	|		КОГДА (НЕ ПапкиЭлектронныхПисем.ПредопределеннаяПапка)
	|			ТОГДА 7
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &Входящие
	|					ТОГДА 1
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &Отправленные
	|					ТОГДА 2
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &Черновики
	|					ТОГДА 3
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &Исходящие
	|					ТОГДА 4
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &НежелательнаяПочта
	|					ТОГДА 5
	|				КОГДА ПапкиЭлектронныхПисем.Наименование = &Удаленные
	|					ТОГДА 6
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерКартинки
	|ИЗ
	|	Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|		ЛЕВОЕ СОЕДИНЕНИЕ НеРассмотреноПапки КАК НеРассмотреноПапки
	|		ПО (НеРассмотреноПапки.Папка = ПапкиЭлектронныхПисем.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетныхЗаписейЭлектроннойПочты КАК НастройкиУчетныхЗаписейЭлектроннойПочты
	|		ПО ПапкиЭлектронныхПисем.Владелец = НастройкиУчетныхЗаписейЭлектроннойПочты.УчетнаяЗаписьЭлектроннойПочты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПапкиЭлектронныхПисем.Код
	|ИТОГИ
	|	СУММА(НеРассмотрено),
	|	СУММА(ЕстьПравоНаИзменение)
	|ПО
	|	УчетнаяЗапись,
	|	Значение ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("РольПолныеПравДоступна", Пользователи.ЭтоПолноправныйПользователь());
	Взаимодействия.УстановитьПараметрыЗапросаИменаПредопределенныеПапки(Запрос);
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	СтрокиПервыйУровень = Папки.ПолучитьЭлементы();
	
	Для Каждого Строка ИЗ Дерево.Строки Цикл
		
		СтрокаУчЗаписи = СтрокиПервыйУровень.Добавить();
		СтрокаУчЗаписи.УчетнаяЗапись        = Строка.УчетнаяЗапись;
		СтрокаУчЗаписи.Значение             = Строка.УчетнаяЗапись;
		СтрокаУчЗаписи.НомерКартинки        = 0;
		СтрокаУчЗаписи.НеРассмотрено        = Строка.НеРассмотрено;
		СтрокаУчЗаписи.ЕстьПравоНаИзменение = Строка.ЕстьПравоНаИзменение;
		СтрокаУчЗаписи.Представление = Строка(СтрокаУчЗаписи.Значение) + 
			?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено,
				"", " (" + Строка(Строка.НеРассмотрено) + ")");
		
		ДобавитьСтрокиВДеревоНавигации(Строка, СтрокаУчЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоРеквизитовПредмета(ИмяКоманды = "")
	
	ЗначениеТекущейСтроки = ПолучитьЗначениеТекущейСтрокиФормыДерева("РеквизитыПредмета");
	
	РеквизитыПредмета.ПолучитьЭлементы().Очистить();
	Запрос = Новый Запрос;
	ТекстУсловия = "";
	
	Если Не ПустаяСтрока(ИмяКоманды) Тогда
		
		МассивОписаний = 
			ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивОписанияВидовНавигацииОтРеквизитовПредмета();
		НомерОписанияВМассиве = Число(Прав(ИмяКоманды,1));
		Если МассивОписаний.Количество() > НомерОписанияВМассиве Тогда
			СтруктураОписание = МассивОписаний[НомерОписанияВМассиве];
			ТекущееПредставлениеОтбораПоРеквизитуПредмета = СтруктураОписание.Представление;
		Иначе
			СтруктураОписание = Неопределено;
		КонецЕсли;
		
	Иначе
		
		СтруктураОписание = ПолучитьСтруктуруОписанияПоПредставлению(ТекущееПредставлениеОтбораПоРеквизитуПредмета);
		
	КонецЕсли;
	
	Если СтруктураОписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстУсловия = "";
	
	ТекстУсловияПоОтборуСписка =  ПолучитьТекстЗапросаПоОтборуСписка(Запрос);
	Если Не ПустаяСтрока(ТекстУсловияПоОтборуСписка) Тогда
		Запрос.Текст = ТекстУсловияПоОтборуСписка;
		
		ТекстУсловия = " ГДЕ
			|(Взаимодействия.Ссылка В
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		ОтборСписка.Ссылка
			|	ИЗ
			|		ОтборСписка КАК ОтборСписка))";
	
	КонецЕсли;
	
	ТекстУсловияПоТипуПредмета = "";
	Для каждого ЭлементМассива Из СтруктураОписание.МассивТипов Цикл
		
		ТипПредмета = СтрЗаменить(ЭлементМассива,"Ссылка", "");
		ТекстУсловияПоТипуПредмета = ТекстУсловияПоТипуПредмета + 
			" И ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(" + ТипПредмета + ") ";
		
	КонецЦикла;
	ТекстУсловияПоТипуПредмета =  Прав(ТекстУсловияПоТипуПредмета, СтрДлина(ТекстУсловияПоТипуПредмета) - 2);
	
	ТекстУсловия = ТекстУсловия + ?(ПустаяСтрока(ТекстУсловия),"ГДЕ "," И " ) + ТекстУсловияПоТипуПредмета;
	
	Если ПоказыватьВсеАктивныеПредметы Тогда
		
		ТекстУсловияАктивныеПредметыПоТипуПредмета = 
			СтрЗаменить(ТекстУсловияПоТипуПредмета, "ПредметыВзаимодействий", "АктивныеПредметыВзаимодействий");
		
		ТекстЗапросаАктивныеПредметы = "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АктивныеПредметыВзаимодействий.Предмет." + СтруктураОписание.ИмяРеквизита + ",
		|	АктивныеПредметыВзаимодействий.Предмет,
		|	0,
		|	1
		|ИЗ
		|	РегистрСведений.АктивныеПредметыВзаимодействий КАК АктивныеПредметыВзаимодействий
		|ГДЕ
		|	(НЕ АктивныеПредметыВзаимодействий.Предмет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ПредметыПапкиВзаимодействий.Предмет
		|				ИЗ
		|					РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий) 
		|				 И " + ТекстУсловияАктивныеПредметыПоТипуПредмета + ")
		|";
		
	Иначе
		
		ТекстЗапросаАктивныеПредметы = "";
		
	КонецЕсли;
	
	ТекстУсловияНе = СтрЗаменить(ТекстУсловия,"=","<>");
	
	ТекстСоединениеТаблицыПредметов = "";
	МассивВозможныхПредметов = ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивТиповПредметов();
	
	Для каждого ЭлементМассиваПредметов Из МассивВозможныхПредметов Цикл
		
		ИмяТаблицы = СтрЗаменить(ЭлементМассиваПредметов, "Ссылка","");
		
		ТекстСоединениеТаблицыПредметов = ТекстСоединениеТаблицыПредметов + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|РеквизитыПредмета.Группировка,
		|РеквизитыПредмета.Значение,
		|РеквизитыПредмета.НеРассмотрено,
		|РеквизитыПредмета.РеквизитДопУпорядочивания
		|ИЗ
		|	РеквизитыПредмета КАК РеквизитыПредмета
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ИмяТаблицы +" КАК ТаблицаПредмета
		|ПО РеквизитыПредмета.Значение = ТаблицаПредмета.Ссылка
		|ГДЕ
		|РеквизитыПредмета.Значение ССЫЛКА " + ИмяТаблицы +"
		|";
		
	КонецЦикла;

	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ПредметыВзаимодействий.Предмет ЕСТЬ NULL 
	|			ТОГДА &ПрочиеВопросы
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.Встреча)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЗапланированноеВзаимодействие)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ТелефонныйЗвонок)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоИсходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоВходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.СообщениеSMS)
	|					ТОГДА &ПрочиеВопросы
	|				ИНАЧЕ &ПрочиеПредметы
	|			КОНЕЦ
	|	КОНЕЦ КАК Группировка,
	|	ЕСТЬNULL(ПредметыВзаимодействий.Предмет, НЕОПРЕДЕЛЕНО) КАК Значение,
	|	СУММА(ВЫБОР
	|			КОГДА Взаимодействия.Рассмотрено
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК НеРассмотрено,
	|	0 КАК РеквизитДопУпорядочивания
	|ПОМЕСТИТЬ РеквизитыПредмета
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыВзаимодействий
	|		ПО Взаимодействия.Ссылка = ПредметыВзаимодействий.Взаимодействие " + ТекстУсловияНе+ "
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ПредметыВзаимодействий.Предмет ЕСТЬ NULL 
	|			ТОГДА &ПрочиеВопросы
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.Встреча)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЗапланированноеВзаимодействие)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ТелефонныйЗвонок)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоИсходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.ЭлектронноеПисьмоВходящее)
	|						ИЛИ ТИПЗНАЧЕНИЯ(ПредметыВзаимодействий.Предмет) = ТИП(Документ.СообщениеSMS)
	|					ТОГДА &ПрочиеВопросы
	|				ИНАЧЕ &ПрочиеПредметы
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПредметыВзаимодействий.Предмет, НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредметыВзаимодействий.Предмет." + СтруктураОписание.ИмяРеквизита +",
	|	ПредметыВзаимодействий.Предмет,
	|	СУММА(ВЫБОР
	|			КОГДА Взаимодействия.Рассмотрено
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ),
	|	1
	|ИЗ
	|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыВзаимодействий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ПО ПредметыВзаимодействий.Взаимодействие = Взаимодействия.Ссылка " + ТекстУсловия+ "
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредметыВзаимодействий.Предмет." + СтруктураОписание.ИмяРеквизита +",
	|	ПредметыВзаимодействий.Предмет " + ТекстЗапросаАктивныеПредметы +"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеквизитыПредмета.Группировка,
	|	РеквизитыПредмета.Значение,
	|	РеквизитыПредмета.НеРассмотрено,
	|	РеквизитыПредмета.РеквизитДопУпорядочивания
	|ПОМЕСТИТЬ РеквизитыПредметаСоединения
	|ИЗ
	|РеквизитыПредмета КАК РеквизитыПредмета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|	ПО РеквизитыПредмета.Значение = Взаимодействия.Ссылка
	|ГДЕ
	|(РеквизитыПредмета.Значение ССЫЛКА Документ.Встреча
	|		ИЛИ РеквизитыПредмета.Значение ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|		ИЛИ РеквизитыПредмета.Значение ССЫЛКА Документ.ТелефонныйЗвонок
	|		ИЛИ РеквизитыПредмета.Значение ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
	|		ИЛИ РеквизитыПредмета.Значение ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
	|		ИЛИ РеквизитыПредмета.Значение ССЫЛКА Документ.СообщениеSMS)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеквизитыПредмета.Группировка,
	|	РеквизитыПредмета.Значение,
	|	РеквизитыПредмета.НеРассмотрено,
	|	РеквизитыПредмета.РеквизитДопУпорядочивания
	|ИЗ
	|	РеквизитыПредмета КАК РеквизитыПредмета
	|ГДЕ
	|РеквизитыПредмета.Значение = НЕОПРЕДЕЛЕНО " + ТекстСоединениеТаблицыПредметов + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеквизитыПредмета.Группировка КАК Группировка,
	|	РеквизитыПредмета.Значение КАК Значение,
	|	РеквизитыПредмета.НеРассмотрено КАК НеРассмотрено,
	|	РеквизитыПредмета.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	Взаимодействия.Дата,
	|	Взаимодействия.Тема,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.Встреча) ТОГДА 1
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.ЗапланированноеВзаимодействие) ТОГДА 2
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.ТелефонныйЗвонок) ТОГДА 3
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.ЭлектронноеПисьмоИсходящее) ТОГДА 5
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.ЭлектронноеПисьмоВходящее) ТОГДА 4
	|		КОГДА ТИПЗНАЧЕНИЯ(РеквизитыПредмета.Значение) = ТИП(Документ.СообщениеSMS) ТОГДА 9
	|		ИНАЧЕ 7
	|	КОНЕЦ КАК НомерКартинки
	|ИЗ
	|	РеквизитыПредметаСоединения КАК РеквизитыПредмета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ПО РеквизитыПредмета.Значение = Взаимодействия.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитДопУпорядочивания,
	|	Группировка,
	|	Значение УБЫВ
	|ИТОГИ
	|	СУММА(НеРассмотрено)
	|ПО
	|	Группировка,
	|	Значение";
	
	Запрос.УстановитьПараметр("ПрочиеВопросы", НСтр("ru = 'Прочие вопросы'"));
	Запрос.УстановитьПараметр("ПрочиеПредметы", НСтр("ru = 'Прочие предметы'"));
	
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	СтрокиПервыйУровень = РеквизитыПредмета.ПолучитьЭлементы();

	Для Каждого Строка ИЗ Дерево.Строки Цикл
		
		СтрокаГруппировка = СтрокиПервыйУровень.Добавить();
		СтрокаГруппировка.Группировка   = Строка.Группировка;
		СтрокаГруппировка.Значение      = Строка.Группировка;
		СтрокаГруппировка.НеРассмотрено = Строка.НеРассмотрено;
		СтрокаГруппировка.Представление = ?(ЗначениеЗаполнено(СтрокаГруппировка.Значение),
			Строка(СтрокаГруппировка.Значение), СтруктураОписание.ПредставлениеНеУказан) 
			+ ?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено,
				"", " (" + Строка(Строка.НеРассмотрено) + ")");
		
		Если Строка.Группировка = НСтр("ru = 'Прочие вопросы'") Тогда
			СтрокаГруппировка.НомерКартинки = 0;
		ИначеЕсли Строка.Группировка = НСтр("ru = 'Прочие предметы'") Тогда
			СтрокаГруппировка.НомерКартинки = 0;
		Иначе
			СтрокаГруппировка.НомерКартинки = 6;
		КонецЕсли;
		
		ДобавитьСтрокиВДеревоНавигации(Строка, СтрокаГруппировка);
		
	КонецЦикла;
	
	СтрокаВсе = ДобавитьСтрокуВсе(РеквизитыПредмета, 8);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиВДеревоНавигации(РодительскаяСтрока, СтрокаРодитель, ВыполнятьПроверку = Истина, НомерКартинки = -1)
	
	Для Каждого Строка ИЗ РодительскаяСтрока.Строки Цикл
		
		Если ВыполнятьПроверку И (Строка.Значение = РодительскаяСтрока.Значение Или Строка.Значение = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаРодитель.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
		Если Строка.НомерКартинки = Null И НомерКартинки <> -1 Тогда
			НоваяСтрока.НомерКартинки = НомерКартинки;
		КонецЕсли;
	
		Если ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(Строка.Значение) Тогда
			СтрокаДетали = Строка.Строки[0];
			НоваяСтрока.Представление = ?(ПустаяСтрока(СтрокаДетали.Тема), 
				НСтр("ru = 'Тема не указана'"), СтрокаДетали.Тема) + " " + НСтр("ru ='от'") + " " +
				Формат(СтрокаДетали.Дата, "ДЛФ=DT") + ?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено,
				"", " (" + Строка(Строка.НеРассмотрено) + ")");
			НоваяСтрока.НомерКартинки = СтрокаДетали.НомерКартинки;
		Иначе
			НоваяСтрока.Представление = Строка(НоваяСтрока.Значение) + 
				?(Строка.НеРассмотрено = 0 Или Не ИспользоватьПризнакРассмотрено, 
					"", " (" + Строка(Строка.НеРассмотрено) + ")");
			Если Строка.НомерКартинки = Null И НомерКартинки = -1 И Строка.Строки.Количество() > 0 Тогда
				НоваяСтрока.НомерКартинки = Строка.Строки[0].НомерКартинки;
			КонецЕсли;
		КонецЕсли;
		
		ДобавитьСтрокиВДеревоНавигации(Строка, НоваяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстЗапросаПоОтборуСписка(Запрос)
	
	Если ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список).Элементы.Количество() > 0 Тогда
		
		СхемаОтборВзаимодействия = ЖурналыДокументов.Взаимодействия.ПолучитьМакет("СхемаОтборВзаимодействия");
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаОтборВзаимодействия));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаОтборВзаимодействия.НастройкиПоУмолчанию);
		
		СкопироватьОтбор(КомпоновщикНастроек.Настройки.Отбор, ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список),,, Истина);
		
		Если ЗначениеЗаполнено(Элементы.Список.Период.ДатаНачала) ИЛИ  ЗначениеЗаполнено(Элементы.Список.Период.ДатаОкончания) Тогда
			КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Интервал", Элементы.Список.Период);
		КонецЕсли;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаОтборВзаимодействия, КомпоновщикНастроек.ПолучитьНастройки(),,,
			Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		Если МакетКомпоновкиДанных.ЗначенияПараметров.Количество() = 0 Тогда
			Возврат "";
		ИначеЕсли МакетКомпоновкиДанных.ЗначенияПараметров.Количество() = 2 И 
			(НЕ ЗначениеЗаполнено(МакетКомпоновкиДанных.ЗначенияПараметров.ДатаНачала.Значение)) И
			(НЕ ЗначениеЗаполнено(МакетКомпоновкиДанных.ЗначенияПараметров.ДатаОкончания.Значение)) Тогда
			Возврат "";
		КонецЕсли;
		
		ТекстЗапроса = МакетКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных.Запрос;
		
		Для каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
			Запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса +"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		НайденнаяПозицияИЗ = Найти(ТекстЗапроса,"ИЗ");
		Если НайденнаяПозицияИЗ <> 0 Тогда
			ТекстЗапроса = Лев(ТекстЗапроса,НайденнаяПозицияИЗ - 1) + "  ПОМЕСТИТЬ ОтборСписка
			|  " + Прав(ТекстЗапроса,СтрДлина(ТекстЗапроса) - НайденнаяПозицияИЗ + 1);
			
		КонецЕсли;
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ОбновитьПанельНавигации(ЗначениеТекущейСтроки = Неопределено)

	ТекущаяСтраницаПанелиНавигации = Элементы.СтраницыПанелиНавигации.ТекущаяСтраница;
	
	Если ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаКонтакт Тогда
		ЗаполнитьДеревоКонтактов();
	ИначеЕсли ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаПредмет Тогда
		ЗаполнитьДеревоПредметов();
	ИначеЕсли ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаПапки Тогда
		ЗаполнитьДеревоПапок();
	ИначеЕсли ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаСвойства Тогда
		ЗаполнитьДеревоСвойств();
	ИначеЕсли ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаРеквизитыПредмета Тогда
		ЗаполнитьДеревоРеквизитовПредмета();
	ИначеЕсли ТекущаяСтраницаПанелиНавигации = Элементы.СтраницаКатегории Тогда
		ЗаполнитьТаблицуКатегорий();
	КонецЕсли;
	
	ПослеЗаполненияПанелиНавигации();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаполненияПанелиНавигации()

	Настройки = ПолучитьСохраненныеНастройкиДереваПанелиНавигации(Элементы.СтраницыПанелиНавигации.ТекущаяСтраница.Имя,
		ТекущееПредставлениеОтбораПоРеквизитуПредмета,ТекущееСвойствоПанелиНавигации,НастройкиДеревьевПанелиНавигации);
		
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеНастроек = Настройки.ЗначениеНастроек;
	СпозиционироватьсяНаСтрокеСогласноСохраненномуЗначению(ЗначениеНастроек.ТекущееЗначение, Настройки.ИмяДерева);
	
	ИмяТекущейСтраницы = Элементы.СтраницыСписок.ТекущаяСтраница.Имя;
	
	Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт Тогда
		
		ТекущиеДанные = Контакты.НайтиПоИдентификатору(Элементы.Контакты.ТекущаяСтрока);
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.Контакты.ТекущаяСтрока = НайтиСтрокуВДанныхФормыДерево(Контакты,НСтр("ru = 'Все'"),"Значение",Ложь);
			ТекущиеДанные = Контакты.НайтиПоИдентификатору(Элементы.Контакты.ТекущаяСтрока);
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Контакты",Новый Структура("Значение,ОписаниеТипов",
				ТекущиеДанные.Значение, ТекущиеДанные.ОписаниеТипов), ИмяТекущейСтраницы);
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки Тогда
		
		ТекущиеДанные = Папки.НайтиПоИдентификатору(Элементы.Папки.ТекущаяСтрока);
		Если ТекущиеДанные = Неопределено И Папки.ПолучитьЭлементы().Количество() > 0 Тогда
			ТекущиеДанные =  Папки.ПолучитьЭлементы()[0];
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Папки",Новый Структура("Значение,УчетнаяЗапись",
				ТекущиеДанные.Значение, ТекущиеДанные.УчетнаяЗапись), ИмяТекущейСтраницы);
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПредмет Тогда
		
		ТекущиеДанные = Предметы.НайтиПоИдентификатору(Элементы.Предметы.ТекущаяСтрока);
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.Предметы.ТекущаяСтрока = НайтиСтрокуВДанныхФормыДерево(Предметы,НСтр("ru = 'Все'"),"Значение",Ложь);
			ТекущиеДанные = Предметы.НайтиПоИдентификатору(Элементы.Предметы.ТекущаяСтрока);
		КонецЕсли;
			
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Предметы",Новый Структура("Значение,ОписаниеТипов",
			                    ТекущиеДанные.Значение, ТекущиеДанные.ОписаниеТипов), ИмяТекущейСтраницы);
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаРеквизитыПредмета Тогда
		
		ТекущиеДанные = РеквизитыПредмета.НайтиПоИдентификатору(Элементы.РеквизитыПредмета.ТекущаяСтрока);
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.РеквизитыПредмета.ТекущаяСтрока = НайтиСтрокуВДанныхФормыДерево(РеквизитыПредмета,НСтр("ru = 'Все'"),"Значение",Ложь);
			ТекущиеДанные = РеквизитыПредмета.НайтиПоИдентификатору(Элементы.РеквизитыПредмета.ТекущаяСтрока);
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("РеквизитыПредмета",Новый Структура("Значение,Группировка",
			                    ТекущиеДанные.Значение, ТекущиеДанные.Группировка), ИмяТекущейСтраницы);
		КонецЕсли;

	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаСвойства Тогда
		
		ТекущиеДанные = Свойства.НайтиПоИдентификатору(Элементы.Свойства.ТекущаяСтрока);
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.Свойства.ТекущаяСтрока = НайтиСтрокуВДанныхФормыДерево(Свойства,НСтр("ru = 'Все'"),"Значение",Ложь);
			ТекущиеДанные = Свойства.НайтиПоИдентификатору(Элементы.Свойства.ТекущаяСтрока);
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Свойства",Новый Структура("Значение", ТекущиеДанные.Значение), ИмяТекущейСтраницы);
		КонецЕсли;
		
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКатегории Тогда
		
		ТекущиеДанные = Категории.НайтиПоИдентификатору(Элементы.Категории.ТекущаяСтрока);
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.Категории.ТекущаяСтрока = НайтиСтрокуВДанныхФормыКоллекция(Категории,НСтр("ru = 'Все'"),"Значение");
			ТекущиеДанные = Категории.НайтиПоИдентификатору(Элементы.Категории.ТекущаяСтрока);
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ИзменитьОтборСписок("Категории",Новый Структура("Значение", ТекущиеДанные.Значение), ИмяТекущейСтраницы);
		КонецЕсли;
		
	КонецЕсли;
	
	НеОтрабатыватьАктивизациюПанелиНавигации = Истина;

КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()

	ОбновитьПанельНавигации();

КонецПроцедуры

&НаСервере
Процедура ДополнитьМенюПанелиНавигации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство,
	|	ПРЕДСТАВЛЕНИЕ(НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство) КАК Представление,
	|	ИСТИНА КАК ЭтоДопРеквизит
	|ПОМЕСТИТЬ ДопРеквизитыИСведения
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|ГДЕ
	|	(НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_Встреча)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЗапланированноеВзаимодействие)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ТелефонныйЗвонок)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЭлектронноеПисьмоВходящее)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЭлектронноеПисьмоИсходящее))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство,
	|	ПРЕДСТАВЛЕНИЕ(НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство),
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|ГДЕ
	|	(НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_Встреча)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЗапланированноеВзаимодействие)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ТелефонныйЗвонок)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЭлектронноеПисьмоВходящее)
	|			ИЛИ НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Документ_ЭлектронноеПисьмоИсходящее))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРеквизитыИСведения.Свойство,
	|	ДопРеквизитыИСведения.Представление,
	|	ДопРеквизитыИСведения.ЭтоДопРеквизит,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения
	|ИЗ
	|	ДопРеквизитыИСведения КАК ДопРеквизитыИСведения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО ДопРеквизитыИСведения.Свойство = ДополнительныеРеквизитыИСведения.Ссылка";
	
	Инд = 0;
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипЗначения = ОписаниеТиповБулево Тогда
			НоваяСтрока = ТаблицаДопРеквизитовСвойствТипаБулево.Добавить();
		Иначе
			
		НоваяКоманда = Команды.Добавить("УстановитьВариантПоСвойству_" + Строка(Инд));
		НоваяКоманда.Действие = "ПереключитьПанельНавигации";
		
		ЭлементКнопкаПодменю = Элементы.Добавить("ДопКнопкаВыбораВариантаНавигацииСвойства_" + 
			Строка(Инд),Тип("КнопкаФормы"), Элементы.ВыборВариантаНавигации);
		ЭлементКнопкаПодменю.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		ЭлементКнопкаПодменю.ИмяКоманды = НоваяКоманда.Имя;
		ЭлементКнопкаПодменю.Заголовок = НСтр("ru = 'По'") + " " + Выборка.Представление;
			
			НоваяСтрока = ТаблицаДопРеквизитовСвойств.Добавить();
			НоваяСтрока.ПорядковыйНомер = Инд;
			Инд = Инд + 1;
			
		КонецЕсли;
		
		НоваяСтрока.ДопРеквизитСведение = Выборка.Свойство;
		НоваяСтрока.ЭтоРеквизит = Выборка.ЭтоДопРеквизит;
		НоваяСтрока.Представление = Выборка.Представление;
		
	КонецЦикла;
	
	Если ТаблицаДопРеквизитовСвойствТипаБулево.Количество() > 0 Тогда
	
		НоваяКоманда = Команды.Добавить("УстановитьВариантПоКатегориям");
		НоваяКоманда.Действие = "ПереключитьПанельНавигации";
		
		ЭлементКнопкаПодменю = Элементы.Добавить("ДопКнопкаВыбораВариантаНавигацииКатегории", 
			Тип("КнопкаФормы"), Элементы.ВыборВариантаНавигации);
		ЭлементКнопкаПодменю.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		ЭлементКнопкаПодменю.ИмяКоманды = НоваяКоманда.Имя;
		ЭлементКнопкаПодменю.Заголовок = НСтр("ru = 'По категориям'");
	
	КонецЕсли;
	
	МассивОписаний = 
		ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивОписанияВидовНавигацииОтРеквизитовПредмета();
	Для каждого ЭлементМассива Из МассивОписаний Цикл
		
		НоваяКоманда = Команды.Добавить("УстановитьВариантПоРеквизитуПредмета_" + Строка(МассивОписаний.Найти(ЭлементМассива)));
		НоваяКоманда.Действие = "ПереключитьПанельНавигации";
		
		ЭлементКнопкаПодменю = Элементы.Добавить("ДопКнопкаВыбораВариантаНавигацииРеквизиты_" + 
			Строка(МассивОписаний.Найти(ЭлементМассива)), Тип("КнопкаФормы"), Элементы.ВыборВариантаНавигации);
		ЭлементКнопкаПодменю.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		ЭлементКнопкаПодменю.ИмяКоманды = НоваяКоманда.Имя;
		ЭлементКнопкаПодменю.Заголовок = "По " + ЭлементМассива.ПредставлениеПо;
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
//    Сохранение состояния узлов и значений деревьев панели навигации

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСохраненныеНастройкиДереваПанелиНавигации(
	ИмяТекущейСтраницыПанелиНавигации,
	ТекущееПредставлениеОтбораПоРеквизитуПредмета,
	ТекущееСвойствоПанелиНавигации,
	НастройкиДеревьевПанелиНавигации)

	Если ИмяТекущейСтраницыПанелиНавигации = "СтраницаПредмет" Тогда
		ИмяДерева = "Предметы";
		ИмяНастройки = "Предметы";
	ИначеЕсли ИмяТекущейСтраницыПанелиНавигации = "СтраницаКонтакт" Тогда
		ИмяДерева = "Контакты";
		ИмяНастройки = "Контакты";
	ИначеЕсли ИмяТекущейСтраницыПанелиНавигации = "СтраницаКатегории" Тогда
		ИмяДерева = "Категории";
		ИмяНастройки = "Категории";
	ИначеЕсли ИмяТекущейСтраницыПанелиНавигации = "СтраницаПапки" Тогда
		ИмяДерева = "Папки";
		ИмяНастройки = "Папки";
	ИначеЕсли ИмяТекущейСтраницыПанелиНавигации = "СтраницаРеквизитыПредмета" Тогда
		ИмяДерева = "РеквизитыПредмета";
		ИмяНастройки = "РеквизитыПредмета_" + ТекущееПредставлениеОтбораПоРеквизитуПредмета;
	ИначеЕсли ИмяТекущейСтраницыПанелиНавигации = "СтраницаСвойства" Тогда
		ИмяДерева = "Свойства";
		ИмяНастройки = "Свойства_" + Строка(ТекущееСвойствоПанелиНавигации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	НайденныеСтроки =  НастройкиДеревьевПанелиНавигации.НайтиСтроки(Новый Структура("ИмяДерева", ИмяНастройки));
	Если НайденныеСтроки.Количество() = 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
		Для Инд = 1 По НайденныеСтроки.Количество()-1 Цикл
			НастройкиДеревьевПанелиНавигации.Удалить(НайденныеСтроки[инд]);
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Новый Структура("ИмяДерева,ЗначениеНастроек",ИмяДерева,СтрокаДереваНастроек);

КонецФункции

&НаКлиенте
Процедура СохранитьСостояниеУзлаВНастройках(ИмяДерева, Значение, Разворачивание);
	
	Если ИмяДерева = "РеквизитыПредмета" Тогда
		ИмяДерева =  "РеквизитыПредмета_" + ТекущееПредставлениеОтбораПоРеквизитуПредмета;
	ИначеЕсли ИмяДерева = "Свойства" Тогда
		ИмяДерева =  "Свойства_" + Строка(ТекущееСвойствоПанелиНавигации);
	КонецЕсли;
	
	НайденныеСтроки =  НастройкиДеревьевПанелиНавигации.НайтиСтроки(Новый Структура("ИмяДерева",ИмяДерева));
	Если НайденныеСтроки.Количество() = 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		СтрокаДереваНастроек = НайденныеСтроки[0];
		Для Инд = 1 По НайденныеСтроки.Количество()-1 Цикл
			НастройкиДеревьевПанелиНавигации.Удалить(НайденныеСтроки[инд]);
		КонецЦикла;
	Иначе
		Если Разворачивание Тогда
			СтрокаДереваНастроек = НастройкиДеревьевПанелиНавигации.Добавить();
			СтрокаДереваНастроек.ИмяДерева = ИмяДерева;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НайденныйЭлементСписка = СтрокаДереваНастроек.РазвернутыеУзлы.НайтиПоЗначению(Значение);
	
	Если Разворачивание Тогда
		
		Если НайденныйЭлементСписка = Неопределено Тогда
			
			СтрокаДереваНастроек.РазвернутыеУзлы.Добавить(Значение);
			
		КонецЕсли;
		
	Иначе
		
		Если НайденныйЭлементСписка <> Неопределено Тогда
			
			СтрокаДереваНастроек.РазвернутыеУзлы.Удалить(НайденныйЭлементСписка);
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьРаскрытыеУзлыДерева()
	
	Настройки = ПолучитьСохраненныеНастройкиДереваПанелиНавигации(Элементы.СтраницыПанелиНавигации.ТекущаяСтраница.Имя,
		ТекущееПредставлениеОтбораПоРеквизитуПредмета,ТекущееСвойствоПанелиНавигации,НастройкиДеревьевПанелиНавигации);
		
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеНастроек = Настройки.ЗначениеНастроек;
	
	Если Настройки.ИмяДерева <> "Категории" Тогда
		СоответсвиеИдентификаторовРазвернутыхУзлов = Новый Соответствие;
		
		Если ЗначениеНастроек.РазвернутыеУзлы.Количество() Тогда
			ОпределитьИдентификаторыРазвернутыхУзлов(ЗначениеНастроек.РазвернутыеУзлы, 
				СоответсвиеИдентификаторовРазвернутыхУзлов, ЭтаФорма[Настройки.ИмяДерева].ПолучитьЭлементы());
		КонецЕсли;
		
		Для каждого ЭлементСоответствия Из СоответсвиеИдентификаторовРазвернутыхУзлов Цикл
			Элементы[Настройки.ИмяДерева].Развернуть(ЭлементСоответствия.Значение);
		КонецЦикла;
		
		Для каждого ЭлементСписка Из ЗначениеНастроек.РазвернутыеУзлы Цикл
			Если СоответсвиеИдентификаторовРазвернутыхУзлов.Получить(ЭлементСписка.Значение) = Неопределено Тогда
				ЗначениеНастроек.РазвернутыеУзлы.Удалить(ЭлементСписка);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьИдентификаторыРазвернутыхУзлов(СписокРазвернутыхУзлов, СоответствиеИдентификаторов, СтрокиДерева)

	Для каждого Элемент Из СтрокиДерева Цикл
		Если СписокРазвернутыхУзлов.НайтиПоЗначению(Элемент.Значение) <> Неопределено Тогда
			ЭлементРодитель = Элемент.ПолучитьРодителя();
			Если ЭлементРодитель = Неопределено ИЛИ СоответствиеИдентификаторов.Получить(ЭлементРодитель.Значение) <> Неопределено Тогда
				СоответствиеИдентификаторов.Вставить(Элемент.Значение,Элемент.ПолучитьИдентификатор());
			КонецЕсли;
		КонецЕсли;
		ОпределитьИдентификаторыРазвернутыхУзлов(СписокРазвернутыхУзлов, СоответствиеИдентификаторов, Элемент.ПолучитьЭлементы());
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеТекущейСтрокиФормыДерева(ИмяЭлемента)
	
	ЗначениеТекущейСтроки = Неопределено;
	
	Если Элементы[ИмяЭлемента].ТекущаяСтрока <> Неопределено Тогда
		НайденнаяСтрока = ЭтаФорма[ИмяЭлемента].НайтиПоИдентификатору(Элементы[ИмяЭлемента].ТекущаяСтрока);
		Если НайденнаяСтрока <> Неопределено Тогда
			ЗначениеТекущейСтроки = НайденнаяСтрока.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеТекущейСтроки;
	
КонецФункции

&НаСервере
Процедура СпозиционироватьсяНаСтрокеСогласноСохраненномуЗначению(ЗначениеТекущейСтроки,
	                                                             ИмяЭлемента,
	                                                             СтрокаВсе = Неопределено)
	
	Если ЗначениеТекущейСтроки <> Неопределено Тогда
		Если ИмяЭлемента <> "Категории" Тогда
			ИдентификатораНайденнойСтроки = НайтиСтрокуВДанныхФормыДерево(ЭтаФорма[ИмяЭлемента],
				ЗначениеТекущейСтроки,"Значение",Истина);
		Иначе
			ИдентификатораНайденнойСтроки = НайтиСтрокуВДанныхФормыКоллекция(ЭтаФорма[ИмяЭлемента],
				ЗначениеТекущейСтроки,"Значение");
		КонецЕсли;
		Если ИдентификатораНайденнойСтроки > 0 Тогда
			Элементы[ИмяЭлемента].ТекущаяСтрока = ИдентификатораНайденнойСтроки;
		Иначе
			Элементы[ИмяЭлемента].ТекущаяСтрока = ?(СтрокаВсе = Неопределено, 0, СтрокаВсе.ПолучитьИдентификатор());
		КонецЕсли;
	Иначе
		Элементы[ИмяЭлемента].ТекущаяСтрока = ?(СтрокаВсе = Неопределено, 0, СтрокаВсе.ПолучитьИдентификатор());
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Процедуры и функции обработки команд

// Установить ответственного в выбранных взаимодействиях - серверная часть
//Параметры:
//  Взаимодействия - список выбранных взаимодействий
//  Ответственный - устанавливаемый ответственный
&НаСервере
Процедура УстановитьОтветственного(Ответственный, Знач ДанныеДляОбработки)
	
	ОбновлятьПанельНавигации = Ложь;
	
	Если ДанныеДляОбработки <> Неопределено Тогда
		
		Для Каждого Взаимодействие Из ДанныеДляОбработки Цикл
			Если ЗначениеЗаполнено(Взаимодействие)
				И Взаимодействие.Ответственный <> Ответственный Тогда
				Объект = Взаимодействие.ПолучитьОбъект();
				Объект.РассмотретьПосле = '0001.01.01';
				Объект.Ответственный = Ответственный;
				Объект.Записать();
				ОбновлятьПанельНавигации = Истина;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		МассивВзаимодействий = ПолучитьВзаимодействияОтборуСписка(Ответственный,"Ответственный");
		
		Для Каждого Взаимодействие Из МассивВзаимодействий Цикл
			
			Объект = Взаимодействие.ПолучитьОбъект();
			Объект.РассмотретьПосле = '0001.01.01';
			Объект.Ответственный = Ответственный;
			Объект.Записать();
			ОбновлятьПанельНавигации = Истина;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

// Установить флаг "Рассмотрено" в выбранных взаимодействиях - серверная часть
//Параметры:
//  Взаимодействия - список выбранных взаимодействий
&НаСервере
Процедура УстановитьФлагРассмотрено(Знач ДанныеДляОбработки, ЗначениеПризнака)
	
	ОбновлятьПанельНавигации = Ложь;
	
	Если ДанныеДляОбработки <> Неопределено Тогда
		
		Для Каждого Взаимодействие Из ДанныеДляОбработки Цикл
			Если ЗначениеЗаполнено(Взаимодействие)
				И (НЕ Взаимодействие.Рассмотрено = ЗначениеПризнака) Тогда
				Объект = Взаимодействие.ПолучитьОбъект();
				Объект.Рассмотрено = ЗначениеПризнака;
				Объект.Записать();
				ОбновлятьПанельНавигации = Истина;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		МассивВзаимодействий = ПолучитьВзаимодействияОтборуСписка(ЗначениеПризнака, "Рассмотрено");
		
		Для Каждого Взаимодействие Из МассивВзаимодействий Цикл
			Объект = Взаимодействие.ПолучитьОбъект();
			Объект.Рассмотрено = ЗначениеПризнака;
			Объект.Записать();
			ОбновлятьПанельНавигации = Истина;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьВЗакладкиСервер(Знач ДанныеДляОбработки, ИмяЭлементаФормы)
	
	Результат = Новый Структура("ЭлементДобавлен,НавигационнаяСсылкаЭлемента, ПредставлениеЭлемента, ТекстСообщенияОшибка", Ложь, "", "", "");
		
	СхемаКомпоновки = ЖурналыДокументов.Взаимодействия.ПолучитьМакет("СхемаОтборВзаимодействия");
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	Если Лев(ИмяЭлементаФормы, 6) = "Список" Тогда
		
		СписокВзаимодействий = Новый СписокЗначений;
		
		Для Каждого Взаимодействие Из ДанныеДляОбработки Цикл
			Если ЗначениеЗаполнено(Взаимодействие) Тогда
				СписокВзаимодействий.Добавить(Взаимодействие);
			КонецЕсли;
		КонецЦикла;
		
		Если СписокВзаимодействий.Количество() = 0 Тогда
			Результат.ТекстСообщенияОшибка = НСтр("ru = 'Не выбран элемент для добавления в закладки.'");
			Возврат Результат;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(КомпоновщикНастроек.Настройки.Отбор,
			"Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, СписокВзаимодействий);
		НаименованиеЗакладки = ?(ТолькоПочта, НСтр("ru = 'Избранные письма'"), НСтр("ru = 'Избранные взаимодействия'"));
		Если СписокВзаимодействий.Количество() > 1 Тогда
			Текст = ?(ТолькоПочта, НСтр("ru = 'Выбранные письма (%1)'"), НСтр("ru = 'выбранные взаимодействия (%1)'"));
			Результат.ПредставлениеЭлемента = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, СписокВзаимодействий.Количество());
		Иначе
			Результат.ПредставлениеЭлемента = ОбщегоНазначения.ПредметСтрокой(СписокВзаимодействий[0].Значение);
			Результат.НавигационнаяСсылкаЭлемента = ПолучитьНавигационнуюСсылку(СписокВзаимодействий[0].Значение);
		КонецЕсли;
	Иначе
		
		Если ДанныеДляОбработки.Значение = НСтр("ru = 'Все'") Тогда
			Результат.ТекстСообщенияОшибка = НСтр("ru = 'Закладку без отбора создать нельзя.'");
			Возврат Результат;
		КонецЕсли;
		
		ГруппаОтбораПоПанелиНавигации = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(
		    ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список).Элементы,
		    "Отбор панели навигации");
		Если ГруппаОтбораПоПанелиНавигации = Неопределено Тогда
				Результат.ТекстСообщенияОшибка = НСтр("ru = 'Не выбран элемент для добавления в закладки.'");
				Возврат Результат;
		КонецЕсли;
		
		СкопироватьОтбор(КомпоновщикНастроек.Настройки.Отбор, ГруппаОтбораПоПанелиНавигации, Истина);
		Если ИмяЭлементаФормы = "РеквизитыПредмета" Тогда
			
			СтруктураОписание = ПолучитьСтруктуруОписанияПоПредставлению(ТекущееПредставлениеОтбораПоРеквизитуПредмета);
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Группировка) Тогда
				
				НаименованиеЗакладки = ?(ДанныеДляОбработки.Группировка.Пустая(),
				                       СтруктураОписание.ПредставлениеНеУказан,
				                       ТекущееПредставлениеОтбораПоРеквизитуПредмета + " = " + Строка(ДанныеДляОбработки.Группировка));
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма'"), НСтр("ru = 'Взаимодействия'"));
				Результат.НавигационнаяСсылкаЭлемента = ПолучитьНавигационнуюСсылку(ДанныеДляОбработки.Группировка);
				
			ИначеЕсли ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Значение) Тогда
				
				НаименованиеЗакладки = НСтр("ru = 'Тип предмета'") + " " + Строка(ДанныеДляОбработки.Значение);
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма'"), НСтр("ru = 'Взаимодействия'"));
				Результат.НавигационнаяСсылкаЭлемента = ПолучитьНавигационнуюСсылку(ДанныеДляОбработки.Значение);
				
			ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Предмет не указан'") Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Предмет не указан'"); 
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма без предмета'"), НСтр("ru = 'Взаимодействия без предмета'"));
				
			Иначе
				
				НаименованиеЗакладки = СтруктураОписание.ПредставлениеНеУказан;
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма'"), НСтр("ru = 'Взаимодействия'"));
				
			КонецЕсли;
			
		ИначеЕсли ИмяЭлементаФормы = "Предметы" Тогда
			
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Значение) Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Предмет'") + " = " + Строка(ДанныеДляОбработки.Значение); 
				Текст = ?(ТолькоПочта, НСтр("ru = 'Письма по предмету %1'"), НСтр("ru = 'Взаимодействия по предмету %1'"));
				Результат.ПредставлениеЭлемента = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ОбщегоНазначения.ПредметСтрокой(ДанныеДляОбработки.Значение));
				Результат.НавигационнаяСсылкаЭлемента = ПолучитьНавигационнуюСсылку(ДанныеДляОбработки.Значение);
				
			ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Не указан'") Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Предмет не указан'");
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма без предмета'"), НСтр("ru = 'Взаимодействия без предмета'"));
				
			ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Прочие вопросы'") Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Прочие вопросы'");
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Прочие письма'"), НСтр("ru = 'Прочие взаимодействия'"));
				
			Иначе
				
				НаименованиеЗакладки       = НСтр("ru = 'Тип предмета'") + " " + Строка(ДанныеДляОбработки.ОписаниеТипов.Типы()[0]);
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма по: %1'"), НСтр("ru = 'Взаимодействия по: %1'"));
				Результат.ПредставлениеЭлемента = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ПредставлениеЭлемента, 
						ДанныеДляОбработки.ОписаниеТипов.Типы()[0]);
				
			КонецЕсли;
			
		ИначеЕсли ИмяЭлементаФормы = "Свойства" Тогда
			
			Если ТипЗнч(ДанныеДляОбработки.Значение) = Тип("Строка") И 
				ДанныеДляОбработки.Значение = Нстр("ru = 'Не указан'") Тогда
				НаименованиеЗакладки       = ТекущееСвойствоПанелиНавигации.Наименование + " " + НСтр("ru = 'не указан'");
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма'"), НСтр("ru = 'Взаимодействия'"));
			Иначе
				НаименованиеЗакладки       = ТекущееСвойствоПанелиНавигации.Наименование +
					" = " + Строка(ДанныеДляОбработки.Значение);
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма с заданным свойством: %1'"), НСтр("ru = 'Взаимодействия с заданным свойством: %1'"));
				Результат.ПредставлениеЭлемента = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ПредставлениеЭлемента, ДанныеДляОбработки.Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяЭлементаФормы = "Категории" Тогда
			
			НаименованиеЗакладки       = НСтр("ru = 'Входит в категорию'") + " " + Строка(ДанныеДляОбработки.Значение);
			Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма из категории: %1'"), НСтр("ru = 'Взаимодействия из категории: %1'"));
			Результат.ПредставлениеЭлемента = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ПредставлениеЭлемента, ДанныеДляОбработки.Значение);
			
		ИначеЕсли ИмяЭлементаФормы = "Контакты" Тогда
			
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеДляОбработки.Значение) Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Контакт'") + " = " + Строка(ДанныеДляОбработки.Значение); 
				Текст = ?(ТолькоПочта, НСтр("ru = 'Письма по контакту %1'"), НСтр("ru = 'Взаимодействия по контакту %1'"));
				Результат.ПредставлениеЭлемента = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ОбщегоНазначения.ПредметСтрокой(ДанныеДляОбработки.Значение));
				Результат.НавигационнаяСсылкаЭлемента = ПолучитьНавигационнуюСсылку(ДанныеДляОбработки.Значение);
				
			ИначеЕсли ДанныеДляОбработки.Значение = НСтр("ru = 'Контакт не подобран'") Тогда
				
				НаименованиеЗакладки       = НСтр("ru = 'Контакт не указан'");
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма без подобранных контактов'"), НСтр("ru = 'Взаимодействия без подобранных контактов'"));
				
			Иначе
				
				НаименованиеЗакладки       = НСтр("ru = 'Тип контакта'") + " " + Строка(ДанныеДляОбработки.ОписаниеТипов.Типы()[0]);
				Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма по контактам: %1'"), НСтр("ru = 'Взаимодействия по контактам: %1'"));
				Результат.ПредставлениеЭлемента = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ПредставлениеЭлемента, 
						ДанныеДляОбработки.ОписаниеТипов.Типы()[0]);
				
			КонецЕсли;

		ИначеЕсли ИмяЭлементаФормы = "Папки" Тогда
			
			НаименованиеЗакладки       = НСтр("ru = 'В папке'") + " " + Строка(ДанныеДляОбработки.Значение);
			Результат.ПредставлениеЭлемента = ?(ТолькоПочта, НСтр("ru = 'Письма в папке: %1'"), НСтр("ru = 'Взаимодействия в папке: %1'"));
			Результат.ПредставлениеЭлемента = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ПредставлениеЭлемента, ДанныеДляОбработки.Значение);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗакладкиВзаимодействий.Ссылка,
	|	ЗакладкиВзаимодействий.Наименование,
	|	ЗакладкиВзаимодействий.КомпоновщикНастроек
	|ИЗ
	|	Справочник.ЗакладкиВзаимодействий КАК ЗакладкиВзаимодействий
	|ГДЕ
	|	НЕ ЗакладкиВзаимодействий.ЭтоГруппа
	|	И НЕ ЗакладкиВзаимодействий.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ПолучитьXML(КомпоновщикНастроек.ПолучитьНастройки()) =  ПолучитьXML(Выборка.КомпоновщикНастроек.Получить()) Тогда
			Результат.ТекстСообщенияОшибка = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Закладка с такими настройками уже существует : %1'"), Выборка.Наименование);
			Возврат Результат;
		КонецЕсли;
	КонецЦикла;
	
	Закладка = Справочники.ЗакладкиВзаимодействий.СоздатьЭлемент();
	Закладка.Владелец = Пользователи.АвторизованныйПользователь();
	Закладка.Наименование = НаименованиеЗакладки;
	Закладка.КомпоновщикНастроек = Новый ХранилищеЗначения(КомпоновщикНастроек.ПолучитьНастройки());
	Закладка.Записать();
	
	Элементы.Закладки.Обновить();
	
	Результат.ЭлементДобавлен = Истина;
	Возврат Результат;
	
КонецФункции

Функция ПолучитьXML(Значение)
	
	Запись = Новый ЗаписьXML();
	Запись.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Запись, Значение);
	Возврат Запись.Закрыть();
	
КонецФункции

// Установить предмет в выбранных взаимодействиях - серверная часть
//Параметры:
//  Взаимодействия - список выбранных взаимодействий
//  Предмет - устанавливаемый предмет взаимодействий
&НаСервере
Процедура УстановитьПредмет(Предмет, Знач ДанныеДляОбработки)
	
	ОбновлятьПанельНавигации = Ложь;
	
	Если ДанныеДляОбработки <> Неопределено Тогда
		
		Для Каждого Взаимодействие Из ДанныеДляОбработки Цикл
			Если ЗначениеЗаполнено(Взаимодействие)
				И Взаимодействие.Предмет <> Предмет Тогда
				Взаимодействия.УстановитьПредмет(Взаимодействие, Предмет);
				ОбновлятьПанельНавигации = Истина;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		МассивВзаимодействий = ПолучитьВзаимодействияОтборуСписка(Предмет, "Предмет");
		Если МассивВзаимодействий.Количество() > 0 Тогда
			ВзаимодействияВызовСервера.УстановитьПредметДляМассиваВзаимодействий(МассивВзаимодействий, Предмет, Истина);
			ОбновлятьПанельНавигации = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает реквизит "отработать после" в выбранных взаимодействиях - серверная часть
//Параметры:
//  Взаимодействия - список выбранных взаимодействий
//  Предмет - устанавливаемая дата отработки
&НаСервере
Процедура ОтложитьРассмотрение(ДатаОтработки, Знач ДанныеДляОбработки)
	
	ОбновлятьПанельНавигации = Ложь;
	
	Если ДанныеДляОбработки <> Неопределено Тогда
		
		Для Каждого Взаимодействие Из ДанныеДляОбработки Цикл
			Если ЗначениеЗаполнено(Взаимодействие)
				И Взаимодействие.РассмотретьПосле <> ДатаОтработки Тогда
				Объект = Взаимодействие.ПолучитьОбъект();
				Объект.РассмотретьПосле = ДатаОтработки;
				Объект.Записать();
				ОбновлятьПанельНавигации = Истина;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		МассивВзаимодействий = ПолучитьВзаимодействияОтборуСписка(ДатаОтработки, "РассмотретьПосле");
		
		Для Каждого Взаимодействие Из МассивВзаимодействий Цикл
			Объект = Взаимодействие.ПолучитьОбъект();
			Объект.РассмотретьПосле = ДатаОтработки;
			Объект.Записать();
			ОбновлятьПанельНавигации = Истина;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОбновлятьПанельНавигации Тогда
		ОбновитьПанельНавигации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовоеВзаимодействие(ТипОбъекта)
	
	ВзаимодействияКлиент.СоздатьНовоеВзаимодействие(ТипОбъекта);

КонецПроцедуры

&НаСервере
Функция ПолучитьВзаимодействияОтборуСписка(ЗначениеРеквизитаДопОтбора = Неопределено, ИмяРеквизитаДопОтбора = "")
	
	Запрос = Новый Запрос;
	
	СхемаОтбора = ЖурналыДокументов.Взаимодействия.ПолучитьМакет("СхемаОтборВзаимодействия");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаОтбора));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаОтбора.НастройкиПоУмолчанию);
	
	СкопироватьОтбор(КомпоновщикНастроек.Настройки.Отбор, ВзаимодействияКлиентСервер.ОтборДинамическогоСписка(Список));
	
	//Добавим отбор с видом сравнения НЕ для групповых команд
	Если ЗначениеРеквизитаДопОтбора <> Неопределено Тогда
		ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяРеквизитаДопОтбора);
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлементОтбора.ПравоеЗначение = ЗначениеРеквизитаДопОтбора;
	КонецЕсли;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаОтбора, КомпоновщикНастроек.ПолучитьНастройки()
		,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ТекстЗапроса = МакетКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных.Запрос;
	
	Для каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
		Запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура УстановитьРодителяУПапки(Папка, НовыйРодитель)
	
	Взаимодействия.УстановитьРодителяУПапки(Папка, НовыйРодитель);
	ОбновитьПанельНавигации();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПереносВПапкуМассиваПисем(ЗНАЧ МассивПисем, Папка)

	Взаимодействия.УстановитьПапкуДляМассиваПисем(МассивПисем, Папка);
	ОбновитьПанельНавигации(Папка);

КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Полнотекстовый поиск

&НаСервере
Процедура ОпределитьДоступностьПолнотекстовыйПоиск() 
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПолнотекстовыйПоиск") И 
		ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить Тогда
		ИсторияПоиска = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ИсторияПоискаВзаимодействия");
		Если ИсторияПоиска <> Неопределено Тогда
			Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(ИсторияПоиска);
		КонецЕсли;
		Если ИнформационнаяБазаФайловая Тогда
			ИндексППДАктуален = ПолнотекстовыйПоискСервер.ИндексПоискаАктуален();
		Иначе
			ИндексППДАктуален = Истина;
		КонецЕсли;
	Иначе
		Элементы.СтрокаПоиска.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Обновить индекс полнотекстового поиска.
&НаСервереБезКонтекста
Процедура ОбновитьИндексППД()

	УстановитьПривилегированныйРежим(Истина);
	ПолнотекстовыйПоиск.ОбновитьИндекс();

КонецПроцедуры

// Проверяет актуальность индекса и, в случае необходимости, актуализирует его.
&НаКлиенте
Процедура ПроверитьИндексППД()
	
	Если Не ИндексППДАктуален И ИнформационнаяБазаФайловая Тогда
		
		Результат = Вопрос(НСтр("ru='Индекс полнотекстового поиска неактуален. Обновить индекс?'"), РежимДиалогаВопрос.ДаНет); 
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			ПодключитьОбработчикОжидания("ОбновлениеИндексаПДД",0.2,Истина);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ВыполнитьПолнотекстовыйПоиск();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИндексаПДД()
	
	Состояние(НСтр("ru = 'Идет обновление индекса полнотекстового поиска ...'"));
	ОбновитьИндексППД();
	ИндексППДАктуален = Истина;
	Состояние(НСтр("ru = 'Обновление индекса полнотекстового поиска завершено...'"));
	
	ВыполнитьПолнотекстовыйПоиск();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПолнотекстовыйПоиск()
	
	КоличествоЭлементовНайдено = 0;
	ТекстОшибки = НайтиВзаимодействияПолнотекстовыйПоиск(КоличествоЭлементовНайдено);
	Если ТекстОшибки = Неопределено Тогда
		РасширенныйПоиск = Истина;
		ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Найдено %1 %2.'"),
		?(ТолькоПочта,НСтр("ru = 'писем'"), НСтр("ru = 'взаимодействий'")) + ": ",
		Строка(КоличествоЭлементовНайдено));
		ПоказатьОповещениеПользователя(ТекстОповещения);
		ТекущиеДанные = ТекущийЭлементСписок().ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ЗаполнитьОписаниеНайденоПП(ТекущийЭлементСписок().ТекущиеДанные.Ссылка);
		Иначе
			ОписаниеНайденоПП = "";
		КонецЕсли;
	Иначе
		Если НЕ ТекстОшибки = НСтр("ru = 'Ничего не найдено'") Тогда
			ПоказатьОповещениеПользователя(ТекстОшибки);
		Иначе
			РасширенныйПоиск = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиВзаимодействияПолнотекстовыйПоиск(КоличествоЭлементов)

	//настроить параметры поиска
	мОбластьПоиска = Новый Массив;
	РазмерПорции = 200;
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска,РазмерПорции);
	мОбластьПоиска.Добавить(Метаданные.Документы.ЭлектронноеПисьмоВходящее);
	мОбластьПоиска.Добавить(Метаданные.Документы.ЭлектронноеПисьмоИсходящее);
	мОбластьПоиска.Добавить(Метаданные.Справочники.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы);
	мОбластьПоиска.Добавить(Метаданные.Справочники.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы);
	мОбластьПоиска.Добавить(Метаданные.РегистрыСведений.ПредметыПапкиВзаимодействий);

	Если Не ТолькоПочта Тогда
		мОбластьПоиска.Добавить(Метаданные.Документы.ТелефонныйЗвонок);
		мОбластьПоиска.Добавить(Метаданные.Документы.Встреча);
		мОбластьПоиска.Добавить(Метаданные.Документы.ЗапланированноеВзаимодействие);
		мОбластьПоиска.Добавить(Метаданные.Справочники.ТелефонныйЗвонокПрисоединенныеФайлы);
		мОбластьПоиска.Добавить(Метаданные.Справочники.ВстречаПрисоединенныеФайлы);
		мОбластьПоиска.Добавить(Метаданные.Справочники.ЗапланированноеВзаимодействиеПрисоединенныеФайлы);
	КонецЕсли;
	СписокПоиска.ОбластьПоиска = мОбластьПоиска;

	СписокПоиска.ПерваяЧасть();

	//возврат, если поиск слишком результативен
	Если СписокПоиска.СлишкомМногоРезультатов() Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Поиск",
			Документы.ЭлектронноеПисьмоВходящее.ПустаяСсылка(),
			ВидСравненияКомпоновкиДанных.Равно,, Истина);
		Элементы.СтрокаПоиска.ЦветФона = ЦветаСтиля.ОшибкаПолнотекстовыйПоискФон;
		Возврат НСтр("ru = 'Слишком много результатов, уточните запрос.'");
	КонецЕсли;

	//возврат, если поиск не результативен
	Если СписокПоиска.ПолноеКоличество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Поиск",
			Документы.ЭлектронноеПисьмоВходящее.ПустаяСсылка(),
			ВидСравненияКомпоновкиДанных.Равно,, Истина);
		Элементы.СтрокаПоиска.ЦветФона = ЦветаСтиля.ОшибкаПолнотекстовыйПоискФон;
		Возврат НСтр("ru = 'Ничего не найдено'");
	КонецЕсли;
	
	КоличествоЭлементов = СписокПоиска.ПолноеКоличество();
	
	НачальнаяПозиция = 0;
	КонечнаяПозиция = ?(КоличествоЭлементов > РазмерПорции, РазмерПорции, КоличествоЭлементов)-1;
	ЕстьСледующаяПорция = Истина;

	//обработать по порциям результаты ППД
	Пока ЕстьСледующаяПорция Цикл
		Для СчетчикЭлементов = 0 По КонечнаяПозиция Цикл
			
			Элемент = СписокПоиска.Получить(СчетчикЭлементов);
			НоваяСтрока = ОписанияНайденоПП.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Элемент);
			Если ВзаимодействияКлиентСервер.ЯвляетсяПрисоединеннымФайломВзаимодействий(Элемент.Значение) Тогда
				НоваяСтрока.Взаимодействие = Элемент.Значение.ВладелецФайла;
			ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("РегистрСведенийКлючЗаписи.ПредметыПапкиВзаимодействий") Тогда
				НоваяСтрока.Взаимодействие =  Элемент.Значение.Взаимодействие;
			Иначе
				НоваяСтрока.Взаимодействие = Элемент.Значение;
			КонецЕсли;
			
		КонецЦикла;
		НачальнаяПозиция = НачальнаяПозиция + РазмерПорции;
		ЕстьСледующаяПорция = (НачальнаяПозиция < КоличествоЭлементов - 1);
		Если ЕстьСледующаяПорция Тогда
			КонечнаяПозиция = 
			?(КоличествоЭлементов > НачальнаяПозиция + РазмерПорции, РазмерПорции,
			КоличествоЭлементов - НачальнаяПозиция) - 1;
			СписокПоиска.СледующаяЧасть();
		КонецЕсли;
	КонецЦикла;
	
	Если ОписанияНайденоПП.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Поиск",
			Документы.ЭлектронноеПисьмоВходящее.ПустаяСсылка(),
			ВидСравненияКомпоновкиДанных.Равно,, Истина);
		Элементы.СтрокаПоиска.ЦветФона = ЦветаСтиля.ОшибкаПолнотекстовыйПоискФон;
		Возврат НСтр("ru = 'Ничего не найдено.'");
	КонецЕсли;
	
	//удалим элемент из истории поиска если он там был
	НомерНайденногоЭлементаСписка = Элементы.СтрокаПоиска.СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	Пока НомерНайденногоЭлементаСписка <> Неопределено Цикл
		Элементы.СтрокаПоиска.СписокВыбора.Удалить(НомерНайденногоЭлементаСписка);
		НомерНайденногоЭлементаСписка = Элементы.СтрокаПоиска.СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	КонецЦикла;
	
	//и поставим его на первое место
	Элементы.СтрокаПоиска.СписокВыбора.Вставить(0, СтрокаПоиска);
	Пока Элементы.СтрокаПоиска.СписокВыбора.Количество() > 100 Цикл
		Элементы.СтрокаПоиска.СписокВыбора.Удалить(Элементы.СтрокаПоиска.СписокВыбора.Количество() - 1);
	КонецЦикла;
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ИсторияПоискаВзаимодействия", 
		, 
		Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Поиск",
			ОписанияНайденоПП.Выгрузить(,"Взаимодействие").ВыгрузитьКолонку("Взаимодействие"),
			ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
			
	Элементы.СтрокаПоиска.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьОписаниеНайденоПП(Взаимодействие)

	СтрокаОписания = ОписанияНайденоПП.НайтиСтроки(Новый Структура("Взаимодействие",Взаимодействие));
	Если СтрокаОписания.Количество() = 0 Тогда
		ОписаниеНайденоПП = "";
	Иначе
		СтрокаТаблицыСОписанием = СтрокаОписания[0];
		Если ВзаимодействияКлиентСервер.ЯвляетсяПрисоединеннымФайломВзаимодействий(СтрокаТаблицыСОписанием.Значение) Тогда
			ТекстНайдено = НСтр("ru = 'Найдено в присоединенном файле'");
		Иначе
			ТекстНайдено = НСтр("ru = 'Найдено в'");
		КонецЕсли;
		
		ОписаниеНайденоПП = ТекстНайдено + " - " + СтрокаТаблицыСОписанием.Описание;
	КонецЕсли;

КонецПроцедуры 

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруОписанияПоПредставлению(Представление)
	
	МассивОписаний = 
		ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивОписанияВидовНавигацииОтРеквизитовПредмета();
	
	Для каждого ЭлементМассиваОписаний Из МассивОписаний Цикл
		
		Если ЭлементМассиваОписаний.Представление = Представление Тогда
			
			Возврат ЭлементМассиваОписаний;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНомерОписанияВМассивеПоПредставлению(Представление)

	МассивОписаний = 
		ВзаимодействияКлиентСерверПовтИспПереопределяемый.ПолучитьМассивОписанияВидовНавигацииОтРеквизитовПредмета();
	
	Для инд = 0 По МассивОписаний.Количество() - 1 Цикл
		
		Если МассивОписаний[инд].Представление = Представление Тогда
			
			Возврат инд;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции

&НаСервере
Функция НайтиСтрокуВДанныхФормыКоллекция(ГдеИскать, Значение, Колонка)

	НайденныеСтроки = ГдеИскать.НайтиСтроки(Новый Структура(Колонка, Значение));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции

// Находит первую строку в заданной колонке, с заданным значением в коллекции ДанныеФормыДерево
&НаСервере
Функция НайтиСтрокуВДанныхФормыДерево(ГдеИскать, Значение, Колонка, ИскатьВПодчиненных)
	
	ЭлементыДерева = ГдеИскать.ПолучитьЭлементы();
	
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева[Колонка] = Значение Тогда
			Возврат ЭлементДерева.ПолучитьИдентификатор();
		ИначеЕсли  ИскатьВПодчиненных Тогда
			НайденныйИдентификаторСтроки =  НайтиСтрокуВДанныхФормыДерево(ЭлементДерева, Значение,Колонка, ИскатьВПодчиненных);
			Если НайденныйИдентификаторСтроки >=0 Тогда
				Возврат НайденныйИдентификаторСтроки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат -1;
	
КонецФункции

&НаКлиенте
Функция ТекущийЭлементСписок()
	
	Если Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокОбычная Тогда
		
		Возврат Элементы.Список;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокВходящие Тогда
		
		Возврат Элементы.СписокВходящие;
		
	ИначеЕсли Элементы.СтраницыСписок.ТекущаяСтраница = Элементы.СтраницаСписокИсходящие Тогда
		
		Возврат Элементы.СписокИсходящие;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ТекущийЭлементСписокПанелиНавигации()

	Если Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКонтакт Тогда
		Возврат Элементы.Контакты;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПредмет Тогда
		Возврат Элементы.Предметы;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаПапки Тогда
		Возврат Элементы.Папки;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаСвойства Тогда
		Возврат Элементы.Свойства;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаРеквизитыПредмета Тогда
		Возврат Элементы.РеквизитыПредмета;
	ИначеЕсли Элементы.СтраницыПанелиНавигации.ТекущаяСтраница = Элементы.СтраницаКатегории Тогда
		Возврат Элементы.Категории;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция ВыборКорректен(ИмяСписка, ПоТекущейСтроке = Ложь)
	
	ТипГруппировка = Тип("СтрокаГруппировкиДинамическогоСписка");
	Если ПоТекущейСтроке Тогда
		
		Если ТипЗнч(Элементы[ИмяСписка].ТекущаяСтрока) <> ТипГруппировка И Элементы[ИмяСписка].ТекущиеДанные <> Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
	Иначе
		
		Для Каждого Элемент Из Элементы[ИмяСписка].ВыделенныеСтроки Цикл
			Если ТипЗнч(Элемент) <> ТипГруппировка Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции 

&НаСервере
Процедура СкопироватьОтбор(Приемник, Источник, УдалятьПредставлениеГруппы = Ложь, УдалятьНеиспользуемые = Истина, НеВключатьОтборПанелиНавигации = Ложь)
	
	Для каждого ЭлементОтбораИсточник Из Источник.Элементы Цикл
		
		Если УдалятьНеиспользуемые И (Не ЭлементОтбораИсточник.Использование) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НеВключатьОтборПанелиНавигации И 
			ТипЗнч(ЭлементОтбораИсточник) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") И
			ЭлементОтбораИсточник.Представление = "Отбор панели навигации" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ТипЗнч(ЭлементОтбораИсточник) = Тип("ЭлементОтбораКомпоновкиДанных") И 
			ЭлементОтбораИсточник.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поиск") Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементОтбора = Приемник.Элементы.Добавить(ТипЗнч(ЭлементОтбораИсточник));
		ЗаполнитьЗначенияСвойств(ЭлементОтбора, ЭлементОтбораИсточник);
		Если ТипЗнч(ЭлементОтбораИсточник) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Если УдалятьПредставлениеГруппы Тогда
				ЭлементОтбора.Представление = "";
			КонецЕсли;
			СкопироватьОтбор(ЭлементОтбора, ЭлементОтбораИсточник);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
