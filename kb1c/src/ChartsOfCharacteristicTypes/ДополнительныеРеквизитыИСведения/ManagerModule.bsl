#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает имена блокруемых реквизитов для подсистемы
// "Запрет редактирования реквизитов объектов".
// 
// Возвращаемое значание:
//  Массив Строк - имена блокируемых реквизитов.
// 
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ТипЗначения");
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Изменяет настройку свойства с общего или общего списка значений
// на отдельное свойство с отдельным списком значений.
//
Процедура ИзменитьНастройкуСвойства(Параметры, АдресХранилища) Экспорт
	
	Свойство            = Параметры.Свойство;
	ТекущийНаборСвойств = Параметры.ТекущийНаборСвойств;
	
	ОткрытьСвойство = Неопределено;
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Свойство);
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ТекущийНаборСвойств);
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ЗначенияСвойствОбъектов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ЗначенияСвойствОбъектовИерархия");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		
		СвойствоОбъект = Свойство.ПолучитьОбъект();
		
		Запрос = Новый Запрос;
		Если ЗначениеЗаполнено(СвойствоОбъект.ВладелецДополнительныхЗначений) Тогда
			Запрос.УстановитьПараметр("Владелец", СвойствоОбъект.ВладелецДополнительныхЗначений);
			СвойствоОбъект.ВладелецДополнительныхЗначений = Неопределено;
			СвойствоОбъект.Записать();
		Иначе
			Запрос.УстановитьПараметр("Владелец", Свойство);
			НовыйОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйОбъект, СвойствоОбъект, , "Родитель");
			СвойствоОбъект = НовыйОбъект;
			СвойствоОбъект.НаборСвойств = ТекущийНаборСвойств;
			СвойствоОбъект.Записать();
			
			НаборСвойствОбъект = ТекущийНаборСвойств.ПолучитьОбъект();
			Если СвойствоОбъект.ЭтоДополнительноеСведение Тогда
				НайденнаяСтрока = НаборСвойствОбъект.ДополнительныеСведения.Найти(Свойство, "Свойство");
				Если НайденнаяСтрока = Неопределено Тогда
					НаборСвойствОбъект.ДополнительныеСведения.Добавить().Свойство = СвойствоОбъект.Ссылка;
				Иначе
					НайденнаяСтрока.Свойство = СвойствоОбъект.Ссылка;
					НайденнаяСтрока.ПометкаУдаления = Ложь;
				КонецЕсли;
			Иначе
				НайденнаяСтрока = НаборСвойствОбъект.ДополнительныеРеквизиты.Найти(Свойство, "Свойство");
				Если НайденнаяСтрока = Неопределено Тогда
					НаборСвойствОбъект.ДополнительныеРеквизиты.Добавить().Свойство = СвойствоОбъект.Ссылка;
				Иначе
					НайденнаяСтрока.Свойство = СвойствоОбъект.Ссылка;
					НайденнаяСтрока.ПометкаУдаления = Ложь;
				КонецЕсли;
			КонецЕсли;
			НаборСвойствОбъект.Записать();
		КонецЕсли;
		
		ОткрытьСвойство = СвойствоОбъект.Ссылка;
		
		МетаданныеВладельца = УправлениеСвойствамиСлужебный.МетаданныеВладельцаЗначенийСвойствНабора(
			СвойствоОбъект.НаборСвойств, Ложь);
		
		Если МетаданныеВладельца = Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при изменении настройки свойства %1.
				           |Набор свойств %2 не связан ни с одним владельцем значений свойств.'"),
				Свойство,
				СвойствоОбъект.НаборСвойств);
		КонецЕсли;
		
		ПолноеИмяВладельца = МетаданныеВладельца.ПолноеИмя();
		
		Если НЕ УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(СвойствоОбъект.ТипЗначения) Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при изменении настройки свойства %1.
				           |Тип значения не содержит дополнительных значений.'"),
				Свойство);
		КонецЕсли;
		
		Если СвойствоОбъект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
			ИмяСправочника = "ЗначенияСвойствОбъектов";
			ЭтоГруппа      = "Значения.ЭтоГруппа";
		Иначе
			ИмяСправочника = "ЗначенияСвойствОбъектовИерархия";
			ЭтоГруппа      = "Ложь КАК ЭтоГруппа";
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Значения.Ссылка КАК Ссылка,
		|	Значения.Родитель КАК РодительСсылки,
		|	Значения.ЭтоГруппа,
		|	Значения.ПометкаУдаления,
		|	Значения.Наименование,
		|	Значения.Вес
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектов КАК Значения
		|ГДЕ
		|	Значения.Владелец = &Владелец
		|ИТОГИ ПО
		|	Ссылка ИЕРАРХИЯ";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗначенияСвойствОбъектов", ИмяСправочника);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Значения.ЭтоГруппа", ЭтоГруппа);
		
		Выгрузка = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		СоответствиеСсылок = Новый Соответствие;
		
		СоздатьГруппыИЗначения(Выгрузка.Строки, СоответствиеСсылок, ИмяСправочника, СвойствоОбъект.Ссылка);
		
		
		Если Свойство <> СвойствоОбъект.Ссылка
		 ИЛИ СоответствиеСсылок.Количество() > 0 Тогда
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДополнительныеСведения");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Свойство", Свойство);
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДополнительныеСведения");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Свойство", СвойствоОбъект.Ссылка);
			
			// Если исходное свойство общее, тогда нужно получить список наборов
			// объекта (по каждой ссылке) и, если заменяемое общее свойство есть
			// не только в целевом наборе, тогда добавить новое свойство и значение.
			//
			// Для исходных общих свойств процедура может быть особенно долгой,
			// т.к. требует анализа наборов для каждой ссылки (из-за наличия переопределения).
			
			ВладелецСДополнительнымиРеквизитами = Ложь;
			
			Если УправлениеСвойствамиСлужебный.ЭтоОбъектМетаданныхСДополнительнымиРеквизитами(МетаданныеВладельца) Тогда
				ВладелецСДополнительнымиРеквизитами = Истина;
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяВладельца);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			ТребуетсяАнализНаборовСсылки = Ложь;
			
			Если Свойство <> СвойствоОбъект.Ссылка Тогда
				ИмяПредопределенного = СтрЗаменить(МетаданныеВладельца.ПолноеИмя(), ".", "_");
				Попытка
					КорневойНабор = Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяПредопределенного];
				Исключение
					КорневойНабор = Неопределено;
				КонецПопытки;
				
				Если КорневойНабор <> Неопределено Тогда
					Если ЗначениеЗаполнено(ОбщегоНазначения.ПолучитьЗначениеРеквизита(КорневойНабор, "ЭтоГруппа")) = Истина Тогда
						ТребуетсяАнализНаборовСсылки = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ТребуетсяАнализНаборовСсылки Тогда
				ЗапросАнализа = Новый Запрос;
				ЗапросАнализа.УстановитьПараметр("ОбщееСвойство", Свойство);
				ЗапросАнализа.УстановитьПараметр("НаборНовогоСвойства", СвойствоОбъект.НаборСвойств);
				ЗапросАнализа.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЗначениеИстина
				|ИЗ
				|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыСвойств
				|ГДЕ
				|	НаборыСвойств.Ссылка <> &НаборНовогоСвойства
				|	И НаборыСвойств.Ссылка В(&ВсеНаборыОбъекта)
				|	И НаборыСвойств.Свойство = &ОбщееСвойство";
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			ТаблицаЗначений = Новый ТаблицаЗначений;
			ТаблицаЗначений.Колонки.Добавить("Значение", Новый ОписаниеТипов(
				"СправочникСсылка." + ИмяСправочника));
			
			Для каждого КлючИЗначение Из СоответствиеСсылок Цикл
				ТаблицаЗначений.Добавить().Значение = КлючИЗначение.Ключ;
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаЗначений.Значение КАК Значение
			|ПОМЕСТИТЬ СтарыеЗначения
			|ИЗ
			|	&ТаблицаЗначений КАК ТаблицаЗначений
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Значение";
			Запрос.Выполнить();
			
			Запрос.УстановитьПараметр("Свойство", Свойство);
			
			// Замена дополнительных сведений.
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1000
			|	ДополнительныеСведения.Объект
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтарыеЗначения КАК СтарыеЗначения
			|		ПО (ТИПЗНАЧЕНИЯ(ДополнительныеСведения.Объект) = ТИП(Справочник.ЗначенияСвойствОбъектов))
			|			И (НЕ ДополнительныеСведения.Объект В (&ОбработанныеОбъекты))
			|			И (ДополнительныеСведения.Свойство = &Свойство)
			|			И ДополнительныеСведения.Значение = СтарыеЗначения.Значение";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.ЗначенияСвойствОбъектов", ПолноеИмяВладельца);
			
			НаборСтаройЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
			НаборНовойЗаписи  = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
			НаборНовойЗаписи.Добавить();
			
			ОбработанныеОбъекты = Новый Массив;
			
			Пока Истина Цикл
				Запрос.УстановитьПараметр("ОбработанныеОбъекты", ОбработанныеОбъекты);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Количество() = 0 Тогда
					Прервать;
				КонецЕсли;
				Пока Выборка.Следующий() Цикл
					Заменить = Истина;
					Если ТребуетсяАнализНаборовСсылки Тогда
						ЗапросАнализа.УстановитьПараметр("ВсеНаборыОбъекта",
							УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(
								Выборка.Ссылка).ВыгрузитьКолонку("Набор"));
						Заменить = ЗапросАнализа.Выполнить().Пустой();
					КонецЕсли;
					НаборСтаройЗаписи.Отбор.Объект.Установить(Выборка.Объект);
					НаборСтаройЗаписи.Отбор.Свойство.Установить(Свойство);
					НаборСтаройЗаписи.Прочитать();
					Если НаборСтаройЗаписи.Количество() > 0 Тогда
						НаборНовойЗаписи[0].Объект   = Выборка.Объект;
						НаборНовойЗаписи[0].Свойство = СвойствоОбъект.Ссылка;
						НаборНовойЗаписи[0].Значение = СоответствиеСсылок[НаборСтаройЗаписи[0].Значение];
						НаборНовойЗаписи.Отбор.Объект.Установить(Выборка.Объект);
						НаборНовойЗаписи.Отбор.Свойство.Установить(НаборНовойЗаписи[0].Свойство);
						Если Заменить Тогда
							НаборСтаройЗаписи.Очистить();
							НаборСтаройЗаписи.ОбменДанными.Загрузка = Истина;
							НаборСтаройЗаписи.Записать();
						Иначе
							ОбработанныеОбъекты.Добавить(Выборка.Объект);
						КонецЕсли;
						НаборНовойЗаписи.ОбменДанными.Загрузка = Истина;
						НаборНовойЗаписи.Записать();
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			// Замена дополнительных реквизитов.
			
			Если ВладелецСДополнительнымиРеквизитами Тогда
				
				Если ТребуетсяАнализНаборовСсылки Тогда
					ЗапросАнализа = Новый Запрос;
					ЗапросАнализа.УстановитьПараметр("ОбщееСвойство", Свойство);
					ЗапросАнализа.УстановитьПараметр("НаборНовогоСвойства", СвойствоОбъект.НаборСвойств);
					ЗапросАнализа.Текст =
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	ИСТИНА КАК ЗначениеИстина
					|ИЗ
					|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыСвойств
					|ГДЕ
					|	НаборыСвойств.Ссылка <> &НаборНовогоСвойства
					|	И НаборыСвойств.Ссылка В(&ВсеНаборыОбъекта)
					|	И НаборыСвойств.Свойство = &ОбщееСвойство";
				КонецЕсли;
				
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1000
				|	ТекущаяТаблица.Ссылка КАК Ссылка
				|ИЗ
				|	ИмяТаблицы КАК ТекущаяТаблица
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтарыеЗначения КАК СтарыеЗначения
				|		ПО (НЕ ТекущаяТаблица.Ссылка В (&ОбработанныеОбъекты))
				|			И (ТекущаяТаблица.Свойство = &Свойство)
				|			И ТекущаяТаблица.Значение = СтарыеЗначения.Значение";
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ПолноеИмяВладельца + ".ДополнительныеРеквизиты");
				
				ОбработанныеОбъекты = Новый Массив;
				
				Пока Истина Цикл
					Запрос.УстановитьПараметр("ОбработанныеОбъекты", ОбработанныеОбъекты);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Количество() = 0 Тогда
						Прервать;
					КонецЕсли;
					Пока Выборка.Следующий() Цикл
						ТекущийОбъект = Выборка.Ссылка.ПолучитьОбъект();
						Заменить = Истина;
						Если ТребуетсяАнализНаборовСсылки Тогда
							ЗапросАнализа.УстановитьПараметр("ВсеНаборыОбъекта",
								УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(
									Выборка.Ссылка).ВыгрузитьКолонку("Набор"));
							Заменить = ЗапросАнализа.Выполнить().Пустой();
						КонецЕсли;
						Для каждого Строка Из ТекущийОбъект.ДополнительныеРеквизиты Цикл
							Если Строка.Свойство = Свойство Тогда
								Если Заменить Тогда
									Если Строка.Свойство <> СвойствоОбъект.Ссылка Тогда
										Строка.Свойство = СвойствоОбъект.Ссылка;
									КонецЕсли;
									Если Строка.Значение <> СоответствиеСсылок[Строка.Значение] Тогда
										Строка.Значение = СоответствиеСсылок[Строка.Значение];
									КонецЕсли;
								Иначе
									НоваяСтрока = ТекущийОбъект.ДополнительныеРеквизиты.Добавить();
									НоваяСтрока.Свойство = СвойствоОбъект.Ссылка;
									НоваяСтрока.Значение = СоответствиеСсылок[Строка.Значение];
									ОбработанныеОбъекты.Добавить(ТекущийОбъект.Ссылка);
									Прервать;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						Если ТекущийОбъект.Модифицированность() Тогда
							ТекущийОбъект.ОбменДанными.Загрузка = Истина;
							ТекущийОбъект.Записать();
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Запрос.МенеджерВременныхТаблиц.Закрыть();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(ОткрытьСвойство, АдресХранилища);
	
КонецПроцедуры

Процедура СоздатьГруппыИЗначения(Строки, СоответствиеСсылок, ИмяСправочника, Свойство, СтарыйРодитель = Неопределено)
	
	Для каждого Строка Из Строки Цикл
		Если Строка.Ссылка = СтарыйРодитель Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ЭтоГруппа = Истина Тогда
			НовыйОбъект = Справочники[ИмяСправочника].СоздатьГруппу();
			ЗаполнитьЗначенияСвойств(НовыйОбъект, Строка, "Наименование, ПометкаУдаления");
		Иначе
			НовыйОбъект = Справочники[ИмяСправочника].СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйОбъект, Строка, "Наименование, Вес, ПометкаУдаления");
		КонецЕсли;
		НовыйОбъект.Владелец = Свойство;
		Если ЗначениеЗаполнено(Строка.РодительСсылки) Тогда
			НовыйОбъект.Родитель = СоответствиеСсылок[Строка.РодительСсылки];
		КонецЕсли;
		НовыйОбъект.Записать();
		СоответствиеСсылок.Вставить(Строка.Ссылка, НовыйОбъект.Ссылка);
		
		СоздатьГруппыИЗначения(Строка.Строки, СоответствиеСсылок, ИмяСправочника, Свойство, Строка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
