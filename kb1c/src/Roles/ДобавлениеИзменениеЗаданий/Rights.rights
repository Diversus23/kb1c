<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://v8.1c.ru/8.2/roles" xsi:type="Rights">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
	<object>
		<name>Task.ЗадачаИсполнителя.Command.Выполнено</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.Задания</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>SessionParameter.ТекущийПользователь</name>
		<right>
			<name>Get</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "Задача.ЗадачаИсполнителя", "Чтение", "",
"",
"",
"Объект","Т.БизнесПроцесс","ИЛИ",
"Пользователи","Т.Автор","ИЛИ",
"Пользователи","Т.Исполнитель","ИЛИ",
"Пользователи","Т.ГруппаИсполнителейЗадач","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")

</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Command.ВсеЗадачи</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "РегистрСведений.ДанныеБизнесПроцессов", "Чтение", "",
"",
"",
"Объект","Т.БизнесПроцесс","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")
</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Command.МоиЗадачи</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Report.БизнесПроцессы</name>
		<right>
			<name>Use</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный( "БизнесПроцесс.Задание", "Чтение", "",
"",
"",
"Пользователи","Т.Автор","ИЛИ",
"Пользователи","Т.Исполнитель","ИЛИ",
"Пользователи","Т.Проверяющий","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")
</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениям( "БизнесПроцесс.Задание", "Добавление", "",
"Пользователи","Автор", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениям( "БизнесПроцесс.Задание", "Изменение", "",
"Пользователи","Автор", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveActivate</name>
			<value>true</value>
		</right>
		<right>
			<name>Start</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveStart</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Command.Перенаправить</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Command.МоиБизнесПроцессы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ПоЗначениям</name>
		<condition>// ПоЗначениям ( Таблица, Право, Модификатор, В1,П1, В2,Р2, ...,  В(n), П(n)).
// №  параметра:       1,     2,           3,  4, 5,  6, 7, ..., 2+n*2,3+n*2 .
// Читается так: "ограничение доступа по значениям".
// Параметры:
//     Таблица -   Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Право     - Одна из строк "Чтение", "Добавление", "Изменение", "Удаление".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника. 
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     В(n)      - Вид доступа (имя предопределённого элемента ПланВидовХарактеристик.ВидыДоступа).
//                 Когда В(n) = "Условие" (или ""), тогда Р(n) содержит строку условия на языке запросов, например
//                  "Т.Автор = &amp;ТекущийПользователь",
//                  "ТипЗначения(Т.Владелец) = Тип(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Если по объекту с таблицей Таблица будет выполняться запись наборов значений доступа,
//                  то условие должно проверять значения только из объекта и/или параметров сеанса, например, &amp;ТекущийПользователь.
//                 Когда В(n) = "ПравоЧтения" ИЛИ "ПравоДобавления" ИЛИ "ПравоИзменения",
//                  выполняется проверка наличия права на таблицу значения Т.Р(n).
//     П(n)      - Поле значения, проверяемого по виду доступа, кроме случая В(n) = "Условие" (или "").
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И &lt;Условие по группе параметров 2&gt; И ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениям("Документ.ПоступлениеТоваровИУслуг", "Чтение", "",
//      "Организации","Организация",
//      "Поставщики","Контрагент", "","", ...)

// Проверка правильности параметра Модификатор.
#Если НЕ ("#Параметр(3)" = "НеОграничиватьДоступКГруппам" ИЛИ "#Параметр(3)" = "") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверныйМодификатор: #Параметр(3)
#КонецЕсли
// Проверка правильности параметра Право.
#Если НЕ ("#Параметр(2)" = "Чтение"    ИЛИ "#Параметр(2)" = "Добавление" ИЛИ
          "#Параметр(2)" = "Изменение" ИЛИ "#Параметр(2)" = "Удаление") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей.
#Если НЕ &amp;ОграничиватьДоступПоВиду = "" #Тогда

Т ГДЕ // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" #Тогда
    Т.ЭтоГруппа ИЛИ
#КонецЕсли

Истина В
(   // Проверка права пользователя на текущую таблицу в целом.
    // Права на таблицы формируются по составу ролей профиля группы доступа.
    Выбрать Первые 1 Истина
    ИЗ
        Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
        ПО
              СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
            И Истина В
              (
                Выбрать Первые 1 Истина
                ИЗ
                    РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
                    ГДЕ
                          ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
                        И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                    #Если НЕ "#Параметр(2)" = "Чтение" #Тогда
                        И ТаблицыГруппДоступа.#Параметр(2)
                    #КонецЕсли
              )
            И ГруппыДоступа.Ссылка В
              (
                Выбрать
                    ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
                ИЗ
                    Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                    ПО
                          СоставыГруппПользователей.Используется
                    #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        И СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                    #Иначе
                        И СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                    #КонецЕсли
                        И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
              )
    ГДЕ
          ( // Поиск значений заданных полей в группах доступа (пользователей) по заданным видам доступа.

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(4)" = "Условие" ИЛИ "#Параметр(4)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    ( #Параметр(5) )
#ИначеЕсли "#Параметр(4)" = "ПравоЧтения" ИЛИ "#Параметр(4)" = "ПравоДобавления" ИЛИ "#Параметр(4)" = "ПравоИзменения" #Тогда
      #Параметр(5) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(5))
        #Если "#Параметр(4)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(4)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(4) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(5)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(5)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(4)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(5)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(4)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(5)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(5)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(4)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(5)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(5)
        #ИначеЕсли "Т.#Параметр(5)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(4)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(4) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(5)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(4) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(4) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(5)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(4)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(5)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(5)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(4))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#Иначе
    Истина
#КонецЕсли

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(6)" = "" И "#Параметр(7)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(6)" = "Условие" ИЛИ "#Параметр(6)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" ИЛИ "#Параметр(6)" = "ПравоДобавления" ИЛИ "#Параметр(6)" = "ПравоИзменения" #Тогда
    И #Параметр(7) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(7))
        #Если "#Параметр(6)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(6)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(6) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(7)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(7)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(6)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(7)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(6)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(7)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(7)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(6)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(7)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(7)
        #ИначеЕсли "Т.#Параметр(7)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(6)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(7)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(6) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(7)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(6)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(7)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(7)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(8)" = "" И "#Параметр(9)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(8)" = "Условие" ИЛИ "#Параметр(8)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(9) )
#ИначеЕсли "#Параметр(8)" = "ПравоЧтения" ИЛИ "#Параметр(8)" = "ПравоДобавления" ИЛИ "#Параметр(8)" = "ПравоИзменения" #Тогда
    И #Параметр(9) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(9))
        #Если "#Параметр(8)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(8)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(8) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(9)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(9)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(8)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(9)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(8)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(9)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(9)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(8)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(9)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(9)
        #ИначеЕсли "Т.#Параметр(9)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(8)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(8) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(9)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(8) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(8) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(9)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(8)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(9)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(9)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(8))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(10)" = "" И "#Параметр(11)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(10)" = "Условие" ИЛИ "#Параметр(10)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(11) )
#ИначеЕсли "#Параметр(10)" = "ПравоЧтения" ИЛИ "#Параметр(10)" = "ПравоДобавления" ИЛИ "#Параметр(10)" = "ПравоИзменения" #Тогда
    И #Параметр(11) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(11))
        #Если "#Параметр(10)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(10)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(10) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(11)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(11)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(10)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(11)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(10)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(11)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(11)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(10)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(11)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(11)
        #ИначеЕсли "Т.#Параметр(11)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(10)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(10) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(11)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(10) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(10) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(11)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(10)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(11)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(11)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(10))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" ИЛИ "#Параметр(12)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" ИЛИ "#Параметр(12)" = "ПравоДобавления" ИЛИ "#Параметр(12)" = "ПравоИзменения" #Тогда
    И #Параметр(13) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(13))
        #Если "#Параметр(12)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(12)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(12) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(13)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(13)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(12)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(13)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(12)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(13)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(13)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(12)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(13)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(13)
        #ИначеЕсли "Т.#Параметр(13)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(12)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(13)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(12) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(13)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(12)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(13)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(13)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(14)" = "" И "#Параметр(15)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(14)" = "Условие" ИЛИ "#Параметр(14)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(15) )
#ИначеЕсли "#Параметр(14)" = "ПравоЧтения" ИЛИ "#Параметр(14)" = "ПравоДобавления" ИЛИ "#Параметр(14)" = "ПравоИзменения" #Тогда
    И #Параметр(15) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(15))
        #Если "#Параметр(14)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(14)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(14) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(15)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(15)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(14)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(15)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(14)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(15)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(15)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(14)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(15)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(15)
        #ИначеЕсли "Т.#Параметр(15)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(14)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(14) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(15)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(14) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(14) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(15)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(14)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(15)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(15)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(14))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(16)" = "" И "#Параметр(17)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(16)" = "Условие" ИЛИ "#Параметр(16)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(17) )
#ИначеЕсли "#Параметр(16)" = "ПравоЧтения" ИЛИ "#Параметр(16)" = "ПравоДобавления" ИЛИ "#Параметр(16)" = "ПравоИзменения" #Тогда
    И #Параметр(17) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(17))
        #Если "#Параметр(16)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(16)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(16) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(17)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(17)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(16)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(17)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(16)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(17)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(17)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(16)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(17)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(17)
        #ИначеЕсли "Т.#Параметр(17)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(16)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(16) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(17)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(16) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(16) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(17)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(16)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(17)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(17)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(16))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" ИЛИ "#Параметр(18)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" ИЛИ "#Параметр(18)" = "ПравоДобавления" ИЛИ "#Параметр(18)" = "ПравоИзменения" #Тогда
    И #Параметр(19) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(19))
        #Если "#Параметр(18)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(18)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(18) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(19)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(19)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(18)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(19)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(18)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(19)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(19)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(18)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(19)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(19)
        #ИначеЕсли "Т.#Параметр(19)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(18)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(19)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(18) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(19)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(18)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(19)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(19)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(20)" = "" И "#Параметр(21)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(20)" = "Условие" ИЛИ "#Параметр(20)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(21) )
#ИначеЕсли "#Параметр(20)" = "ПравоЧтения" ИЛИ "#Параметр(20)" = "ПравоДобавления" ИЛИ "#Параметр(20)" = "ПравоИзменения" #Тогда
    И #Параметр(21) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(21))
        #Если "#Параметр(20)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(20)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(20) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(21)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(21)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(20)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(21)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(20)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(21)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(21)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(20)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(21)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(21)
        #ИначеЕсли "Т.#Параметр(21)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(20)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(20) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(21)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(20) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(20) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(21)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(20)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(21)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(21)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(20))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(22)" = "" И "#Параметр(23)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(22)" = "Условие" ИЛИ "#Параметр(22)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(23) )
#ИначеЕсли "#Параметр(22)" = "ПравоЧтения" ИЛИ "#Параметр(22)" = "ПравоДобавления" ИЛИ "#Параметр(22)" = "ПравоИзменения" #Тогда
    И #Параметр(23) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(23))
        #Если "#Параметр(22)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(22)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(22) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(23)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(23)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(22)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(23)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(22)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(23)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(23)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(22)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(23)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(23)
        #ИначеЕсли "Т.#Параметр(23)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(22)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(22) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(23)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(22) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(22) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(23)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(22)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(23)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(23)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(22))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" ИЛИ "#Параметр(24)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" ИЛИ "#Параметр(24)" = "ПравоДобавления" ИЛИ "#Параметр(24)" = "ПравоИзменения" #Тогда
    И #Параметр(25) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(25))
        #Если "#Параметр(24)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(24)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(24) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(25)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(25)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(24)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(25)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(24)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(25)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(25)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(24)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(25)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(25)
        #ИначеЕсли "Т.#Параметр(25)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(24)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(25)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(24) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(25)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(24)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(25)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(25)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(26)" = "" И "#Параметр(27)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(26)" = "Условие" ИЛИ "#Параметр(26)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(27) )
#ИначеЕсли "#Параметр(26)" = "ПравоЧтения" ИЛИ "#Параметр(26)" = "ПравоДобавления" ИЛИ "#Параметр(26)" = "ПравоИзменения" #Тогда
    И #Параметр(27) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(27))
        #Если "#Параметр(26)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(26)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(26) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(27)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(27)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(26)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(27)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(26)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(27)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(27)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(26)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(27)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(27)
        #ИначеЕсли "Т.#Параметр(27)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(26)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(26) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(27)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(26) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(26) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(27)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(26)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(27)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(27)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(26))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(28)" = "" И "#Параметр(29)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(28)" = "Условие" ИЛИ "#Параметр(28)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(29) )
#ИначеЕсли "#Параметр(28)" = "ПравоЧтения" ИЛИ "#Параметр(28)" = "ПравоДобавления" ИЛИ "#Параметр(28)" = "ПравоИзменения" #Тогда
    И #Параметр(29) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(29))
        #Если "#Параметр(28)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(28)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(28) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(29)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(29)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(28)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(29)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(28)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(29)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(29)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(28)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(29)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(29)
        #ИначеЕсли "Т.#Параметр(29)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(28)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(28) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(29)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(28) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(28) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(29)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(28)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(29)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(29)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(28))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" ИЛИ "#Параметр(30)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" ИЛИ "#Параметр(30)" = "ПравоДобавления" ИЛИ "#Параметр(30)" = "ПравоИзменения" #Тогда
    И #Параметр(31) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(31))
        #Если "#Параметр(30)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(30)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(30) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(31)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(31)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(30)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(31)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(30)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(31)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(31)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(30)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(31)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(31)
        #ИначеЕсли "Т.#Параметр(31)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(30)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(31)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(30) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(31)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(30)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(31)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(31)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(32)" = "" И "#Параметр(33)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(32)" = "Условие" ИЛИ "#Параметр(32)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(33) )
#ИначеЕсли "#Параметр(32)" = "ПравоЧтения" ИЛИ "#Параметр(32)" = "ПравоДобавления" ИЛИ "#Параметр(32)" = "ПравоИзменения" #Тогда
    И #Параметр(33) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(33))
        #Если "#Параметр(32)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(32)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(32) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(33)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(33)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(32)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(33)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(32)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(33)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(33)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(32)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(33)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(33)
        #ИначеЕсли "Т.#Параметр(33)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(32)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(32) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(33)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(32) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(32) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(33)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(32)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(33)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(33)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(32))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(34)" = "" И "#Параметр(35)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(34)" = "Условие" ИЛИ "#Параметр(34)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    И ( #Параметр(35) )
#ИначеЕсли "#Параметр(34)" = "ПравоЧтения" ИЛИ "#Параметр(34)" = "ПравоДобавления" ИЛИ "#Параметр(34)" = "ПравоИзменения" #Тогда
    И #Параметр(35) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(35))
        #Если "#Параметр(34)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(34)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(34) = "" #Тогда
    И
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(35)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И ИерархияЗначений.ЗначениеДоступа = Т.#Параметр(35)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(34)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(35)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(34)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(35)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "Т.#Параметр(35)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(34)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И ВидыЗначения.ЗначениеДоступа  = Т.#Параметр(35)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.#Параметр(35)
        #ИначеЕсли "Т.#Параметр(35)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(34)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(34) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(35)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(34) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(34) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = Т.#Параметр(35)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(34)
            #КонецЕсли
        #Иначе  // "Т.##Параметр(35)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(35)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(34))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли
#КонецЕсли

  )
)
#КонецЕсли</condition>
	</restrictionTemplate>
	<restrictionTemplate>
		<name>ПоЗначениямИНаборамРасширенный</name>
		<condition>// ПоЗначениямИНаборамРасширенный ( Таблица, Право, Модификатор, ПрисоединяемыеТаблицы, О, В1,П1,О1, В2,П2,О2,..., В(n), П(n), О(n)).
// №  параметра:                          1,     2,           3,                     4, 5,  6, 7, 8,  9,10,11,...,3+n*3,4+n*3,5+n*3 .
// Читается так: "ограничение доступа по значениям и наборам расширенный".
// Параметры:
//     Таблица -   Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Право     - Одна из строк "Чтение", "Добавление", "Изменение", "Удаление".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника.
//                 2-й модификатор - строка "РасширенноеИЛИ" указывает для ограничений,
//                  например, "ПоОрганизациям или ПоУчетнымЗаписям" делать расширенную
//                  проверку, при которой вариант настройки вида доступа в группах доступа
//                  "Все разрешены, без запрещенных" считается, как "Вид доступа не используется".
//                  Если этого модификатора нет, тогда результат проверки Истина, что приводит
//                  к итоговому результату Истина, если "Все разрешены, без запрещенных"
//                  хотя бы по одному из видов доступа (либо ПоОрганизациям, либо ПоУчетнымЗаписям).
//                  Модификатор имеет смысл только при проверке наборов значений доступа.
//                  Можно использовать комбинации модификаторов: "НеОграничиватьДоступКГруппам",
//                  "РасширенноеИЛИ", "НеОграничиватьДоступКГруппам,РасширенноеИЛИ".
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     ПрисоединяемыеТаблицы - текст присоедиения дополнительных таблиц на языке запросов, например,
//                 "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Т1
//                  ПО Т.Ссылка = Т1.Ссылка".
//                 Присоединение позволяет указать поля таблицы ОплатаПоставщикам, как поля основной таблицы
//                  для проверки их значений, как значений основной таблицы.
//                 Следует помнить, что при размножении строк в результате соединения, достаточно чтобы
//                  всего одна строка прошла условия проверки, т.е. результаты проверки строк объединяются по "ИЛИ".
//     О         - Начальные скобки "(".
//     В(n)     - ВидДоступа (имя предопределённого элемента ПланВидовХарактеристик.ВидыДоступа).
//                 Когда В(n) = "Условие" (или ""), тогда Р(n) содержит строку условия на языке запросов, например
//                   "Т.Автор = &amp;ТекущийПользователь",
//                   "ТипЗначения(Т.Владелец) = Тип(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" ИЛИ "ПравоДобавления" ИЛИ "ПравоИзменения",
//                   выполняется проверка наличия права на таблицу значения Т.Р(n).
//                 Когда В(n) = "Объект" (или " "), то
//                   когда есть запись зависимости прав в регистре сведений ЗависимостиПравДоступа
//                     тогда используется данные записи - проверка указанного права Т.Р(n) и/или наборов значений доступа
//                         в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.Р(n) для указанного ограничения права;
//                   иначе используется стандартное правило:
//                     когда Право = "Чтение" тогда выполняется проверка права чтения Т.Р(n) и наборов значений доступа
//                       в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.Р(n) для права чтения;
//                     когда Право = "Добавление" ИЛИ "Изменение" ИЛИ "Удаление" тогда выполняется проверка права изменения Т.Р(n)
//                       и наборов значений доступа, считываемых по ссылке Т.Р(n) для права изменения.
//     П(n)     - Поле с псевдонимом, например "Т.Организация", значение которого проверяется
//                по виду доступа, кроме случая В(n) = "Условие" (или "").
//     О(n)      - Логические операции "И", "ИЛИ" в сочетании с скобками "(", ")".
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Соединение по таблице1&gt;  &lt;Соединение по таблице2&gt;  ... &lt;Соединение по таблице(m)&gt;
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И/ИЛИ &lt;Условие по группе параметров 1&gt; И/ИЛИ ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениямИНаборамРасширенный("ЖурналДокументов.СкладскиеДокументы", "Чтение", "",
//      "",
//      "",
//      "Объект","Т.Ссылка","И",
//      "Объект","Т.ОсновнойДокумент","", "","","", ...)

// Проверка правильности параметра Модификатор.
#Если НЕ (    "#Параметр(3)" = "НеОграничиватьДоступКГруппам"
          ИЛИ "#Параметр(3)" = "РасширенноеИЛИ"
          ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ"
          ИЛИ "#Параметр(3)" = "") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверныйМодификатор: #Параметр(3)
#КонецЕсли
// Проверка правильности параметра Право.
#Если НЕ ("#Параметр(2)" = "Чтение"    ИЛИ "#Параметр(2)" = "Добавление" ИЛИ
          "#Параметр(2)" = "Изменение" ИЛИ "#Параметр(2)" = "Удаление") #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей.
#Если НЕ &amp;ОграничиватьДоступПоВиду = "" #Тогда

Т ИЗ Т // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Присоединяемые таблицы к проверяемой строке текущей таблицы "Т".
#Параметр(4)

ГДЕ

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
    Т.ЭтоГруппа ИЛИ
#КонецЕсли

Истина В
(   // Проверка права пользователя на текущую таблицу в целом.
    // Права на таблицы формируются по составу ролей профиля группы доступа.
    Выбрать Первые 1 Истина
    ИЗ
        Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
        ПО
              СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
            И Истина В
              (
                Выбрать Первые 1 Истина
                ИЗ
                    РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
                    ГДЕ
                          ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
                        И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                    #Если НЕ "#Параметр(2)" = "Чтение" #Тогда
                        И ТаблицыГруппДоступа.#Параметр(2)
                    #КонецЕсли
              )
            И ГруппыДоступа.Ссылка В
              (
                Выбрать
                    ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
                ИЗ
                    Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
                    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                    ПО
                          СоставыГруппПользователей.Используется
                    #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        И СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                    #Иначе
                        И СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                    #КонецЕсли
                        И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
              )
    ГДЕ
          ( // Поиск значений заданных полей в группах доступа (пользователей) по заданным видам доступа.

    #Параметр(5)  // [([(][(]...] 0-n открывающихся скобок.

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(6)" = "Условие" ИЛИ "#Параметр(6)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
    ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" ИЛИ "#Параметр(6)" = "ПравоДобавления" ИЛИ "#Параметр(6)" = "ПравоИзменения" #Тогда
      #Параметр(7) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(7))
        #Если "#Параметр(6)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(6)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(6)" = "Объект" ИЛИ "#Параметр(6)" = " " #Тогда
      #Параметр(7) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(7))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(7))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(7))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(7)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(7)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(7)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(7)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(7)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(6) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(7)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(7)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(6)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(7)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(6)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(7)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(7)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(6)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(7)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(7)
        #ИначеЕсли "#Параметр(7)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(6)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(6) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(7)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(6) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(6) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(7)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(6)
            #КонецЕсли
        #Иначе  // "##Параметр(7)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(7)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(6))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(8)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(9)" = "" И "#Параметр(10)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(9)" = "Условие" ИЛИ "#Параметр(9)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(10) )
#ИначеЕсли "#Параметр(9)" = "ПравоЧтения" ИЛИ "#Параметр(9)" = "ПравоДобавления" ИЛИ "#Параметр(9)" = "ПравоИзменения" #Тогда
     #Параметр(10) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(10))
        #Если "#Параметр(9)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(9)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(9)" = "Объект" ИЛИ "#Параметр(9)" = " " #Тогда
      #Параметр(10) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(10))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(10))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(10))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(10)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(10)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(10)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(10)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(10)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(9) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(10)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(10)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(9)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(10)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(9)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(10)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(10)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(9)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(10)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(10)
        #ИначеЕсли "#Параметр(10)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(9)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(9) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(10)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(9) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(9) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(10)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(9)
            #КонецЕсли
        #Иначе  // "##Параметр(10)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(10)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(9))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(11)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" ИЛИ "#Параметр(12)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" ИЛИ "#Параметр(12)" = "ПравоДобавления" ИЛИ "#Параметр(12)" = "ПравоИзменения" #Тогда
     #Параметр(13) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(13))
        #Если "#Параметр(12)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(12)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(12)" = "Объект" ИЛИ "#Параметр(12)" = " " #Тогда
      #Параметр(13) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(13))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(13))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(13))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(13)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(13)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(13)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(13)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(13)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(12) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(13)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(13)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(12)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(13)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(12)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(13)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(13)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(12)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(13)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(13)
        #ИначеЕсли "#Параметр(13)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(12)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(12) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(13)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(12) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(12) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(13)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(12)
            #КонецЕсли
        #Иначе  // "##Параметр(13)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(13)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(12))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(14)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(15)" = "" И "#Параметр(16)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(15)" = "Условие" ИЛИ "#Параметр(15)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(16) )
#ИначеЕсли "#Параметр(15)" = "ПравоЧтения" ИЛИ "#Параметр(15)" = "ПравоДобавления" ИЛИ "#Параметр(15)" = "ПравоИзменения" #Тогда
     #Параметр(16) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(16))
        #Если "#Параметр(15)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(15)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(15)" = "Объект" ИЛИ "#Параметр(15)" = " " #Тогда
      #Параметр(16) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(16))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(16))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(16))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(16)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(16)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(16)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(16)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(16)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(15) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(16)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(16)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(15)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(16)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(15)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(16)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(16)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(15)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(16)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(16)
        #ИначеЕсли "#Параметр(16)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(15)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(15) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(16)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(15) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(15) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(16)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(15)
            #КонецЕсли
        #Иначе  // "##Параметр(16)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(16)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(15))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(17)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" ИЛИ "#Параметр(18)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" ИЛИ "#Параметр(18)" = "ПравоДобавления" ИЛИ "#Параметр(18)" = "ПравоИзменения" #Тогда
     #Параметр(19) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(19))
        #Если "#Параметр(18)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(18)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(18)" = "Объект" ИЛИ "#Параметр(18)" = " " #Тогда
      #Параметр(19) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(19))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(19))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(19))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(19)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(19)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(19)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(19)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(19)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(18) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(19)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(19)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(18)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(19)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(18)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(19)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(19)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(18)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(19)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(19)
        #ИначеЕсли "#Параметр(19)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(18)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(18) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(19)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(18) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(18) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(19)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(18)
            #КонецЕсли
        #Иначе  // "##Параметр(19)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(19)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(18))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(20)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(21)" = "" И "#Параметр(22)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(21)" = "Условие" ИЛИ "#Параметр(21)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(22) )
#ИначеЕсли "#Параметр(21)" = "ПравоЧтения" ИЛИ "#Параметр(21)" = "ПравоДобавления" ИЛИ "#Параметр(21)" = "ПравоИзменения" #Тогда
     #Параметр(22) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(22))
        #Если "#Параметр(21)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(21)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(21)" = "Объект" ИЛИ "#Параметр(21)" = " " #Тогда
      #Параметр(22) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(22))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(22))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(22))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(22)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(22)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(22)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(22)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(22)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(21) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(22)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(22)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(21)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(22)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(21)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(22)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(22)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(21)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(22)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(22)
        #ИначеЕсли "#Параметр(22)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(21)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(21) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(22)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(21) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(21) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(22)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(21)
            #КонецЕсли
        #Иначе  // "##Параметр(22)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(22)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(21))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(23)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" ИЛИ "#Параметр(24)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" ИЛИ "#Параметр(24)" = "ПравоДобавления" ИЛИ "#Параметр(24)" = "ПравоИзменения" #Тогда
     #Параметр(25) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(25))
        #Если "#Параметр(24)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(24)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(24)" = "Объект" ИЛИ "#Параметр(24)" = " " #Тогда
      #Параметр(25) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(25))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(25))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(25))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(25)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(25)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(25)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(25)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(25)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(24) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(25)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(25)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(24)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(25)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(24)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(25)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(25)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(24)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(25)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(25)
        #ИначеЕсли "#Параметр(25)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(24)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(24) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(25)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(24) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(24) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(25)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(24)
            #КонецЕсли
        #Иначе  // "##Параметр(25)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(25)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(24))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(26)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(27)" = "" И "#Параметр(28)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(27)" = "Условие" ИЛИ "#Параметр(27)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(28) )
#ИначеЕсли "#Параметр(27)" = "ПравоЧтения" ИЛИ "#Параметр(27)" = "ПравоДобавления" ИЛИ "#Параметр(27)" = "ПравоИзменения" #Тогда
     #Параметр(28) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(28))
        #Если "#Параметр(27)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(27)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(27)" = "Объект" ИЛИ "#Параметр(27)" = " " #Тогда
      #Параметр(28) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(28))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(28))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(28))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(28)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(28)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(28)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(28)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(28)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(27) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(28)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(28)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(27)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(28)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(27)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(28)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(28)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(27)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(28)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(28)
        #ИначеЕсли "#Параметр(28)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(27)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(27) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(28)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(27) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(27) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(28)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(27)
            #КонецЕсли
        #Иначе  // "##Параметр(28)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(28)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(27))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(29)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" ИЛИ "#Параметр(30)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" ИЛИ "#Параметр(30)" = "ПравоДобавления" ИЛИ "#Параметр(30)" = "ПравоИзменения" #Тогда
     #Параметр(31) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(31))
        #Если "#Параметр(30)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(30)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(30)" = "Объект" ИЛИ "#Параметр(30)" = " " #Тогда
      #Параметр(31) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(31))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(31))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(31))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(31)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(31)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(31)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(31)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(31)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(30) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(31)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(31)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(30)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(31)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(30)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(31)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(31)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(30)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(31)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(31)
        #ИначеЕсли "#Параметр(31)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(30)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(30) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(31)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(30) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(30) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(31)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(30)
            #КонецЕсли
        #Иначе  // "##Параметр(31)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(31)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(30))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(32)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(33)" = "" И "#Параметр(34)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(33)" = "Условие" ИЛИ "#Параметр(33)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(34) )
#ИначеЕсли "#Параметр(33)" = "ПравоЧтения" ИЛИ "#Параметр(33)" = "ПравоДобавления" ИЛИ "#Параметр(33)" = "ПравоИзменения" #Тогда
     #Параметр(34) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(34))
        #Если "#Параметр(33)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(33)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(33)" = "Объект" ИЛИ "#Параметр(33)" = " " #Тогда
      #Параметр(34) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(34))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(34))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(34))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(34)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(34)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(34)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(34)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(34)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(33) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(34)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(34)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(33)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(34)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(33)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(34)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(34)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(33)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(34)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(34)
        #ИначеЕсли "#Параметр(34)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(33)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(33) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(34)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(33) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(33) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(34)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(33)
            #КонецЕсли
        #Иначе  // "##Параметр(34)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(34)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(33))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(35)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(36)" = "" И "#Параметр(37)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(36)" = "Условие" ИЛИ "#Параметр(36)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(37) )
#ИначеЕсли "#Параметр(36)" = "ПравоЧтения" ИЛИ "#Параметр(36)" = "ПравоДобавления" ИЛИ "#Параметр(36)" = "ПравоИзменения" #Тогда
     #Параметр(37) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(37))
        #Если "#Параметр(36)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(36)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(36)" = "Объект" ИЛИ "#Параметр(36)" = " " #Тогда
      #Параметр(37) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(37))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(37))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(37))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(37)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(37)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(37)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(37)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(37)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(36) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(37)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(37)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(36)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(37)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(36)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(37)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(37)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(36)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(37)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(37)
        #ИначеЕсли "#Параметр(37)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(36)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(36) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(37)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(36) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(36) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(37)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(36)
            #КонецЕсли
        #Иначе  // "##Параметр(37)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(37)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(36))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(38)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(39)" = "" И "#Параметр(40)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(39)" = "Условие" ИЛИ "#Параметр(39)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(40) )
#ИначеЕсли "#Параметр(39)" = "ПравоЧтения" ИЛИ "#Параметр(39)" = "ПравоДобавления" ИЛИ "#Параметр(39)" = "ПравоИзменения" #Тогда
     #Параметр(40) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(40))
        #Если "#Параметр(39)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(39)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(39)" = "Объект" ИЛИ "#Параметр(39)" = " " #Тогда
      #Параметр(40) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(40))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(40))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(40))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(40)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(40)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(40)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(40)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(40)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(39) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(40)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(40)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(39)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(40)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(39)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(40)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(40)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(39)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(40)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(40)
        #ИначеЕсли "#Параметр(40)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(39)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(39) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(40)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(39) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(39) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(40)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(39)
            #КонецЕсли
        #Иначе  // "##Параметр(40)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(40)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(39))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(41)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(42)" = "" И "#Параметр(43)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(42)" = "Условие" ИЛИ "#Параметр(42)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(43) )
#ИначеЕсли "#Параметр(42)" = "ПравоЧтения" ИЛИ "#Параметр(42)" = "ПравоДобавления" ИЛИ "#Параметр(42)" = "ПравоИзменения" #Тогда
     #Параметр(43) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(43))
        #Если "#Параметр(42)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(42)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(42)" = "Объект" ИЛИ "#Параметр(42)" = " " #Тогда
      #Параметр(43) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(43))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(43))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(43))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(43)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(43)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(43)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(43)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(43)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(42) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(43)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(43)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(42)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(43)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(42)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(43)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(43)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(42)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(43)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(43)
        #ИначеЕсли "#Параметр(43)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(42)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(42) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(43)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(42) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(42) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(43)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(42)
            #КонецЕсли
        #Иначе  // "##Параметр(43)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(43)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(42))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(44)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(45)" = "" И "#Параметр(46)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(45)" = "Условие" ИЛИ "#Параметр(45)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(46) )
#ИначеЕсли "#Параметр(45)" = "ПравоЧтения" ИЛИ "#Параметр(45)" = "ПравоДобавления" ИЛИ "#Параметр(45)" = "ПравоИзменения" #Тогда
     #Параметр(46) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(46))
        #Если "#Параметр(45)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(45)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(45)" = "Объект" ИЛИ "#Параметр(45)" = " " #Тогда
      #Параметр(46) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(46))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(46))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(46))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(46)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(46)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(46)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(46)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(46)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(45) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(46)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(46)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(45)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(46)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(45)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(46)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(46)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(45)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(46)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(46)
        #ИначеЕсли "#Параметр(46)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(45)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(45) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(46)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(45) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(45) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(46)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(45)
            #КонецЕсли
        #Иначе  // "##Параметр(46)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(46)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(45))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(47)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(48)" = "" И "#Параметр(49)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(48)" = "Условие" ИЛИ "#Параметр(48)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(49) )
#ИначеЕсли "#Параметр(48)" = "ПравоЧтения" ИЛИ "#Параметр(48)" = "ПравоДобавления" ИЛИ "#Параметр(48)" = "ПравоИзменения" #Тогда
     #Параметр(49) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(49))
        #Если "#Параметр(48)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(48)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(48)" = "Объект" ИЛИ "#Параметр(48)" = " " #Тогда
      #Параметр(49) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(49))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(49))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(49))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(49)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(49)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(49)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(49)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(49)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(48) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(49)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(49)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(48)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(49)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(48)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(49)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(49)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(48)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(49)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(49)
        #ИначеЕсли "#Параметр(49)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(48)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(48) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(49)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(48) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(48) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(49)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(48)
            #КонецЕсли
        #Иначе  // "##Параметр(49)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(49)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(48))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(50)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(51)" = "" И "#Параметр(52)" = "" #Тогда
    // Группа параметров не используется.
#ИначеЕсли "#Параметр(51)" = "Условие" ИЛИ "#Параметр(51)" = "" #Тогда
    // Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
     ( #Параметр(52) )
#ИначеЕсли "#Параметр(51)" = "ПравоЧтения" ИЛИ "#Параметр(51)" = "ПравоДобавления" ИЛИ "#Параметр(51)" = "ПравоИзменения" #Тогда
     #Параметр(52) &lt;&gt; Неопределено
    И Истина В
     (  // Проверка права пользователя на таблицу Значения, установленного в поле.
        Выбрать Первые 1 Истина
        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
        ГДЕ
              ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
            И ТипЗначения(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТипЗначения(#Параметр(52))
        #Если "#Параметр(51)" = "ПравоДобавления" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Добавление
        #ИначеЕсли "#Параметр(51)" = "ПравоИзменения" #Тогда
            И ТаблицыГруппДоступаПроверкаПрава.Изменение
        #КонецЕсли
     )
#ИначеЕсли "#Параметр(51)" = "Объект" ИЛИ "#Параметр(51)" = " " #Тогда
      #Параметр(52) &lt;&gt; Неопределено
    И 
  // Предполагается, что право Чтение может зависеть только от права Чтение
  #Если "#Параметр(2)" = "Чтение" #Тогда
    (
        // Проверка права Чтение
        НЕ
        (
              НЕ Истина В
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
            ГДЕ
                  ЗависимостиПравДоступа.ПодчиненнаяТаблица                  = СвойстваТекущейТаблицы.Ссылка
                И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы)      = ТипЗначения(#Параметр(52))
                И ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы = Истина
            )
  #Иначе
      Истина В
    (
    Выбрать Истина
    ИЗ (Выбрать Истина) КАК ЗначениеИстина
    Левое Соединение РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
    ПО 
          ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
        И ТипЗначения(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТипЗначения(#Параметр(52))
    ГДЕ
        // Проверка права Добавление или Изменение или Удаление
        НЕ
        (
              НЕ ЕстьNULL(ЗависимостиПравДоступа.ОтключитьПроверкуПравВедущейТаблицы, Ложь)
  #КонецЕсли
            И НЕ Истина В
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
            ГДЕ
                  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
                И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТипЗначения(#Параметр(52))
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
            #Иначе
                И НЕ
                (     Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)          &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И ТаблицыГруппДоступаПроверкаПраваОбъекта.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
            )
        )
        // Проверка ограничения права
        И
    #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
        НЕ
         (
          Истина В // Не все проверки отключены.
          (
                Выбрать Первые 1 Истина // Выбор первого набора с не отключенной проверкой.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
                ГДЕ
                      НомераНаборов.Объект = #Параметр(52)
                #Если "#Параметр(2)" = "Чтение" #Тогда
                    // Предполагается, что право Чтение может зависеть только от права Чтение
                    И НомераНаборов.Чтение = Истина
                #Иначе
                    И НЕ
                    (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                        И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    )
                #КонецЕсли
                    И
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(52)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
          ) И НЕ
    #Иначе
         (
    #КонецЕсли
          Истина В
          (
            Выбрать Первые 1 Истина // Выбор первого набора по которому доступ разрешен.
            ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
            ГДЕ
                  НомераНаборов.Объект = #Параметр(52)
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                И НомераНаборов.Чтение = Истина
            #Иначе
                И НЕ
                (     НомераНаборов.ВидДоступаПравоЧтения     &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоДобавления &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                    И НомераНаборов.ВидДоступаПравоИзменения  &lt;&gt; ЕстьNULL(ЗависимостиПравДоступа.ПриПроверкеПрава#Параметр(2), Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                )
            #КонецЕсли
                И
              #Если "#Параметр(3)" = "РасширенноеИЛИ" ИЛИ "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
                Истина В // Не все проверки текущего набора отключены.
                (
                    Выбрать Первые 1 Истина // Выбор первой не отключенной проверки текущего набора.
                    ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                    ГДЕ
                          НаборыЗначений.Объект      = #Параметр(52)
                        И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                        И НЕ НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                        И НЕ
                            (НЕ НаборыЗначений.ВидДоступа В (
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления),
                                Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения))
                             И НЕ Истина В
                                (
                                    Выбрать Первые 1 Истина // Поиск настроек по виду доступа
                                    ИЗ РегистрСведений.ЗначенияГруппДоступа КАК ЗначенияГруппДоступа
                                    ГДЕ
                                          ЗначенияГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
                                        И ЗначенияГруппДоступа.ВидДоступа    = НаборыЗначений.ВидДоступа
                                )
                            )
                )
                И
              #КонецЕсли
                  НЕ Ложь В // Все проверки успешны.
                (
                Выбрать Первые 1 Ложь // Выбор первого не разрешенного значения доступа.
                ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
                ГДЕ
                      НаборыЗначений.Объект      = #Параметр(52)
                    И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
                    И НЕ
                Выбор
                // Проверка заведомого ложного или истинного однострочного набора значений.
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка)
                Тогда НаборыЗначений.ЗначениеДоступа &lt;&gt; Неопределено
                // Проверка отключения ограничения по виду доступа.
                Когда НаборыЗначений.ВидДоступа В (&amp;ВидыДоступаБезОграничения)
                Тогда Истина
                // Проверка права доступа пользователя к таблице ЗначенияДоступа.
            #Если "#Параметр(2)" = "Чтение" #Тогда
                // Предполагается, что право Чтение может зависеть только от права Чтение
                Когда НаборыЗначений.ТипЗначенияДоступа &lt;&gt; Неопределено
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
            #Иначе
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоЧтения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоДобавления)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Добавление              = Истина
                    )
                Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ПравоИзменения)
                Тогда Истина В
                    (   Выбрать Первые 1 Истина
                        ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
                        ГДЕ
                              ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа           = ГруппыДоступа.Ссылка
                            И ТипЗначения(ТаблицыГруппДоступаПроверкаПраваНаОбъект.ТипТаблицы) = ТипЗначения(НаборыЗначений.ЗначениеДоступа)
                            И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение               = Истина
                    )
            #КонецЕсли
            
            #Если НЕ &amp;ВидыДоступаЧерезПраваПоЗначениямДоступа = "" #Тогда
                Когда НаборыЗначений.ВидДоступаЧерезПраваПоЗначениямДоступа
                Тогда
                    (
                     НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
                        (
                        Выбрать Истина
                        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                        ГДЕ
                              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                            И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И Виды.ТолькоВидДоступа = Истина
                        )
                    ИЛИ
                        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
                            (
                            Выбрать Первые 1 Истина
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                        И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
                            (
                            Выбрать Первые 1 Ложь
                            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                                ПО
                                      ИерархияЗначений.ИспользоватьПраваСсылки
                                    И ИерархияЗначений.ВидДоступа        = НаборыЗначений.ВидДоступа
                                    И ИерархияЗначений.ЗначениеДоступа   = НаборыЗначений.ЗначениеДоступа
                                    И ПраваПоЗначениям.Таблица           = СвойстваТекущейТаблицы.Ссылка
                                    И ПраваПоЗначениям.ЗначениеДоступа   = ИерархияЗначений.ГруппаЗначенийДоступа
                                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                                ПО
                                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                                #Иначе
                                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                                #КонецЕсли
                                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
                            )
                    )
            #КонецЕсли
                Иначе
            #Если НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" И
                  НЕ &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный" #Тогда  // когда не КаждыйВидЕдинственный
                    (
                    // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
                    НаборыЗначений.ВидДоступаЕдинственныйДляТипаЗначенияДоступа
                    // Проверка наличия вида доступа у значения доступа.
                    ИЛИ НЕ Истина В
                        (
                        Выбрать Первые 1 Истина 
                        ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначений
                        ГДЕ
                              ВидыЗначений.ВидДоступа       = НаборыЗначений.ВидДоступа
                            И ВидыЗначений.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            И ВидыЗначений.ТолькоВидДоступа = Истина
                        )
                    )
                И
            #КонецЕсли
                    Выбор
                    Когда
                    #Если НЕ &amp;ОграничиватьДоступПоВидуПользователи = ""
                          И &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                        
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #ИначеЕсли   НЕ &amp;ОграничиватьДоступПоВидуВнешниеПользователи = ""
                               И НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                            
                        Выбор
                        Когда НаборыЗначений.ВидДоступа = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        Тогда Истина В
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                                ГДЕ
                                      ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                                    И ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
                                    И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                                )
                        Иначе Ложь
                        Конец
                        ИЛИ
                    #КонецЕсли
                    #Если &amp;ОграничиватьДоступПоВиду = "КаждыйВидЕдинственный, КаждыйВидБезГрупп" ИЛИ
                          &amp;ОграничиватьДоступПоВиду = "КаждыйВидБезГрупп" #Тогда // когда КаждыйВидБезГрупп
                        Выбор
                        Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                            ГДЕ
                                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Значения.ТолькоВидДоступа = Ложь
                                И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    #Иначе
                        Выбор
                        Когда НаборыЗначений.ВидДоступаБезГруппЗначенияДоступа
                        Тогда
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно.
                                (
                                Выбрать Истина
                                ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                ГДЕ
                                      Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                    И Значения.ВидДоступа       = НаборыЗначений.ВидДоступа
                                    И Значения.ТолькоВидДоступа = Ложь
                                    И Значения.ЗначениеДоступа  = НаборыЗначений.ЗначениеДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Иначе
                            Выбор
                            Когда Истина В // Поиск значения в группе доступа (пользователей) через группы доступа значений.
                                (
                                Выбрать Первые 1 Истина
                                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                                    Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                                    ПО
                                          ГруппыЗначений.ВидДоступа      = НаборыЗначений.ВидДоступа
                                        И ГруппыЗначений.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
                                        И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                                        И Значения.ВидДоступа            = НаборыЗначений.ВидДоступа
                                        И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                                        И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
                                )
                            Тогда Истина
                            Иначе Ложь
                            Конец
                        Конец
                    #КонецЕсли
                        =
                        Выбор
                        Когда Истина В // Проверка наличия ограничения по виду доступа для значений.
                            (
                            Выбрать Истина
                            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
                            ГДЕ
                                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                                И Виды.ВидДоступа       = НаборыЗначений.ВидДоступа
                                И Виды.ТолькоВидДоступа = Истина
                            )
                        Тогда Истина
                        Иначе Ложь
                        Конец
                    Тогда Истина
                    Иначе Ложь
                    Конец
                Конец
                ) // НЕ Ложь В
          )
         )
    )

#ИначеЕсли НЕ &amp;ОграничиватьДоступПоВиду#Параметр(51) = "" #Тогда
    
    #Если &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЧерезПраваПоЗначениямДоступа" #Тогда
     (
    НЕ Истина В // Проверка, что по виду доступа пользователь ограничивается.
        (
        Выбрать Истина
        ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
        ГДЕ
              Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
            И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
            И Виды.ТолькоВидДоступа = Истина
        )
    ИЛИ
        Истина В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
            (
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(52)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
         И НЕ Ложь В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
            (
            Выбрать Первые 1 Ложь
            ИЗ РегистрСведений.ПраваПоЗначениямДоступа КАК ПраваПоЗначениям
                Внутреннее Соединение РегистрСведений.ГруппыЗначенийДоступа КАК ИерархияЗначений
                ПО
                      ИерархияЗначений.ИспользоватьПраваСсылки
                    И ИерархияЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ИерархияЗначений.ЗначениеДоступа = #Параметр(52)
                    И ПраваПоЗначениям.Таблица         = СвойстваТекущейТаблицы.Ссылка
                    И ПраваПоЗначениям.ЗначениеДоступа = ИерархияЗначений.ГруппаЗначенийДоступа
                    И ПраваПоЗначениям.#Параметр(2)Запрещено
                    И ПраваПоЗначениям.РаспространяетсяВИерархии &gt;= ИерархияЗначений.СвязьСРодителем
                Внутреннее Соединение РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
                ПО
                #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийПользователь
                #Иначе
                      СоставыГруппПользователей.Пользователь = &amp;ТекущийВнешнийПользователь
                #КонецЕсли
                    И СоставыГруппПользователей.ГруппаПользователей = ПраваПоЗначениям.Пользователь
            )
     )
    #Иначе
     (
        #Если "#Параметр(51)" = "Пользователи" #Тогда
          #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.Пользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(52)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийПользователь
                    )
            ИЛИ
          #КонецЕсли
        #ИначеЕсли "#Параметр(51)" = "ВнешниеПользователи" #Тогда
          #Если НЕ (&amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка)) #Тогда
                Истина В
                    (
                    Выбрать Первые 1 Истина
                    ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
                    ГДЕ
                          ГруппыЗначенийДоступа.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.ВнешниеПользователи)
                        И ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(52)
                        И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;ТекущийВнешнийПользователь
                    )
            ИЛИ
          #КонецЕсли
        // Если ВидПоТипуЗначенияОдинИзМногих, тогда проверка возможности доступа к значению через вид доступа.
        #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,БезГрупп"   ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,ОднаГруппа" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,МножествоГрупп" #Тогда
            (
            #Если "#Параметр(52)" = "Т.Ссылка" #Тогда
                Т.ВидДоступа#Параметр(51)
            #Иначе
            НЕ Истина В
                (
                Выбрать Истина
                ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ВидыЗначения
                ГДЕ
                      ВидыЗначения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ВидыЗначения.ЗначениеДоступа  = #Параметр(52)
                    И ВидыЗначения.ТолькоВидДоступа = Истина
                )
            #КонецЕсли
            ) И
        #КонецЕсли
            Выбор
            Когда Истина В // Поиск значения в группе доступа (пользователей) непосредственно или через группы доступа значений.
            (
        #Если      &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид,  БезГрупп" ИЛИ
                   &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,БезГрупп" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = #Параметр(52)
        #ИначеЕсли "#Параметр(52)" = "Т.Ссылка" #Тогда
            #Если      &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид,  ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ОдинИзМногихВидов,ОднаГруппа" #Тогда
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
            ГДЕ
                  Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Значения.ТолькоВидДоступа = Ложь
                И Значения.ЗначениеДоступа  = Т.ГруппаДоступа#Параметр(51)
            #ИначеЕсли &amp;ОграничиватьДоступПоВиду#Параметр(51) = "ЕдинственныйВид  ,МножествоГрупп" #Тогда
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(52)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа
            #Иначе //  &amp;ОграничиватьДоступПоВиду##Параметр(51) = "ОдинИзМногихВидов,МножествоГрупп"
            Выбрать Первые 1 Истина
            ИЗ #Параметр(1).ГруппыДоступа#Параметр(51) КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.Ссылка     = #Параметр(52)
                    И Значения.ГруппаДоступа    = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа = Ложь
                    И Значения.ЗначениеДоступа  = ГруппыЗначений.ГруппаДоступа#Параметр(51)
            #КонецЕсли
        #Иначе  // "##Параметр(52)" &lt;&gt; "Т.Ссылка"
            Выбрать Первые 1 Истина
            ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
                Внутреннее Соединение РегистрСведений.ЗначенияГруппДоступа КАК Значения
                ПО
                      ГруппыЗначений.ВидДоступа      = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И ГруппыЗначений.ЗначениеДоступа = #Параметр(52)
                    И Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
                    И Значения.ВидДоступа            = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                    И Значения.ТолькоВидДоступа      = ГруппыЗначений.ТолькоВидДоступа
                    И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
        #КонецЕсли
            )
            Тогда Истина
            Иначе Ложь
            Конец
            =
            Выбор
            Когда Истина В  // Проверка наличия ограничения по виду доступа для значений.
            (
            Выбрать Истина
            ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Виды
            ГДЕ
                  Виды.ГруппаДоступа    = ГруппыДоступа.Ссылка
                И Виды.ВидДоступа       = Значение(ПланВидовХарактеристик.ВидыДоступа.#Параметр(51))
                И Виды.ТолькоВидДоступа = Истина
            )
            Тогда Истина
            Иначе Ложь
            Конец
     )
    #КонецЕсли

#Иначе
    Истина
#КонецЕсли

    #Параметр(53)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

  )
)
#КонецЕсли</condition>
	</restrictionTemplate>
</Rights>
