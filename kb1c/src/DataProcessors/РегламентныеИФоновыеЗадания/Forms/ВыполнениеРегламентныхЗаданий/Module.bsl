////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИнтервалВремениПроверкиВыполнения = 5; // 5 секунд.
	ОбновитьТаблицуРегламентныхЗаданий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОсталосьДоНачалаВыполнения = ИнтервалВремениПроверкиВыполнения + 1;  
	ВыполнитьРегламентныеЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПрекратитьРаботуСистемы(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НастройкаВыполненияРегламентныхЗаданий(Команда)
	
	ПараметрыФормы = Новый Структура("СкрытьКомандуЗапускаОтдельногоСеанса", Истина);
	
	ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.НастройкаВыполненияРегламентныхЗаданий", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьВыполнениеИЗавершитьСеанс(Команда)
	
	ПрекратитьВыполнениеИЗавершитьСеансВыполнить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПрекратитьВыполнениеИЗавершитьСеансВыполнить()
	
	ПрекратитьРаботуСистемы(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРегламентныеЗадания()
	
	ОсталосьДоНачалаВыполнения = ОсталосьДоНачалаВыполнения - 1;
	Если ОсталосьДоНачалаВыполнения <= 0 Тогда
		
		ОсталосьДоНачалаВыполнения = ИнтервалВремениПроверкиВыполнения;
		Элементы.СтрокаСостояния.Заголовок = НСтр("ru = 'Выполняются регламентные задания...'");
		ОбновитьОтображениеДанных();
		
		Результат = ВыполнитьРегламентныеЗаданияСервер(ПараметрЗапуска);
		Если Результат.ПрекратитьВыполнение Тогда
			Если Результат = "Перезапустить" Тогда
				ПрекратитьРаботуСистемы(Истина, " /C""" + ПараметрЗапуска + """");
			КонецЕсли;
			ПрекратитьРаботуСистемы(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	// Прекращение выполнения, если пользователь нажал CTRL+BREAK.
	ПодключитьОбработчикОжидания(
		"ПрекратитьВыполнениеИЗавершитьСеансВыполнить", 1, Истина);
	
	ОбработкаПрерыванияПользователя();
	
	ОтключитьОбработчикОжидания(
		"ПрекратитьВыполнениеИЗавершитьСеансВыполнить");
	
	ПодключитьОбработчикОжидания("ВыполнитьРегламентныеЗадания", 1, Истина);
	Элементы.СтрокаСостояния.Заголовок = НСтр("ru = 'Ожидание выполнения регламентных заданий...'");
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьРегламентныеЗаданияСервер(ПараметрЗапуска)
	
	РегламентныеЗаданияСлужебный.ВыполнитьРегламентныеЗадания();
	ОбновитьТаблицуРегламентныхЗаданий();
	
	Результат = Новый Структура;
	Результат.Вставить("Перезапустить", КонфигурацияБазыДанныхИзмененаДинамически());
	Результат.Вставить(
		"ПрекратитьВыполнение",
		Результат.Перезапустить
		ИЛИ РегламентныеЗаданияСлужебный.РодительскийСеансЗаданИЗавершен(ПараметрЗапуска)
		ИЛИ НЕ РегламентныеЗаданияСлужебный.ТекущийСеансВыполняетРегламентныеЗадания() );
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьТаблицуРегламентныхЗаданий()

	УстановитьПривилегированныйРежим(Истина);
	ТекущиеЗадания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Использование", Истина));
	
	НоваяТаблицаЗаданий = РеквизитФормыВЗначение("ТаблицаРегламентныхЗаданий");
	НоваяТаблицаЗаданий.Очистить();
	
	Для Каждого Задание Из ТекущиеЗадания Цикл
		СтрокаЗадания = НоваяТаблицаЗаданий.Добавить();
		
		СтрокаЗадания.РегламентноеЗадание
			= РегламентныеЗаданияСлужебный.ПредставлениеРегламентногоЗадания(Задание);
		СтрокаЗадания.Выполнено     = Дата(1, 1, 1);
		СтрокаЗадания.Идентификатор = Задание.УникальныйИдентификатор;
		
		СвойстваПоследнегоФоновогоЗадания = РегламентныеЗаданияСлужебный
			.ПолучитьСвойстваПоследнегоФоновогоЗаданияВыполненияРегламентногоЗадания(Задание);
		
		Если СвойстваПоследнегоФоновогоЗадания <> Неопределено
		   И ЗначениеЗаполнено(СвойстваПоследнегоФоновогоЗадания.Конец) Тогда
			
			СтрокаЗадания.Выполнено = СвойстваПоследнегоФоновогоЗадания.Конец;
		КонецЕсли;
		
		СвойстваЗадания = ТаблицаРегламентныхЗаданий.НайтиСтроки(
			Новый Структура("Идентификатор", СтрокаЗадания.Идентификатор));
		
		СтрокаЗадания.Изменено = (СвойстваЗадания = Неопределено)
		                     ИЛИ (СвойстваЗадания.Количество() = 0) 
		                     ИЛИ (СвойстваЗадания[0].Выполнено <> СтрокаЗадания.Выполнено);
	КонецЦикла;
	
	НоваяТаблицаЗаданий.Сортировать("РегламентноеЗадание");
	
	НомерЗадания = 1;
	Для Каждого СтрокаЗадания Из НоваяТаблицаЗаданий Цикл
		СтрокаЗадания.Номер = НомерЗадания;
		НомерЗадания = НомерЗадания + 1;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(НоваяТаблицаЗаданий, "ТаблицаРегламентныхЗаданий");
	
КонецПроцедуры
