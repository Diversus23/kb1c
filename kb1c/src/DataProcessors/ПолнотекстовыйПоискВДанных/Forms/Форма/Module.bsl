////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СтрокаСоединенияСБД = СтрокаСоединенияИнформационнойБазы();
	ЭтоФайловаяБаза = ОбщегоНазначения.ИнформационнаяБазаФайловая(СтрокаСоединенияСБД);
	Элементы.ГруппаОбновлениеИндекса.Видимость = ЭтоФайловаяБаза;
	Если ЭтоФайловаяБаза Тогда
		ОбновитьАктуальностьИндекса();
	КонецЕсли;
	
	ТекущаяПозиция = 0;
	
	Элементы.Далее.Доступность = Ложь;
	Элементы.Назад.Доступность = Ложь;
	
	Массив = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПолнотекстовыйПоискСтрокиПолнотекстовогоПоиска");
	
	Если Массив <> Неопределено Тогда
		Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(Массив);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Параметры.ПереданнаяСтрокаПоиска) Тогда
		СтрокаПоиска = Параметры.ПереданнаяСтрокаПоиска;
		
		СохранитьСтрокуПоиска(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
		Попытка
			Результат = ВыполнитьПоискСервер(0, ТекущаяПозиция, СтрокаПоиска);
		Исключение	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат;
		КонецПопытки;
		
		РезультатыПоиска = Результат.РезультатПоиска;
		HTMLТекст = Результат.HTMLТекст;
		ТекущаяПозиция = Результат.ТекущаяПозиция;
		ПолноеКоличество = Результат.ПолноеКоличество;
		
		Если РезультатыПоиска.Количество() <> 0 Тогда
			
			ПоказаныРезультатыСПо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			                            НСтр("ru = 'Показаны %1 - %2 из %3'"),
			                            Строка(ТекущаяПозиция + 1),
			                            Строка(ТекущаяПозиция + РезультатыПоиска.Количество()),
			                            Строка(ПолноеКоличество) );
			
			Элементы.Далее.Доступность = (ПолноеКоличество - ТекущаяПозиция) > РезультатыПоиска.Количество();
			Элементы.Назад.Доступность = (ТекущаяПозиция > 0);
		Иначе
			ПоказаныРезультатыСПо = НСтр("ru = 'Не найдено'");
			Элементы.Далее.Доступность = Ложь;
			Элементы.Назад.Доступность = Ложь;
		КонецЕсли;
	Иначе
		HTMLТекст = 
		"<html>
		|<head>
		|<meta http-equiv=""Content-Style-Type"" content=""text/css"">
		|</head>
		|<body topmargin=0 leftmargin=0 scroll=auto>
		|<table border=""0"" width=""100%"" cellspacing=""5"">
		|</table>
		|</body>
		|</html>";
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Отказ = Ложь;
	
	Искать(0, Отказ);
	
	Если НЕ Отказ Тогда
		ТекущийЭлемент = Элементы.СтрокаПоиска;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаПоиска = ВыбранноеЗначение;
	Искать(0);
	
КонецПроцедуры

&НаКлиенте
Процедура HTMLТекстПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ЭлементHTML = ДанныеСобытия.Anchor;
	
	Если ЭлементHTML = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (ЭлементHTML.id = "FullTextSearchListItem") Тогда
		
		Платформа83 = ОбщегоНазначенияКлиентСервер.ЭтоПлатформа83();
		
		ЧастьURL = ?(Платформа83, ЭлементHTML.outerHTML, ЭлементHTML.pathName);
		Позиция = ?(Платформа83, Найти(ЧастьURL, "sel_num="), СтроковыеФункцииКлиентСервер.НайтиСимволСКонца(ЧастьURL, "/"));
		Если Позиция <> 0 Тогда
			ЧастьURL = ?(Платформа83, Сред(ЧастьURL, Позиция+9, 1), Сред(ЧастьURL, Позиция + 1));
		КонецЕсли;
			
		НомерВСписке = Число(ЧастьURL);
		СтруктураРезультата = РезультатыПоиска[НомерВСписке].Значение;
		ВыбраннаяСтрока = СтруктураРезультата.Значение;
		МассивОбъектов = СтруктураРезультата.ЗначенияДляОткрытия;

		Если МассивОбъектов.Количество() = 1 Тогда
			ОткрытьЗначениеПоиска(МассивОбъектов[0]);
		ИначеЕсли МассивОбъектов.Количество() <> 0 Тогда
			Список = Новый СписокЗначений;
			Для Каждого ЭлементМассива Из МассивОбъектов Цикл
				Список.Добавить(ЭлементМассива);
			КонецЦикла;
			ВыбранныйОбъект = ВыбратьИзСписка(Список, Элементы.HTMLТекст);
			Если ВыбранныйОбъект <> Неопределено Тогда
				ОткрытьЗначениеПоиска(ВыбранныйОбъект.Значение);
			КонецЕсли;
		КонецЕсли;

		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьПоиск(Команда)
	
	Искать(0);
	
КонецПроцедуры

&НаКлиенте
Процедура Следующие(Команда)
	
	Искать(1);
	
КонецПроцедуры

&НаКлиенте
Процедура Предыдущие(Команда)
	
	Искать(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИндекс(Команда)
	
	Состояние(НСтр("ru = 'Идет обновление полнотекстового индекса...
	|Пожалуйста, подождите.'"));
	
	ОбновитьИндексСервер();
	
	Состояние(НСтр("ru = 'Обновление полнотекстового индекса завершено.'"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОткрытьЗначениеПоиска(Значение)
	СтандартнаяОбработка = Истина;
	ПолнотекстовыйПоискКлиент.ПолнотекстовыйПоискПриОткрытииОбъекта(Значение, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Истина Тогда
		ОткрытьЗначение(Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Искать(Направление, Отказ = Неопределено)
	// Процедура поиска, получение и отображение результата
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите, что нужно найти.'"), , "СтрокаПоиска");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЭтоНавигационнаяСсылка = Найти(СтрокаПоиска, "e1cib/data/") <> 0;
	Если ЭтоНавигационнаяСсылка Тогда
		ПерейтиПоНавигационнойСсылке(СтрокаПоиска);
		СтрокаПоиска = "";
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выполняется поиск ""%1""...'"), СтрокаПоиска));
	
	СписокВыбора = Элементы.СтрокаПоиска.СписокВыбора.Скопировать();
	Результат = СохранитьСтрокуИВыполнитьПоискСервер(Направление, ТекущаяПозиция, СтрокаПоиска, СписокВыбора);
	Элементы.СтрокаПоиска.СписокВыбора.Очистить();
	Для Каждого ЭлементСпискаВыбора Из СписокВыбора Цикл
		Элементы.СтрокаПоиска.СписокВыбора.Добавить(ЭлементСпискаВыбора.Значение, ЭлементСпискаВыбора.Представление);
	КонецЦикла;
	
	Если Элементы.ГруппаОбновлениеИндекса.Видимость Тогда
		ОбновитьАктуальностьИндекса();
	КонецЕсли;
	
	РезультатыПоиска = Результат.РезультатПоиска;
	HTMLТекст = Результат.HTMLТекст;
	ТекущаяПозиция = Результат.ТекущаяПозиция;
	ПолноеКоличество = Результат.ПолноеКоличество;
	
	Если РезультатыПоиска.Количество() > 0 Тогда
		
		ПоказаныРезультатыСПо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Показаны %1 - %2 из %3'"),
			Формат(ТекущаяПозиция + 1, "ЧН=0; ЧГ="),
			Формат(ТекущаяПозиция + РезультатыПоиска.Количество(), "ЧН=0; ЧГ="),
			Формат(ПолноеКоличество, "ЧН=0; ЧГ="));
		
		Элементы.Далее.Доступность = (ПолноеКоличество - ТекущаяПозиция) > РезультатыПоиска.Количество();
		Элементы.Назад.Доступность = (ТекущаяПозиция > 0);
		
		Если Направление = 0 И Результат.ТекущаяПозиция = 0 И Результат.СлишкомМногоРезультатов Тогда
			Предупреждение(НСтр("ru = 'Слишком много результатов, уточните запрос.'"));
		КонецЕсли;
	
	Иначе
		
		ПоказаныРезультатыСПо = НСтр("ru = 'Не найдено'");
		
		Элементы.Далее.Доступность = Ложь;
		Элементы.Назад.Доступность = Ложь;
		
		ТекстПоиска = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Комбинация слов ""%1"" нигде не встречается.<br><br>
			|<b>Рекомендации:</b>
			|<li>Убедитесь, что все слова написаны без ошибок.
			|<li>Попробуйте использовать другие ключевые слова.
			|<li>Попробуйте уменьшить количество искомых слов.'"),
			СокрЛП(СтрокаПоиска));
		
		HTMLТекст = 
		"<html>
		|<head>
		|<meta http-equiv=""Content-Style-Type"" content=""text/css"">
		|<style>H1 {
		|	TEXT-ALIGN: left; FONT-FAMILY: Arial, Tahoma; COLOR: #003366; FONT-SIZE: 18pt; FONT-WEIGHT: bold
		|}
		|.Programtext {
		|	FONT-FAMILY: Courier; COLOR: #000080; FONT-SIZE: 10pt
		|}
		|H3 {
		|	TEXT-ALIGN: left; FONT-FAMILY: Arial, Tahoma; FONT-SIZE: 11pt; FONT-WEIGHT: bold
		|}
		|H4 {
		|	TEXT-ALIGN: left; FONT-FAMILY: Arial, Tahoma; FONT-SIZE: 10pt; FONT-WEIGHT: bold
		|}
		|BODY {
		|	FONT-FAMILY: Verdana; FONT-SIZE: 8pt
		|}</style>
		|</head>
		|<body scroll=auto>
		|" + ТекстПоиска + "
		|</body>
		|</html>";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияДляОткрытия(Объект)
	// Возвращает массив объектов (возможно из одного элемента) для показа пользователю
	Результат = Новый Массив;
	
	// Объект ссылочного типа
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Объект) Тогда
		Результат.Добавить(Объект);
		Возврат Результат;
	КонецЕсли;
	
	МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	ИмяМетаданного = МетаданныеОбъекта.Имя;
	
	ПолноеИмяОбъекта = ВРег(Метаданные.НайтиПоТипу(ТипЗнч(Объект)).ПолноеИмя());
	ЭтоРегистрСведений = (Найти(ПолноеИмяОбъекта, "РЕГИСТРСВЕДЕНИЙ.") > 0);

	Если Не ЭтоРегистрСведений Тогда // Регистр бухгалтерии или накопления или расчета
		Регистратор = Объект["Регистратор"];
		Результат.Добавить(Регистратор);
		Возврат Результат;
	КонецЕсли;

	// Ниже - это уже регистр сведений
	Если МетаданныеОбъекта.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
		Регистратор = Объект["Регистратор"];
		Результат.Добавить(Регистратор);
		Возврат Результат;
	КонецЕсли;

	// Независимый регистр сведений
	// сперва - основные типы
	Для Каждого Измерение Из МетаданныеОбъекта.Измерения Цикл
		Если Измерение.Ведущее Тогда 
			ЗначениеИзмерения = Объект[Измерение.Имя];
			
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ЗначениеИзмерения) Тогда
				Результат.Добавить(ЗначениеИзмерения);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

	Если Результат.Количество() = 0 Тогда
		// теперь - любые типы
		Для Каждого Измерение Из МетаданныеОбъекта.Измерения Цикл
			Если Измерение.Ведущее Тогда 
				ЗначениеИзмерения = Объект[Измерение.Имя];
				Результат.Добавить(ЗначениеИзмерения);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Нет ни одного ведущего измерения - вернем сам ключ регистра сведений
	Если Результат.Количество() = 0 Тогда
		Результат.Добавить(Объект);
	КонецЕсли;

	Возврат Результат;
КонецФункции

&НаСервере
Процедура ОбновитьИндексСервер()
	// Ускорение обновления индекса полнотекстового поиска
	УстановитьПривилегированныйРежим(Истина);
	ПолнотекстовыйПоиск.ОбновитьИндекс(Ложь, Ложь);
	УстановитьПривилегированныйРежим(Ложь);
	
	ДатаАктуальностиИндекса = ПолнотекстовыйПоиск.ДатаАктуальности();
	ИндексАктуален = ПолнотекстовыйПоискСервер.ИндексПоискаАктуален();
	Элементы.ГруппаОбновлениеИндекса.Видимость = Не ИндексАктуален;
	Элементы.ОбновитьИндекс.Доступность = Не ИндексАктуален;
КонецПроцедуры

&НаСервере
Процедура ОбновитьАктуальностьИндекса()
	
	Попытка
		ДатаАктуальностиИндекса = ПолнотекстовыйПоиск.ДатаАктуальности();
		Если ДатаАктуальностиИндекса <> '00010101000000' Тогда
			Элементы.СостояниеИндекса.Подсказка = НСтр("ru = 'Последнее обновление индекса:'") + " " + Строка(ДатаАктуальностиИндекса);
		КонецЕсли;
		
		ИндексАктуален = ПолнотекстовыйПоискСервер.ИндексПоискаАктуален();
		Элементы.ГруппаОбновлениеИндекса.Видимость = Не ИндексАктуален;
		Элементы.ОбновитьИндекс.Доступность = Не ИндексАктуален;
		Если Не ИндексАктуален Тогда
			СостояниеИндекса = НСтр("ru = 'Индекс давно не обновлялся, поэтому результаты поиска могут быть неточными.'");
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохранитьСтрокуИВыполнитьПоискСервер(Направление, ТекущаяПозиция, СтрокаПоиска, СписокВыбора)
	// Процедура выполняет полнотекстовый поиск
	
	СохранитьСтрокуПоиска(СписокВыбора, СтрокаПоиска);
	
	Возврат ВыполнитьПоискСервер(Направление, ТекущаяПозиция, СтрокаПоиска);
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьСтрокуПоиска(СписокВыбора, СтрокаПоиска)
	
	СохраненнаяСтрока = СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	
	Если СохраненнаяСтрока <> Неопределено Тогда
		СписокВыбора.Удалить(СохраненнаяСтрока);
	КонецЕсли;
		
	СписокВыбора.Вставить(0, СтрокаПоиска);
	
	КоличествоСтрок = СписокВыбора.Количество();
	
	Если КоличествоСтрок > 20 Тогда
		СписокВыбора.Удалить(КоличествоСтрок - 1);
	КонецЕсли;
	
	Строки = СписокВыбора.ВыгрузитьЗначения();
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ПолнотекстовыйПоискСтрокиПолнотекстовогоПоиска", 
		, 
		Строки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьПоискСервер(Направление, ТекущаяПозиция, СтрокаПоиска)
	// Процедура выполняет полнотекстовый поиск
	
	РазмерПорции = 20;
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска, РазмерПорции);
	
	Если Направление = 0 Тогда
		СписокПоиска.ПерваяЧасть();
	ИначеЕсли Направление = -1 Тогда
		СписокПоиска.ПредыдущаяЧасть(ТекущаяПозиция);
	ИначеЕсли Направление = 1 Тогда
		СписокПоиска.СледующаяЧасть(ТекущаяПозиция);
	КонецЕсли;
	
	РезультатыПоиска = Новый СписокЗначений;
	Для Каждого Результат Из СписокПоиска Цикл
		СтруктураРезультата = Новый Структура;
		СтруктураРезультата.Вставить("Значение", Результат.Значение);
		СтруктураРезультата.Вставить("ЗначенияДляОткрытия", ПолучитьЗначенияДляОткрытия(Результат.Значение));
		РезультатыПоиска.Добавить(СтруктураРезультата);
	КонецЦикла;
	
	HTMLТекст = СписокПоиска.ПолучитьОтображение(ВидОтображенияПолнотекстовогоПоиска.HTMLТекст);
	
	HTMLТекст = СтрЗаменить(HTMLТекст, "<td>", "<td><font face=""Arial"" size=""2"">");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<td valign=top width=1>", "<td valign=top width=1><font face=""Arial"" size=""1"">");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<body>", "<body topmargin=0 leftmargin=0 scroll=auto>");
	HTMLТекст = СтрЗаменить(HTMLТекст, "</td>", "</font></td>");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<b>", "");
	HTMLТекст = СтрЗаменить(HTMLТекст, "</b>", "");
	
	ТекущаяПозиция = СписокПоиска.НачальнаяПозиция();
	ПолноеКоличество = СписокПоиска.ПолноеКоличество();
	СлишкомМногоРезультатов = СписокПоиска.СлишкомМногоРезультатов();
	
	Результат = Новый Структура;
	Результат.Вставить("РезультатПоиска", РезультатыПоиска);
	Результат.Вставить("ТекущаяПозиция", ТекущаяПозиция);
	Результат.Вставить("ПолноеКоличество", ПолноеКоличество);
	Результат.Вставить("HTMLТекст", HTMLТекст);
	Результат.Вставить("СлишкомМногоРезультатов", СлишкомМногоРезультатов);
	
	Возврат Результат;
	
КонецФункции


