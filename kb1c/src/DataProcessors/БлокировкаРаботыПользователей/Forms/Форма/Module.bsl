////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая()
		ИЛИ НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
		
		Элементы.ПараметрыАдминистрированияИнформационнойБазы.Видимость = Ложь;
		Элементы.ЗапретитьРаботуРегламентныхЗаданий.Видимость = Ложь;
		Элементы.ГруппаComcntr.Видимость = Ложь;
		Элементы.ГруппаПараметры.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		
		Элементы.КодДляРазблокировки.Видимость = Ложь;
		
	КонецЕсли;
	
	ПолучитьПараметрыБлокировки();
	УстановитьНачальныйСтатусЗапретаРаботыПользователей();
	ОбновитьСтраницуНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КлиентПодключенЧерезВебСервер = ОбщегоНазначенияКлиент.КлиентПодключенЧерезВебСервер();
	Если РаботаПользователейЗавершается = Истина Тогда
		Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.СтраницаСостоянияБлокировки;
		ОбновитьСтраницуСостояния(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НазванияСоединенийИБ = "";
	ТолькоКлиентскиеПриложения = АктивныТолькоКлиентскиеПриложения(НазванияСоединенийИБ);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		// Проверка возможности принудительно завершить сеансы при работе в файловом режиме.
		Если НЕ ТолькоКлиентскиеПриложения Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Имеются активные сеансы, которые не могут быть завершены принудительно. Блокировка не установлена.
					|%1'"), 
				НазванияСоединенийИБ);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		КоличествоСеансов = СтрЧислоСтрок(НазванияСоединенийИБ);
		
	Иначе	
		// Проверка возможности принудительно завершить сеансы при работе с клиента через веб-сервер.
		// Невозможно установить блокировку, на сервере не установлена ОС Microsoft Windows и не включено разделение (локальный режим работы).
		Если НЕ ТолькоКлиентскиеПриложения И Не ОбщегоНазначенияПовтИсп.РазделениеВключено() И КлиентПодключенЧерезВебСервер
			И Не СоединенияИБПовтИсп.ПараметрыОтключенияСеансов().WindowsПлатформаНаСервере Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Имеются активные сеансы, которые не могут быть завершены принудительно (т.к. сервер работает под управлением ОС, отличной от Microsoft Windows). Блокировка не установлена.
					|%1'"), 
				НазванияСоединенийИБ);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	
		
		КоличествоСеансов = ПолучитьСеансыИнформационнойБазы().Количество();
		
	КонецЕсли;
	
	// проверки возможности установки блокировки
	Если Объект.НачалоДействияБлокировки > Объект.ОкончаниеДействияБлокировки 
		И ЗначениеЗаполнено(Объект.ОкончаниеДействияБлокировки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Дата окончания блокировки не может быть меньше даты начала блокировки. Блокировка не установлена.'"),,
			"Объект.ОкончаниеДействияБлокировки",,Отказ);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.НачалоДействияБлокировки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указана дата начала блокировки.'"),,	"Объект.НачалоДействияБлокировки",,Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗавершениеРаботыПользователей" Тогда
		КоличествоСеансов = Параметр.КоличествоСеансов;
		ОбновитьСостояниеБлокировки(ЭтаФорма);
		Если Параметр.Статус = "Готово" Тогда
			Закрыть();
		ИначеЕсли Параметр.Статус = "Ошибка" Тогда
			Предупреждение(НСтр("ru = 'Не удалось завершить работу всех активных пользователей.
				|Подробности см. в Журнале регистрации.'"), 30);
			Закрыть();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Запись_ПараметрыАдминистрированияИБ" Тогда
		ПолучитьПараметрыБлокировки(Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура АктивныеПользователи(Команда)
	
	ОткрытьФорму("Обработка.АктивныеПользователи.Форма",, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыАдминистрированияИнформационнойБазы(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыАдминистрированияСервернойИБ");
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	ОчиститьСообщения();
	
	Объект.ВременноЗапретитьРаботуПользователей = Не НачальныйСтатусЗапретаРаботыПользователейЗначение;
	Если Объект.ВременноЗапретитьРаботуПользователей Тогда
		
		КоличествоСеансов = 1;
		Попытка
			Если Не ПроверитьПредусловияБлокировки() Тогда
				Возврат;
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат;
		КонецПопытки;
		
		ЗаголовокВопроса = НСтр("ru = 'Блокировка работы пользователей'");
		Если КоличествоСеансов > 1 И Объект.НачалоДействияБлокировки < ОбщегоНазначенияКлиент.ДатаСеанса() + 5 * 60 Тогда
			ТекстВопроса = НСтр("ru = 'Указано слишком близкое время начала действия блокировки, к которому пользователи могут не успеть сохранить все свои данные и завершить работу.
				|Рекомендуется установить время начала на 5 минут относительно текущего времени.'");
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Заблокировать через 5 минут'"));
			Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Заблокировать сейчас'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
			Ответ = Вопрос(ТекстВопроса, Кнопки,,, ЗаголовокВопроса);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.НачалоДействияБлокировки = ОбщегоНазначенияКлиент.ДатаСеанса() + 5 * 60;
			ИначеЕсли Ответ <> КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		ИначеЕсли Объект.НачалоДействияБлокировки > ОбщегоНазначенияКлиент.ДатаСеанса() + 60 * 60 Тогда
			ТекстВопроса = НСтр("ru = 'Указано слишком большое время начала действия блокировки (более, чем через час).
				|Запланировать блокировку на указанное время?'");
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Запланировать'"));
			Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Заблокировать сейчас'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
			Ответ = Вопрос(ТекстВопроса, Кнопки,,, ЗаголовокВопроса);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.НачалоДействияБлокировки = ОбщегоНазначенияКлиент.ДатаСеанса() + 5 * 60;
			ИначеЕсли Ответ <> КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Если Объект.НачалоДействияБлокировки - ОбщегоНазначенияКлиент.ДатаСеанса() > 15*60 Тогда
				ТекстВопроса = НСтр("ru = 'Завершение работы всех активных пользователей будет произведено в период с %1 по %2.
					|Продолжить?'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Сеансы всех активных пользователей будут завершены к %2.
					|Продолжить?'");
			КонецЕсли;
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопроса, Объект.НачалоДействияБлокировки - 900, Объект.НачалоДействияБлокировки);
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,, ЗаголовокВопроса);
			Если Ответ <> КодВозвратаДиалога.ОК Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не УстановитьСнятьБлокировку() Тогда
		Возврат;	
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Блокировка работы пользователей'"),
		"e1cib/app/Обработка.БлокировкаРаботыПользователей",
		?(Объект.ВременноЗапретитьРаботуПользователей, НСтр("ru = 'Блокировка установлена.'"), НСтр("ru = 'Блокировка снята.'")), 
		БиблиотекаКартинок.Информация32);
	СоединенияИБКлиент.УстановитьОбработчикиОжиданияЗавершенияРаботыПользователей(
		Объект.ВременноЗапретитьРаботуПользователей);
	Если Объект.ВременноЗапретитьРаботуПользователей Тогда	
		ОбновитьСтраницуСостояния(ЭтаФорма);
	Иначе
		ОбновитьСтраницуНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
	
	Если Не ОтменитьБлокировку() Тогда
		Возврат;
	КонецЕсли;
	СоединенияИБКлиент.УстановитьОбработчикиОжиданияЗавершенияРаботыПользователей(Ложь);
	Предупреждение(НСтр("ru = 'Завершение работы активных пользователей отменено. 
		|Вход в программу новых пользователей оставлен заблокированным.'"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ПроверитьПредусловияБлокировки()
	
	Возврат ПроверитьЗаполнение();

КонецФункции

&НаСервереБезКонтекста
Функция АктивныТолькоКлиентскиеПриложения(ИменаАктивныхСеансов)
	
	Результат = Истина;
	НазванияСоединенийИБ = "";
	НомерТекущегоСеанса = НомерСеансаИнформационнойБазы();
	Для каждого Сеанс Из ПолучитьСеансыИнформационнойБазы() Цикл
		Если Сеанс.НомерСеанса = НомерТекущегоСеанса Тогда
			Продолжить;
		КонецЕсли;
		Если Сеанс.ИмяПриложения <> "1CV8" И Сеанс.ИмяПриложения <> "1CV8C" И
			Сеанс.ИмяПриложения <> "WebClient" Тогда
			ИменаАктивныхСеансов = ИменаАктивныхСеансов + Символы.ПС + "• " + Сеанс;
			Результат = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция УстановитьСнятьБлокировку()
	
	Попытка
		РеквизитФормыВЗначение("Объект").ВыполнитьУстановку();
		Элементы.ГруппаОшибка.Видимость = Ложь;
	Исключение
		ЗаписьЖурналаРегистрации(СоединенияИБКлиентСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Если Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
			Элементы.ГруппаОшибка.Видимость = Истина;
			Элементы.ТекстОшибки.Заголовок = КраткоеОписаниеОшибки(ОписаниеОшибки());
		КонецЕсли;
		Возврат Ложь;
	КонецПопытки;
	
	УстановитьНачальныйСтатусЗапретаРаботыПользователей();
	КоличествоСеансов = ПолучитьСеансыИнформационнойБазы().Количество();
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ОтменитьБлокировку()
	
	Попытка
		РеквизитФормыВЗначение("Объект").ОтменитьБлокировку();
	Исключение
		ЗаписьЖурналаРегистрации(СоединенияИБКлиентСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Если Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
			Элементы.ГруппаОшибка.Видимость = Истина;
			Элементы.ТекстОшибки.Заголовок = КраткоеОписаниеОшибки(ОписаниеОшибки());
		КонецЕсли;
		Возврат Ложь;
	КонецПопытки;
	УстановитьНачальныйСтатусЗапретаРаботыПользователей();
	Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.СтраницаНастройки;
	ОбновитьСтраницуНастройки();
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОбновитьСтраницуНастройки()
	
	Элементы.КомандаПрименить.Видимость = Истина;
	Элементы.КомандаПрименить.КнопкаПоУмолчанию = Истина;
	Элементы.КомандаОстановить.Видимость = Ложь;
	Элементы.КомандаПрименить.Заголовок = ?(Объект.ВременноЗапретитьРаботуПользователей,
		НСтр("ru='Снять блокировку'"), НСтр("ru='Установить блокировку'"));
	Элементы.ЗапретитьРаботуРегламентныхЗаданий.Заголовок = ?(Объект.ВременноЗапретитьРаботуПользователей,
		НСтр("ru='Оставить блокировку работы регламентных заданий'"), НСтр("ru='Также запретить работу регламентных заданий'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтраницуСостояния(Форма)
	
	Форма.Элементы.КомандаОстановить.Видимость = Истина;
	Форма.Элементы.КомандаПрименить.Видимость = Ложь;
	Форма.Элементы.КомандаЗакрыть.КнопкаПоУмолчанию = Истина;
	ОбновитьСостояниеБлокировки(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСостояниеБлокировки(Форма)
	
	Форма.Элементы.Состояние.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Пожалуйста, подождите...
			|Работа пользователей завершается. Осталось активных сеансов: %1'"),
			Форма.КоличествоСеансов);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПараметрыБлокировки(ТолькоПроверка = Ложь)
	Обработка = РеквизитФормыВЗначение("Объект");
	Попытка
		Обработка.ПолучитьПараметрыБлокировки();
		Элементы.ГруппаОшибка.Видимость = Ложь;
	Исключение
		ЗаписьЖурналаРегистрации(СоединенияИБКлиентСервер.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Если Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
			Элементы.ГруппаОшибка.Видимость = Истина;
			Элементы.ТекстОшибки.Заголовок = КраткоеОписаниеОшибки(ОписаниеОшибки());
		КонецЕсли;
	КонецПопытки;
	Если Не ТолькоПроверка Тогда
		ЗначениеВРеквизитФормы(Обработка, "Объект");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КраткоеОписаниеОшибки(ОписаниеОшибки)
	ТекстОшибки = ОписаниеОшибки;
	Позиция = Найти(ТекстОшибки, "}:");
	Если Позиция > 0 Тогда
		ТекстОшибки = СокрЛП(Сред(ТекстОшибки, Позиция + 2, СтрДлина(ТекстОшибки)));
	КонецЕсли;
	Возврат ТекстОшибки;
КонецФункции	

&НаСервере
Процедура УстановитьНачальныйСтатусЗапретаРаботыПользователей()
	
	НачальныйСтатусЗапретаРаботыПользователейЗначение = Объект.ВременноЗапретитьРаботуПользователей;
	Если Объект.ВременноЗапретитьРаботуПользователей Тогда
		Если ТекущаяДатаСеанса() < Объект.НачалоДействияБлокировки Тогда
			НачальныйСтатусЗапретаРаботыПользователей = НСтр("ru = 'Работа пользователей в программе будет запрещена в указанное время'");
			СтатусЗапретаРаботыПользователей = "Запланировано";
		ИначеЕсли ТекущаяДатаСеанса() > Объект.ОкончаниеДействияБлокировки И Объект.ОкончаниеДействияБлокировки <> '00010101' Тогда
			НачальныйСтатусЗапретаРаботыПользователей = НСтр("ru = 'Работа пользователей в программе разрешена (истек срок запрета)'");;
			СтатусЗапретаРаботыПользователей = "Истекло";
		Иначе
			НачальныйСтатусЗапретаРаботыПользователей = НСтр("ru = 'Работа пользователей в программе запрещена'");
			СтатусЗапретаРаботыПользователей = "Запрещено";
		КонецЕсли;
	Иначе
		НачальныйСтатусЗапретаРаботыПользователей = НСтр("ru = 'Работа пользователей в программе разрешена'");
		СтатусЗапретаРаботыПользователей = "Разрешено";
	КонецЕсли;
	
КонецПроцедуры

