////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ОткрытаПоСценарию") Тогда
		ВызватьИсключение НСтр("ru='Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	ЭтаОбработка = ЭтотОбъект();
	Если ПустаяСтрока(Параметры.АдресОбъекта) Тогда
		ЭтотОбъект( ЭтаОбработка.ИнициализироватьЭтотОбъект(Параметры.НастройкиОбъекта) );
	Иначе
		ЭтотОбъект( ЭтаОбработка.ИнициализироватьЭтотОбъект(Параметры.АдресОбъекта) );
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.УзелИнформационнойБазы) Тогда
		Текст = НСтр("ru='Настройка обмена данными не найдена.'");
		ОбменДаннымиСервер.СообщитьОбОшибке(Текст, Отказ);
		Возврат;
	КонецЕсли;
	
	Заголовок = Заголовок + " (" + Объект.УзелИнформационнойБазы + ")";
	БазовоеИмяДляФормы = ЭтаОбработка.БазовоеИмяДляФормы();
	
	ПредставлениеТекущейНастройки = "";
	Элементы.НастройкиОтборов.Видимость = ПравоДоступа("СохранениеДанныхПользователя", Метаданные);
	
	СброситьНадписьКоличествТаблицы();
	ОбновитьНадписьОбщегоКоличества();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОстановитьРасчетКоличеств();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ
//

////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ДополнительнаяРегистрация ФОРМЫ
//

&НаКлиенте
Процедура ДополнительнаяРегистрацияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле <> Элементы.ДополнительнаяРегистрацияОтборСтрокой Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ДополнительнаяРегистрация.ТекущиеДанные;
	
	ИмяОткрываемойФормы = БазовоеИмяДляФормы + "Форма.РедактированиеПериодаИОтбора";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",           ТекущиеДанные.Представление);
	ПараметрыФормы.Вставить("ДействиеВыбора",      - Элементы.ДополнительнаяРегистрация.ТекущаяСтрока);
	ПараметрыФормы.Вставить("ВыборПериода",        ТекущиеДанные.ВыборПериода);
	ПараметрыФормы.Вставить("КомпоновщикНастроек", КомпоновщикНастроекПоИмениТаблицы(ТекущиеДанные.ПолноеИмяМетаданных, ТекущиеДанные.Представление, ТекущиеДанные.Отбор));
	ПараметрыФормы.Вставить("ПериодДанных",        ТекущиеДанные.Период);
	
	ПараметрыФормы.Вставить("АдресХранилищаФормы", УникальныйИдентификатор);
	
	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, Элементы.ДополнительнаяРегистрация);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяРегистрацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(БазовоеИмяДляФормы + "Форма.ВыборВидаОбъектаСоставаУзла",
		Новый Структура("УзелИнформационнойБазы", Объект.УзелИнформационнойБазы),
		Элементы.ДополнительнаяРегистрация);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяРегистрацияПередУдалением(Элемент, Отказ)
	
	Выделенные = Элементы.ДополнительнаяРегистрация.ВыделенныеСтроки;
	Количество = Выделенные.Количество();
	Если Количество>1 Тогда
		ТекстПредставления = НСтр("ru='выбранные строки'");
	ИначеЕсли Количество=1 Тогда
		ТекстПредставления = Элементы.ДополнительнаяРегистрация.ТекущиеДанные.Представление;
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаголовокВопроса = НСтр("ru='Подтверждение'");
	ТекстВопроса     = НСтр("ru='Удалить из дополнительных данных %1 ?'");    
	
	ТекстВопроса = СтрЗаменить(ТекстВопроса, "%1", ТекстПредставления);
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,ЗаголовокВопроса);
	
	Если Ответ<>КодВозвратаДиалога.Да Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяРегистрацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТипВыбранного = ТипЗнч(ВыбранноеЗначение);
	Если ТипВыбранного=Тип("Массив") Тогда
		// Добавление новой строки
		Элементы.ДополнительнаяРегистрация.ТекущаяСтрока = ДобавлениеСтрокиВДополнительныйСоставСервер(ВыбранноеЗначение);
		
	ИначеЕсли ТипВыбранного= Тип("Структура") Тогда
		Если ВыбранноеЗначение.ДействиеВыбора=3 Тогда
			// Восстановление настроек
			ПредставлениеНастройки = ВыбранноеЗначение.ПредставлениеНастройки;
			Если Не ПустаяСтрока(ПредставлениеТекущейНастройки) И ПредставлениеНастройки<>ПредставлениеТекущейНастройки Тогда
				ТекстЗаголовка = НСтр("ru='Подтверждение'");
				ТекстВопроса   = НСтр("ru='Восстановить настройки ""%1""?'");
				
				ТекстВопроса = СтрЗаменить(ТекстВопроса, "%1", ПредставлениеНастройки);
				Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,ТекстЗаголовка);
				Если Ответ=КодВозвратаДиалога.Да Тогда
					УстановитьНастройкиСервер(ПредставлениеНастройки);
				КонецЕсли;
			Иначе
				ПредставлениеТекущейНастройки = ПредставлениеНастройки;
			КонецЕсли;
		Иначе
			// Редактирование условия отбора, отрицательный номер строки
			Элементы.ДополнительнаяРегистрация.ТекущаяСтрока = РедактированиеОтбораСтрокиДополнительныйСоставСервер(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяРегистрацияПослеУдаления(Элемент)
	ОбновитьНадписьОбщегоКоличества();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
//

&НаКлиенте
Процедура ПодтвердитьВыбор(Команда)
	ОповеститьОВыборе( РезультатВыбораСервер() );
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТекстОбщихПараметров(Команда)
	ОткрытьФорму(БазовоеИмяДляФормы +  "Форма.ОбщиеПараметрыСинхронизации",
		Новый Структура("УзелИнформационнойБазы", Объект.УзелИнформационнойБазы));
КонецПроцедуры

&НаКлиенте
Процедура СоставВыгрузки(Команда)
	ОткрытьФорму(БазовоеИмяДляФормы + "Форма.СоставВыгрузки",
		Новый Структура("АдресОбъекта", АдресОбъектаДополнительнойВыгрузки() ));
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличество(Команда)
	ЗапуститьАнимациюРасчетаКоличества();
	Если ОбновитьКоличествоСервер() Тогда
		ОстановитьАнимациюРасчетаКоличества();
	Иначе
		ПодключитьОбработчикОжидания("Подключаемый_ОжиданиеРасчетаКоличества", 3, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборов(Команда)
	
	// Выбор из меню - списка
	СписокВариантов = ПрочитатьСписокВариантовНастроекСервер();
	
	Текст = НСтр("ru='Сохранить текущую настройку...'");
	СписокВариантов.Добавить(1, Текст, , БиблиотекаКартинок.СохранитьНастройкиОтчета);
	
	ВыбранныйВариант = ВыбратьИзМеню(СписокВариантов, Элементы.НастройкиОтборов);
	Если ВыбранныйВариант=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеНастройки = ВыбранныйВариант.Значение;
	Если ТипЗнч(ПредставлениеНастройки)=Тип("Строка") Тогда
		ТекстЗаголовка = НСтр("ru='Подтверждение'");
		ТекстВопроса   = НСтр("ru='Восстановить настройки ""%1""?'");
		
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%1", ПредставлениеНастройки);
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,ТекстЗаголовка);
		Если Ответ=КодВозвратаДиалога.Да Тогда
			УстановитьНастройкиСервер(ПредставлениеНастройки);
		КонецЕсли;
		
	ИначеЕсли ПредставлениеНастройки=1 Тогда
		// Форма всех настроек
		ОткрытьФорму(БазовоеИмяДляФормы + "Форма.РедактированиеСоставаНастроек",
			Новый Структура("ЗакрыватьПриВыборе, ДействиеВыбора, Объект, ПредставлениеТекущейНастройки", 
				Истина, 3, 
				Объект, ПредставлениеТекущейНастройки
			), Элементы.ДополнительнаяРегистрация);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

&НаСервере
Функция РезультатВыбораСервер()
	ОбъектРезультат = Новый Структура("УзелИнформационнойБазы, ВариантВыгрузки, КомпоновщикОтбораВсехДокументов, ПериодОтбораВсехДокументов");
	ЗаполнитьЗначенияСвойств(ОбъектРезультат, Объект);
	
	ОбъектРезультат.Вставить("ДополнительнаяРегистрация", 
		ТаблицаВМассивСтруктур( РеквизитФормыВЗначение("Объект.ДополнительнаяРегистрация")) );
	
	Возврат Новый Структура("ДействиеВыбора, АдресОбъекта", 
		Параметры.ДействиеВыбора, ПоместитьВоВременноеХранилище(ОбъектРезультат, УникальныйИдентификатор)
	);
КонецФункции

&НаСервере
Функция ТаблицаВМассивСтруктур(Знач ТаблицаЗначений)
	Результат = Новый Массив;
	
	ИменаКолонок = "";
	Для Каждого Колонка из ТаблицаЗначений.Колонки Цикл
		ИменаКолонок = ИменаКолонок + "," + Колонка.Имя;
	КонецЦикла;
	ИменаКолонок = Сред(ИменаКолонок, 2);
	
	Для Каждого Строка Из ТаблицаЗначений Цикл
		СтруктураСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
		Результат.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОжиданиеРасчетаКоличества()
	Если ЗагрузитьЗначенияКоличеств() Тогда
		ОстановитьАнимациюРасчетаКоличества();
	Иначе
		ПодключитьОбработчикОжидания("Подключаемый_ОжиданиеРасчетаКоличества", 3, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЭтотОбъект(НовыйОбъект=Неопределено)
	Если НовыйОбъект=Неопределено Тогда
		Возврат РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	ЗначениеВРеквизитФормы(НовыйОбъект, "Объект");
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция ДобавлениеСтрокиВДополнительныйСоставСервер(МассивВыбора)
	
	Если МассивВыбора.Количество()=1 Тогда
		Строка = ДобавитьВДополнительныйСоставВыгрузки(МассивВыбора[0]);
	Иначе
		Строка = Неопределено;
		Для Каждого ЭлементВыбора Из МассивВыбора Цикл
			ТестСтрока = ДобавитьВДополнительныйСоставВыгрузки(ЭлементВыбора);
			Если Строка=Неопределено Тогда
				Строка = ТестСтрока;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Строка;
КонецФункции

&НаСервере 
Функция РедактированиеОтбораСтрокиДополнительныйСоставСервер(СтруктураВыбора)
	
	ТекущиеДанные = Объект.ДополнительнаяРегистрация.НайтиПоИдентификатору(-СтруктураВыбора.ДействиеВыбора);
	Если ТекущиеДанные=Неопределено Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ТекущиеДанные.Период       = СтруктураВыбора.ПериодДанных;
	ТекущиеДанные.Отбор        = СтруктураВыбора.КомпоновщикНастроек.Настройки.Отбор;
	ТекущиеДанные.ОтборСтрокой = ПредставлениеОтбора(ТекущиеДанные.Период, ТекущиеДанные.Отбор);
	ТекущиеДанные.Количество   = НСтр("ru='Не рассчитано'");
	
	ОбновитьНадписьОбщегоКоличества();
	
	Возврат СтруктураВыбора.ДействиеВыбора;
КонецФункции

&НаСервере
Функция ДобавитьВДополнительныйСоставВыгрузки(Элемент)
	
	СуществующиеСтроки = Объект.ДополнительнаяРегистрация.НайтиСтроки( 
		Новый Структура("ПолноеИмяМетаданных", Элемент.ПолноеИмяМетаданных));
	Если СуществующиеСтроки.Количество()>0 Тогда
		Строка = СуществующиеСтроки[0];
	Иначе
		Строка = Объект.ДополнительнаяРегистрация.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Элемент,,"Представление");
		
		Строка.Представление = Элемент.ПредставлениеСписка;
		Строка.ОтборСтрокой  = ПредставлениеОтбора(Строка.Период, Строка.Отбор);
		Объект.ДополнительнаяРегистрация.Сортировать("Представление");
		
		Строка.Количество = НСтр("ru='Не рассчитано'");
		ОбновитьНадписьОбщегоКоличества();
	КонецЕсли;
	
	Возврат Строка.ПолучитьИдентификатор();
КонецФункции

&НаСервере
Функция ПредставлениеОтбора(Период, Отбор)
	Возврат ЭтотОбъект().ПредставлениеОтбора(Период, Отбор);
КонецФункции

&НаСервере
Функция КомпоновщикНастроекПоИмениТаблицы(ИмяТаблицы, Представление, Отбор)
	Возврат ЭтотОбъект().КомпоновщикНастроекПоИмениТаблицы(ИмяТаблицы, Представление, Отбор, УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ЗапуститьАнимациюРасчетаКоличества()
	Элементы.КартинкаРасчетаКоличества.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьАнимациюРасчетаКоличества()
	Элементы.КартинкаРасчетаКоличества.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура ОстановитьАнимациюРасчетаКоличестваСервер()
	Элементы.КартинкаРасчетаКоличества.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура ОстановитьРасчетКоличеств()
	
	ОбменДаннымиСервер.ОтменитьФоновоеЗадание(ИдентификаторФоновогоЗадания);
	Если Не ПустаяСтрока(АдресРезультатаФоновогоЗадания) Тогда
		УдалитьИзВременногоХранилища(АдресРезультатаФоновогоЗадания);
	КонецЕсли;
	
	АдресРезультатаФоновогоЗадания = "";
	ИдентификаторФоновогоЗадания   = Неопределено;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьКоличествоСервер()
	
	ОстановитьРасчетКоличеств();
	
	// Запускаем новое, следить будем из обработки ожидания
	АдресРезультатаФоновогоЗадания = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);
	ИдентификаторФоновогоЗадания = ЭтотОбъект().ФоновоеФормированиеДереваЗначений(АдресРезультатаФоновогоЗадания);
	Если ОбменДаннымиСервер.ФоновоеЗаданиеЗавершено(ИдентификаторФоновогоЗадания) Тогда
		Возврат ЗагрузитьЗначенияКоличеств();
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Функция ЗагрузитьЗначенияКоличеств()
	
	Если Не ОбменДаннымиСервер.ФоновоеЗаданиеЗавершено(ИдентификаторФоновогоЗадания) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДеревоКоличеств = Неопределено;
	Если Не ПустаяСтрока(АдресРезультатаФоновогоЗадания) Тогда
		ДеревоКоличеств = ПолучитьИзВременногоХранилища(АдресРезультатаФоновогоЗадания);
		УдалитьИзВременногоХранилища(АдресРезультатаФоновогоЗадания);
	КонецЕсли;
	Если ТипЗнч(ДеревоКоличеств)<>Тип("ДеревоЗначений") Тогда
		ДеревоКоличеств = Новый ДеревоЗначений;
	КонецЕсли;
	
	Если ДеревоКоличеств.Строки.Количество()=0 Тогда
		ОбновитьНадписьОбщегоКоличества(Неопределено);
		Возврат Истина;
	КонецЕсли;
	
	ЭтаОбработка = ЭтотОбъект();
	
	СтрокиКоличеств = ДеревоКоличеств.Строки;
	Для Каждого Строка Из Объект.ДополнительнаяРегистрация Цикл
		
		КолвоВыгружать = 0;
		КолвоВсего     = 0;
		СоставСтроки = ЭтаОбработка.СоставУкрупненнойГруппыМетаданных(Строка.ПолноеИмяМетаданных);
		Для Каждого ИмяТаблицы Из СоставСтроки Цикл
			СтрокаДанных = СтрокиКоличеств.Найти(ИмяТаблицы, "ПолноеИмяМетаданных", Ложь);
			Если СтрокаДанных<>Неопределено Тогда
				КолвоВыгружать = КолвоВыгружать + СтрокаДанных.КоличествоДляВыгрузки;
				КолвоВсего     = КолвоВсего     + СтрокаДанных.ОбщееКоличество;
			КонецЕсли;
		КонецЦикла;
		
		Строка.Количество = Формат(КолвоВыгружать, "ЧН=") + " / " + Формат(КолвоВсего, "ЧН=");
	КонецЦикла;
	
	// Общие итоги
	СтрокаДанных = СтрокиКоличеств.Найти(Неопределено, "ПолноеИмяМетаданных", Ложь);
	ОбновитьНадписьОбщегоКоличества(?(СтрокаДанных=Неопределено, Неопределено, СтрокаДанных.КоличествоДляВыгрузки));
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ОбновитьНадписьОбщегоКоличества(Количество=Неопределено) 
	
	ОстановитьРасчетКоличеств();
	
	Если Количество=Неопределено Тогда
		ТекстКоличества = НСтр("ru='<не рассчитано>'");
	Иначе
		ТекстКоличества = НСтр("ru='%1 объект(ов)'");
		ТекстКоличества = СтрЗаменить(ТекстКоличества, "%1", Формат(Количество, "ЧН="));
	КонецЕсли;
	
	Элементы.ОбновитьКоличество.Заголовок  = ТекстКоличества;
КонецПроцедуры

&НаСервере
Процедура СброситьНадписьКоличествТаблицы()
	ТекстКоличеств = НСтр("ru='Не рассчитано'");
	Для Каждого Строка Из Объект.ДополнительнаяРегистрация Цикл
		Строка.Количество = ТекстКоличеств;
	КонецЦикла;
	ОстановитьАнимациюРасчетаКоличестваСервер();
КонецПроцедуры

&НаСервере
Функция ПрочитатьСписокВариантовНастроекСервер()
	ФильтрВариантов = Новый Массив;
	ФильтрВариантов.Добавить(Объект.ВариантВыгрузки);
	
	Возврат ЭтотОбъект().ПрочитатьПредставленияСпискаНастроек(Объект.УзелИнформационнойБазы, ФильтрВариантов);
КонецФункции

&НаСервере
Процедура УстановитьНастройкиСервер(ПредставлениеНастройки)
	
	НеизменныеДанные = Новый Структура("УзелИнформационнойБазы, ВариантВыгрузки, КомпоновщикОтбораВсехДокументов, ПериодОтбораВсехДокументов");
	ЗаполнитьЗначенияСвойств(НеизменныеДанные, Объект);
	
	ЭтаОбработка = ЭтотОбъект();
	ЭтаОбработка.ВосстановитьТекущееИзНастроек(ПредставлениеНастройки);
	ЭтотОбъект(ЭтаОбработка);
	
	ЗаполнитьЗначенияСвойств(Объект, НеизменныеДанные);
	ДополнениеВыгрузкиПредставлениеНастройки = ПредставлениеНастройки;
	
	СброситьНадписьКоличествТаблицы();
	ОбновитьНадписьОбщегоКоличества();
КонецПроцедуры

&НаСервере
Функция АдресОбъектаДополнительнойВыгрузки()
	Возврат ЭтотОбъект().СохранитьЭтотОбъект(УникальныйИдентификатор);
КонецФункции
