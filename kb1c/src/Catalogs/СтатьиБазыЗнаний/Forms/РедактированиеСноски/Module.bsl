////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Гиперссылка.Пометка = ЗначениеЗаполнено(ЭтотОбъект.ГиперссылкаАдрес);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ГруппаСноскиПриИзменении(Элемент)
	
	ЗаполнитьСписокСносокПоГруппе();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		СтрокиПоИдентификатору = ЭтотОбъект.Сноски.НайтиСтроки(Новый Структура("Идентификатор", ЭтотОбъект.Идентификатор));
		Если СтрокиПоИдентификатору.Количество() = 0 Тогда
			ЭтотОбъект.Идентификатор = "";
		Иначе 
			Если ЭтотОбъект.Наименование <> СтрокиПоИдентификатору[0].Наименование Тогда
		        ЭтотОбъект.Идентификатор = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокиПоИдентификатору = ЭтотОбъект.Сноски.НайтиСтроки(Новый Структура("Идентификатор", ВыбранноеЗначение));
	Если СтрокиПоИдентификатору.Количество() = 0 Тогда
		ЭтотОбъект.Идентификатор	= "";
		ЭтотОбъект.Гиперссылка		= "";
	Иначе 
		СтандартнаяОбработка		= Ложь;
		
		ЭтотОбъект.Идентификатор	= ВыбранноеЗначение;
		
		ЗаполнитьДанныеФормыПоИдентификатору();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.Сноски) = Тип("ФиксированныйМассив") Тогда
		Для Каждого СтруктураСноски Из Параметры.Сноски Цикл
			НоваяСтрока = ЭтотОбъект.Сноски.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСноски);
			
			Если Элементы.ГруппаСноски.СписокВыбора.НайтиПоЗначению(СтруктураСноски.Группа) = Неопределено Тогда
				Элементы.ГруппаСноски.СписокВыбора.Добавить(СтруктураСноски.Группа);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Параметры.Гиперссылка) И Лев(Параметры.Гиперссылка, 4) = "ref:" Тогда
		ЭтотОбъект.Идентификатор = Сред(Параметры.Гиперссылка, 5);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		ЗаполнитьДанныеФормыПоИдентификатору();
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Наименование");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ

&НаКлиенте
Процедура Гиперссылка(Команда)
	
	ОписаниеСсылки = Новый Структура("Идентификатор, Тип, Адрес, Открывать, Подсказка"
		, "00000000-0000-0000-0000-000000000000"
		, ЭтотОбъект.ГиперссылкаТип
		, ЭтотОбъект.ГиперссылкаАдрес
		, ЭтотОбъект.ГиперссылкаОткрывать
		, ЭтотОбъект.ГиперссылкаПодсказка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Гиперссылка"	, "");
	ПараметрыФормы.Вставить("Текст"			, ЭтотОбъект.Наименование);
	ПараметрыФормы.Вставить("ОписаниеСсылки", Новый ФиксированнаяСтруктура(ОписаниеСсылки));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОкончанииРедактированияГиперссылки", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.СтатьиБазыЗнаний.Форма.РедактированиеГиперссылки",
		ПараметрыФормы,
		ЭтотОбъект, , , ,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		КоличествоСтрок				= ЭтотОбъект.Сноски.Количество();
		ЭтотОбъект.Идентификатор	= ПолучитьИдентификатор();
	КонецЕсли;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Идентификатор"			, ЭтотОбъект.Идентификатор);
	ПараметрыЗакрытия.Вставить("Группа"					, ЭтотОбъект.Группа);
	ПараметрыЗакрытия.Вставить("Наименование"			, ЭтотОбъект.Наименование);
	ПараметрыЗакрытия.Вставить("ГиперссылкаТип"			, ЭтотОбъект.ГиперссылкаТип);
	ПараметрыЗакрытия.Вставить("ГиперссылкаАдрес"		, ЭтотОбъект.ГиперссылкаАдрес);
	ПараметрыЗакрытия.Вставить("ГиперссылкаОткрывать"	, ЭтотОбъект.ГиперссылкаОткрывать);
	ПараметрыЗакрытия.Вставить("ГиперссылкаПодсказка"	, ЭтотОбъект.ГиперссылкаПодсказка);
	ПараметрыЗакрытия.Вставить("Модифицированность"		, ЭтотОбъект.Модифицированность);
	
	ЭтаФорма.Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ МЕТОДЫ

&НаКлиенте
Процедура ЗаполнитьДанныеФормыПоИдентификатору()
	
	СтрокиСноски = ЭтотОбъект.Сноски.НайтиСтроки(Новый Структура("Идентификатор", ЭтотОбъект.Идентификатор));
	Если СтрокиСноски.Количество() > 0 Тогда
		ТекущаяСтрока = СтрокиСноски[0];
		
		ЭтотОбъект.Группа				= ТекущаяСтрока.Группа;
		ЭтотОбъект.Наименование			= ТекущаяСтрока.Наименование;
		ЭтотОбъект.ГиперссылкаТип		= ТекущаяСтрока.ГиперссылкаТип;
		ЭтотОбъект.ГиперссылкаАдрес		= ТекущаяСтрока.ГиперссылкаАдрес;
		ЭтотОбъект.ГиперссылкаОткрывать	= ТекущаяСтрока.ГиперссылкаОткрывать;
		ЭтотОбъект.ГиперссылкаПодсказка	= ТекущаяСтрока.ГиперссылкаПодсказка;
		
		ЗаполнитьСписокСносокПоГруппе();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокСносокПоГруппе()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокиПоГруппе = ЭтотОбъект.Сноски.НайтиСтроки(Новый Структура("Группа", ЭтотОбъект.Группа));
	Для Каждого СтрокаСноски Из СтрокиПоГруппе Цикл
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаСноски.Идентификатор, СтрокаСноски.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОкончанииРедактированияГиперссылки(Результат, ДопПараметры) Экспорт 
	
	Если НЕ ТипЗнч(Результат) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ГиперссылкаТип		= Результат.Тип;
	ЭтотОбъект.ГиперссылкаАдрес		= Результат.Адрес;
	ЭтотОбъект.ГиперссылкаОткрывать	= Результат.Открывать;
	ЭтотОбъект.ГиперссылкаПодсказка	= Результат.Подсказка;
	
	Если Результат.Модифицированность Тогда
		ЭтотОбъект.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИдентификатор()
	
	МаксимальныйНомер = 0;
	
	Для Каждого СтрокаТаблицы Из ЭтотОбъект.Сноски Цикл
		ТекущийНомер = Число(Сред(СтрокаТаблицы.Идентификатор, 2));
		МаксимальныйНомер = Макс(МаксимальныйНомер, ТекущийНомер);
	КонецЦикла;
	
	Возврат "#" + Формат(МаксимальныйНомер + 1, "ЧГ=");
	
КонецФункции