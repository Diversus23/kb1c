Функция ПолучитьПомеченныйНаУдаление()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КомментарииБазыЗнаний.Ссылка
	|ИЗ
	|	Справочник.КомментарииБазыЗнаний КАК КомментарииБазыЗнаний
	|ГДЕ
	|	КомментарииБазыЗнаний.ПометкаУдаления";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Процедура ОчиститьСвязиПоКомментарию(КомментарийСсылка)
	
	НаборЗаписей = РегистрыСведений.СвязьКомментариевБазыЗнаний.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Родитель.Установить(КомментарийСсылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПУБЛИЧНЫЕ ОБРАБОТЧИКИ

// Возвращает значение родителя по пункту
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.КомментарииБазыЗнаний
//
// Возвращаемое значение
//	Массив. СправочникСсылка.КомментарииБазыЗнаний
//
Функция ПолучитьПодчиненныеКомментарии(КомментарийСсылка) Экспорт
	Если КомментарийСсылка.Пустая() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", КомментарийСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СвязьКомментариевБазыЗнаний.Ссылка, ЗНАЧЕНИЕ(Справочник.КомментарииБазыЗнаний.ПустаяСсылка)) КАК Ссылка
	|ИЗ
	|	РегистрСведений.СвязьКомментариевБазыЗнаний КАК СвязьКомментариевБазыЗнаний
	|ГДЕ
	|	СвязьКомментариевБазыЗнаний.Родитель = &Родитель
	|	И НЕ СвязьКомментариевБазыЗнаний.Ссылка.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

// Возвращает значение родителя по пункту
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.КомментарииБазыЗнаний
//
// Возвращаемое значение
//	СправочникСсылка.КомментарииБазыЗнаний
//
Функция ПолучитьЗначениеРодитель(знач КомментарийСсылка) Экспорт
	Если КомментарийСсылка.Пустая() Тогда
		Возврат Справочники.КомментарииБазыЗнаний.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", КомментарийСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СвязьКомментариевБазыЗнаний.Родитель, ЗНАЧЕНИЕ(Справочник.КомментарииБазыЗнаний.ПустаяСсылка)) КАК Родитель
	|ИЗ
	|	РегистрСведений.СвязьКомментариевБазыЗнаний КАК СвязьКомментариевБазыЗнаний
	|ГДЕ
	|	СвязьКомментариевБазыЗнаний.Ссылка = &Ссылка
	|	И НЕ СвязьКомментариевБазыЗнаний.Родитель.ПометкаУдаления";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.КомментарииБазыЗнаний.ПустаяСсылка();
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Родитель;
	КонецЕсли;
КонецФункции

// Добавляет комментарий, при этом используя имеющиеся помеченные на удаление
//
// Возвращаемое значение
//	СправочникОбъект.КомментарииБазыЗнаний
//
Функция СоздатьКомментарий() Экспорт
	
	УдаленныйКомментарий = ПолучитьПомеченныйНаУдаление();
	Если ЗначениеЗаполнено(УдаленныйКомментарий) Тогда
		ОчиститьСвязиПоКомментарию(УдаленныйКомментарий);
		ЭлементОбъект = УдаленныйКомментарий.ПолучитьОбъект();
	Иначе 
		ЭлементОбъект = Справочники.КомментарииБазыЗнаний.СоздатьЭлемент();
	КонецЕсли;
	
	Возврат ЭлементОбъект;
	
КонецФункции

// Удаляет выбранный комментарий, при этом переподчиняет пункты вышестоящему родителю
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.КомментарииБазыЗнаний
//
Процедура УдалитьКомментарий(знач КомментарийСсылка) Экспорт
	
	РодительСсылки		= ПолучитьЗначениеРодитель(КомментарийСсылка);
	ПодчиненныеСсылки	= ПолучитьПодчиненныеКомментарии(КомментарийСсылка);
	Для Каждого ЭлементСсылка Из ПодчиненныеСсылки Цикл
		РегистрыСведений.СвязьКомментариевБазыЗнаний.УстановитьСвязь(РодительСсылки, ЭлементСсылка);
	КонецЦикла;
	
	ВладелецКомментария	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КомментарийСсылка, "Владелец");
	
	ЭлементОбъект = КомментарийСсылка.ПолучитьОбъект();
	ЭлементОбъект.Удалить();
	
	ПараметрыВыполнения = Новый Структура("Статья", ВладелецКомментария);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрыВыполнения);
	
	ФоновыеЗадания.Выполнить(
		"БазаЗнаний.ОбновитьКоличествоКомментариев",
		МассивПараметров, ,
		"Обновление количества комментариев");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ СОБЫТИЯ

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Автор");
	Поля.Добавить("Период");
	Поля.Добавить("Код");
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Представление = "Комментарий: " + Строка(Данные.Автор) + " от " + Формат(Данные.Период, "ДЛФ=DT") + " (" + СокрЛП(Данные.Код) + ")";
КонецПроцедуры
