////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ПапкаДляДобавления") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Данная обработка вызывается из других процедур конфигурации.
			           |Вручную ее вызывать запрещено.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.ПапкаДляДобавления <> Неопределено Тогда
		ВладелецФайлов = Параметры.ПапкаДляДобавления;
		Если ТипЗнч(ВладелецФайлов) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
			ПапкаДляДобавления = ВладелецФайлов;
		Иначе
			Элементы.ПапкаДляДобавления.Видимость = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	Если Параметры.МассивИменФайлов <> Неопределено Тогда
		Для Каждого ПутьФайла Из Параметры.МассивИменФайлов Цикл
			ФайлПеренесенный = Новый Файл(ПутьФайла);
			НовыйЭлемент = ВыбранныеФайлы.Добавить();
			НовыйЭлемент.Путь = ПутьФайла;
			НовыйЭлемент.ИндексКартинки = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИндексПиктограммыФайла(ФайлПеренесенный.Расширение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ХранитьВерсии = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Файлы.Форма.ВыборКодировки") Тогда
		Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
			Возврат;
		КонецЕсли;
		КодировкаТекстаФайла = ВыбранноеЗначение.Значение;
		КодировкаПредставление = ВыбранноеЗначение.Представление;
		УстановитьПредставлениеКомандыКодировки(КодировкаПредставление);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ВыбранныеФайлы

&НаКлиенте
Процедура ВыбранныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ДобавитьВыполнить()
	
	ОчиститьСообщения();
	
	ПоляНеЗаполнены = Ложь;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Нет файлов для добавления.'"), , "ВыбранныеФайлы");
		ПоляНеЗаполнены = Истина;
	КонецЕсли;
	
	ВладелецФайловДляДобавления = ВладелецФайлов;
	Если ТипЗнч(ВладелецФайлов) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		ВладелецФайловДляДобавления = ПапкаДляДобавления;
	КонецЕсли;

	Если ВладелецФайловДляДобавления.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите папку.'"), , "ПапкаДляДобавления");
		ПоляНеЗаполнены = Истина;
	КонецЕсли;
	
	Если ПоляНеЗаполнены = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПсевдоФайловаяСистема = Новый Соответствие; // соответствие путь к директории - файлы и папки в ней 
	
	ВыбранныеФайлыСписокЗначений = Новый СписокЗначений;
	Для Каждого СтрокаСписка Из ВыбранныеФайлы Цикл
		ВыбранныеФайлыСписокЗначений.Добавить(СтрокаСписка.Путь);
	КонецЦикла;
	
	#Если ВебКлиент Тогда
		
		МассивОпераций = Новый Массив;
		
		Для Каждого СтрокаСписка Из ВыбранныеФайлы Цикл
			ОписаниеВызова = Новый Массив;
			ОписаниеВызова.Добавить("ПоместитьФайлы");
			
			ПомещаемыеФайлы = Новый Массив;
			Описание = Новый ОписаниеПередаваемогоФайла(СтрокаСписка.Путь, "");
			ПомещаемыеФайлы.Добавить(Описание);
			ОписаниеВызова.Добавить(ПомещаемыеФайлы);
			
			ОписаниеВызова.Добавить(Неопределено);  // не используется
			ОписаниеВызова.Добавить(Неопределено);  // не используется
			ОписаниеВызова.Добавить(Ложь); 			// Интерактивно = Ложь
			
			МассивОпераций.Добавить(ОписаниеВызова);
		КонецЦикла;
		
		Если НЕ ЗапроситьРазрешениеПользователя(МассивОпераций) Тогда
			// пользователь не дал разрешения
			Закрыть();
			Возврат;
		КонецЕсли;	
	#КонецЕсли	
	
	ДобавленныеФайлы = Новый Массив;
	
	РаботаСФайламиСлужебныйКлиент.ИмпортФайловВыполнить(
		ВладелецФайловДляДобавления, 
		ВыбранныеФайлыСписокЗначений, 
		Комментарий, 
		ХранитьВерсии, 
		УдалятьФайлыПослеДобавления, 
		Ложь, // Ложь - нерекурсивно
		УникальныйИдентификатор,
		ПсевдоФайловаяСистема,
		ДобавленныеФайлы,
		Ложь,
		КодировкаТекстаФайла); 
		
	Закрыть();
	
	ПараметрКоманды = Неопределено;
	Если ДобавленныеФайлы.Количество() > 0 Тогда
		Индекс = ДобавленныеФайлы.Количество() - 1;
		ПараметрКоманды = ДобавленныеФайлы[Индекс].ФайлСсылка;
	КонецЕсли;
	
	Оповестить("ИмпортФайловЗавершен", ПараметрКоманды,);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлыВыполнить()
	
	ОбщегоНазначенияКлиент.ПредложитьУстановкуРасширенияРаботыСФайлами();
	РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();

	Если РасширениеПодключено Тогда
		
		Режим = РежимДиалогаВыбораФайла.Открытие;
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Истина;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файлы'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранныеФайлы.Очистить();
			
			МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
			Для Каждого ИмяФайла Из МассивФайлов Цикл
				ФайлПеренесенный = Новый Файл(ИмяФайла);
				НовыйЭлемент = ВыбранныеФайлы.Добавить();
				НовыйЭлемент.Путь = ИмяФайла;
				НовыйЭлемент.ИндексКартинки = ФайловыеФункцииСлужебныйКлиентСервер.ПолучитьИндексПиктограммыФайла(ФайлПеренесенный.Расширение);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодировку(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяКодировка", КодировкаТекстаФайла);
	ОткрытьФорму("Справочник.Файлы.Форма.ВыборКодировки", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьПредставлениеКомандыКодировки(Представление)
	
	Команды.ВыбратьКодировку.Заголовок = Представление;
	
КонецПроцедуры
